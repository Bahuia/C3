{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which city has most number of departing flights?", "sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city has most number of departing flights?", "question_toks": ["Which", "city", "has", "most", "number", "of", "departing", "flights", "?"], "guid": 0}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the name, city, and country of the airport that has the lowest altitude.", "sql": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1", "query_toks": ["SELECT", "name", ",", "city", ",", "country", "FROM", "airports", "ORDER", "BY", "elevation", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", "from", "airports", "order", "by", "elevation", "limit", "value"], "question": "Find the name, city, and country of the airport that has the lowest altitude.", "question_toks": ["Find", "the", "name", ",", "city", ",", "and", "country", "of", "the", "airport", "that", "has", "the", "lowest", "altitude", "."], "guid": 1}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | How many ships are there?", "sql": "SELECT count(*) FROM ship", "example": {"db_id": "ship_mission", "query": "SELECT count(*) FROM ship", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "ship"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "ship"], "question": "How many ships are there?", "question_toks": ["How", "many", "ships", "are", "there", "?"], "guid": 2}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What are the types of the ships that have both shiips with tonnage more than 6000 and those with tonnage less than 4000?", "sql": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000", "example": {"db_id": "ship_mission", "query": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000", "query_toks": ["SELECT", "TYPE", "FROM", "ship", "WHERE", "Tonnage", ">", "6000", "INTERSECT", "SELECT", "TYPE", "FROM", "ship", "WHERE", "Tonnage", "<", "4000"], "query_toks_no_value": ["select", "type", "from", "ship", "where", "tonnage", ">", "value", "intersect", "select", "type", "from", "ship", "where", "tonnage", "<", "value"], "question": "What are the types of the ships that have both shiips with tonnage more than 6000 and those with tonnage less than 4000?", "question_toks": ["What", "are", "the", "types", "of", "the", "ships", "that", "have", "both", "shiips", "with", "tonnage", "more", "than", "6000", "and", "those", "with", "tonnage", "less", "than", "4000", "?"], "guid": 3}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What are the names of ships that have more than one captain?", "sql": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1", "example": {"db_id": "ship_1", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1", "query_toks": ["SELECT", "t1.name", "FROM", "ship", "AS", "t1", "JOIN", "captain", "AS", "t2", "ON", "t1.ship_id", "=", "t2.ship_id", "GROUP", "BY", "t2.ship_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "ship", "as", "t1", "join", "captain", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "group", "by", "t2", ".", "ship_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of ships that have more than one captain?", "question_toks": ["What", "are", "the", "names", "of", "ships", "that", "have", "more", "than", "one", "captain", "?"], "guid": 4}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Give the flight numbers of flights landing at APG.", "sql": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "example": {"db_id": "flight_2", "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "query_toks": ["SELECT", "FlightNo", "FROM", "FLIGHTS", "WHERE", "DestAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "flightno", "from", "flights", "where", "destairport", "=", "value"], "question": "Give the flight numbers of flights landing at APG.", "question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "landing", "at", "APG", "."], "guid": 5}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the ids of all employees that don't have certificates?", "sql": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate", "example": {"db_id": "flight_1", "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate", "query_toks": ["SELECT", "eid", "FROM", "Employee", "EXCEPT", "SELECT", "eid", "FROM", "Certificate"], "query_toks_no_value": ["select", "eid", "from", "employee", "except", "select", "eid", "from", "certificate"], "question": "What are the ids of all employees that don't have certificates?", "question_toks": ["What", "are", "the", "ids", "of", "all", "employees", "that", "do", "n't", "have", "certificates", "?"], "guid": 6}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | Show the id and builder of the railway that are associated with the most trains.", "sql": "SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "railway", "query": "SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.Railway_ID", ",", "T1.Builder", "FROM", "railway", "AS", "T1", "JOIN", "train", "AS", "T2", "ON", "T1.Railway_ID", "=", "T2.Railway_ID", "GROUP", "BY", "T2.Railway_ID", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "railway_id", ",", "t1", ".", "builder", "from", "railway", "as", "t1", "join", "train", "as", "t2", "on", "t1", ".", "railway_id", "=", "t2", ".", "railway_id", "group", "by", "t2", ".", "railway_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the id and builder of the railway that are associated with the most trains.", "question_toks": ["Show", "the", "id", "and", "builder", "of", "the", "railway", "that", "are", "associated", "with", "the", "most", "trains", "."], "guid": 7}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the names of all aicrafts that have never won any match?", "sql": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)", "example": {"db_id": "aircraft", "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)", "query_toks": ["SELECT", "Aircraft", "FROM", "aircraft", "WHERE", "Aircraft_ID", "NOT", "IN", "(", "SELECT", "Winning_Aircraft", "FROM", "MATCH", ")"], "query_toks_no_value": ["select", "aircraft", "from", "aircraft", "where", "aircraft_id", "not", "in", "(", "select", "winning_aircraft", "from", "match", ")"], "question": "What are the names of all aicrafts that have never won any match?", "question_toks": ["What", "are", "the", "names", "of", "all", "aicrafts", "that", "have", "never", "won", "any", "match", "?"], "guid": 8}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | Show names of pilots that have more than one record.", "sql": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1", "example": {"db_id": "pilot_record", "query": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T2.Pilot_name", ",", "COUNT", "(", "*", ")", "FROM", "pilot_record", "AS", "T1", "JOIN", "pilot", "AS", "T2", "ON", "T1.pilot_ID", "=", "T2.pilot_ID", "GROUP", "BY", "T2.Pilot_name", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t2", ".", "pilot_name", ",", "count", "(", "*", ")", "from", "pilot_record", "as", "t1", "join", "pilot", "as", "t2", "on", "t1", ".", "pilot_id", "=", "t2", ".", "pilot_id", "group", "by", "t2", ".", "pilot_name", "having", "count", "(", "*", ")", ">", "value"], "question": "Show names of pilots that have more than one record.", "question_toks": ["Show", "names", "of", "pilots", "that", "have", "more", "than", "one", "record", "."], "guid": 9}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What are airport names at City 'Aberdeen'?", "sql": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "example": {"db_id": "flight_2", "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "query_toks": ["SELECT", "AirportName", "FROM", "AIRPORTS", "WHERE", "City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "city", "=", "value"], "question": "What are airport names at City 'Aberdeen'?", "question_toks": ["What", "are", "airport", "names", "at", "City", "'Aberdeen", "'", "?"], "guid": 10}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | Please show the names of aircrafts associated with airport with name \"London Gatwick\".", "sql": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "example": {"db_id": "aircraft", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "query_toks": ["SELECT", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Airport_Name", "=", "``", "London", "Gatwick", "''"], "query_toks_no_value": ["select", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "airport_name", "=", "value"], "question": "Please show the names of aircrafts associated with airport with name \"London Gatwick\".", "question_toks": ["Please", "show", "the", "names", "of", "aircrafts", "associated", "with", "airport", "with", "name", "``", "London", "Gatwick", "''", "."], "guid": 11}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the average price for flights from Los Angeles to Honolulu.", "sql": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "example": {"db_id": "flight_1", "query": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "query_toks": ["SELECT", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''", "AND", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "What is the average price for flights from Los Angeles to Honolulu.", "question_toks": ["What", "is", "the", "average", "price", "for", "flights", "from", "Los", "Angeles", "to", "Honolulu", "."], "guid": 12}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Sort all captain names by their ages from old to young.", "sql": "SELECT name FROM captain ORDER BY age DESC", "example": {"db_id": "ship_1", "query": "SELECT name FROM captain ORDER BY age DESC", "query_toks": ["SELECT", "name", "FROM", "captain", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", "from", "captain", "order", "by", "age", "desc"], "question": "Sort all captain names by their ages from old to young.", "question_toks": ["Sort", "all", "captain", "names", "by", "their", "ages", "from", "old", "to", "young", "."], "guid": 13}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What are the names of all airports whose elevation is between -50 and 50?", "sql": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50", "example": {"db_id": "flight_4", "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "elevation", "BETWEEN", "-50", "AND", "50"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "elevation", "between", "value", "and", "value"], "question": "What are the names of all airports whose elevation is between -50 and 50?", "question_toks": ["What", "are", "the", "names", "of", "all", "airports", "whose", "elevation", "is", "between", "-50", "and", "50", "?"], "guid": 14}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | How many employees have certificate.", "sql": "SELECT count(DISTINCT eid) FROM Certificate", "example": {"db_id": "flight_1", "query": "SELECT count(DISTINCT eid) FROM Certificate", "query_toks": ["SELECT", "count", "(", "DISTINCT", "eid", ")", "FROM", "Certificate"], "query_toks_no_value": ["select", "count", "(", "distinct", "eid", ")", "from", "certificate"], "question": "How many employees have certificate.", "question_toks": ["How", "many", "employees", "have", "certificate", "."], "guid": 15}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | How many captains with younger than 50 are in each rank?", "sql": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank", "example": {"db_id": "ship_1", "query": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "rank", "FROM", "captain", "WHERE", "age", "<", "50", "GROUP", "BY", "rank"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "rank", "from", "captain", "where", "age", "<", "value", "group", "by", "rank"], "question": "How many captains with younger than 50 are in each rank?", "question_toks": ["How", "many", "captains", "with", "younger", "than", "50", "are", "in", "each", "rank", "?"], "guid": 16}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | For each aircraft that has won an award, what is its name and how many time has it won?", "sql": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft", "example": {"db_id": "aircraft", "query": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft", "query_toks": ["SELECT", "T1.Aircraft", ",", "COUNT", "(", "*", ")", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft", "GROUP", "BY", "T2.Winning_Aircraft"], "query_toks_no_value": ["select", "t1", ".", "aircraft", ",", "count", "(", "*", ")", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft", "group", "by", "t2", ".", "winning_aircraft"], "question": "For each aircraft that has won an award, what is its name and how many time has it won?", "question_toks": ["For", "each", "aircraft", "that", "has", "won", "an", "award", ",", "what", "is", "its", "name", "and", "how", "many", "time", "has", "it", "won", "?"], "guid": 17}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What airline serves the most flights?", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What airline serves the most flights?", "question_toks": ["What", "airline", "serves", "the", "most", "flights", "?"], "guid": 18}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many airports do we have?", "sql": "SELECT count(*) FROM AIRPORTS", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRPORTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRPORTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports"], "question": "How many airports do we have?", "question_toks": ["How", "many", "airports", "do", "we", "have", "?"], "guid": 19}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the count of distinct employees with certificates?", "sql": "SELECT count(DISTINCT eid) FROM Certificate", "example": {"db_id": "flight_1", "query": "SELECT count(DISTINCT eid) FROM Certificate", "query_toks": ["SELECT", "count", "(", "DISTINCT", "eid", ")", "FROM", "Certificate"], "query_toks_no_value": ["select", "count", "(", "distinct", "eid", ")", "from", "certificate"], "question": "What is the count of distinct employees with certificates?", "question_toks": ["What", "is", "the", "count", "of", "distinct", "employees", "with", "certificates", "?"], "guid": 20}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | How many international and domestic passengers are there in the airport London Heathrow?", "sql": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"", "example": {"db_id": "aircraft", "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"", "query_toks": ["SELECT", "International_Passengers", ",", "Domestic_Passengers", "FROM", "airport", "WHERE", "Airport_Name", "=", "``", "London", "Heathrow", "''"], "query_toks_no_value": ["select", "international_passengers", ",", "domestic_passengers", "from", "airport", "where", "airport_name", "=", "value"], "question": "How many international and domestic passengers are there in the airport London Heathrow?", "question_toks": ["How", "many", "international", "and", "domestic", "passengers", "are", "there", "in", "the", "airport", "London", "Heathrow", "?"], "guid": 21}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the name and city of the airport that the most routes end at?", "sql": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.city", ",", "T2.dst_apid", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "GROUP", "BY", "T2.dst_apid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "city", ",", "t2", ".", "dst_apid", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "group", "by", "t2", ".", "dst_apid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and city of the airport that the most routes end at?", "question_toks": ["What", "is", "the", "name", "and", "city", "of", "the", "airport", "that", "the", "most", "routes", "end", "at", "?"], "guid": 22}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What place has the most flights coming from there?", "sql": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "origin", "FROM", "Flight", "GROUP", "BY", "origin", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "origin", "from", "flight", "group", "by", "origin", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What place has the most flights coming from there?", "question_toks": ["What", "place", "has", "the", "most", "flights", "coming", "from", "there", "?"], "guid": 23}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the name and distance for the aircraft that has an id of 12?", "sql": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12", "example": {"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft", "WHERE", "aid", "=", "12"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft", "where", "aid", "=", "value"], "question": "What is the name and distance for the aircraft that has an id of 12?", "question_toks": ["What", "is", "the", "name", "and", "distance", "for", "the", "aircraft", "that", "has", "an", "id", "of", "12", "?"], "guid": 24}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the highest elevation of an airport in the country of Iceland?", "sql": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'", "example": {"db_id": "flight_4", "query": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'", "query_toks": ["SELECT", "max", "(", "elevation", ")", "FROM", "airports", "WHERE", "country", "=", "'Iceland", "'"], "query_toks_no_value": ["select", "max", "(", "elevation", ")", "from", "airports", "where", "country", "=", "value"], "question": "What is the highest elevation of an airport in the country of Iceland?", "question_toks": ["What", "is", "the", "highest", "elevation", "of", "an", "airport", "in", "the", "country", "of", "Iceland", "?"], "guid": 25}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | List the name of the pilots who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities.", "sql": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Catering services'", "example": {"db_id": "flight_company", "query": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Catering services'", "query_toks": ["SELECT", "T2.pilot", "FROM", "operate_company", "AS", "T1", "JOIN", "flight", "AS", "t2", "ON", "T1.id", "=", "T2.company_id", "WHERE", "T1.principal_activities", "=", "'Cargo", "'", "INTERSECT", "SELECT", "T2.pilot", "FROM", "operate_company", "AS", "T1", "JOIN", "flight", "AS", "t2", "ON", "T1.id", "=", "T2.company_id", "WHERE", "T1.principal_activities", "=", "'Catering", "services", "'"], "query_toks_no_value": ["select", "t2", ".", "pilot", "from", "operate_company", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "company_id", "where", "t1", ".", "principal_activities", "=", "value", "intersect", "select", "t2", ".", "pilot", "from", "operate_company", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "company_id", "where", "t1", ".", "principal_activities", "=", "value"], "question": "List the name of the pilots who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities.", "question_toks": ["List", "the", "name", "of", "the", "pilots", "who", "have", "flied", "for", "both", "a", "company", "that", "mainly", "provide", "'Cargo", "'", "services", "and", "a", "company", "that", "runs", "'Catering", "services", "'", "activities", "."], "guid": 26}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | show the train name and station name for each train.", "sql": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id", "example": {"db_id": "train_station", "query": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id", "query_toks": ["SELECT", "T2.name", ",", "T3.name", "FROM", "train_station", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.station_id", "=", "T2.station_id", "JOIN", "train", "AS", "T3", "ON", "T3.train_id", "=", "T1.train_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "name", "from", "train_station", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "station_id", "join", "train", "as", "t3", "on", "t3", ".", "train_id", "=", "t1", ".", "train_id"], "question": "show the train name and station name for each train.", "question_toks": ["show", "the", "train", "name", "and", "station", "name", "for", "each", "train", "."], "guid": 27}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the number of employees that have a salary between 100000 and 200000?", "sql": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000", "example": {"db_id": "flight_1", "query": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Employee", "WHERE", "salary", "BETWEEN", "100000", "AND", "200000"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "employee", "where", "salary", "between", "value", "and", "value"], "question": "What is the number of employees that have a salary between 100000 and 200000?", "question_toks": ["What", "is", "the", "number", "of", "employees", "that", "have", "a", "salary", "between", "100000", "and", "200000", "?"], "guid": 28}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | Show the working years of managers in descending order of their level.", "sql": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC", "example": {"db_id": "railway", "query": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC", "query_toks": ["SELECT", "Working_year_starts", "FROM", "manager", "ORDER", "BY", "LEVEL", "DESC"], "query_toks_no_value": ["select", "working_year_starts", "from", "manager", "order", "by", "level", "desc"], "question": "Show the working years of managers in descending order of their level.", "question_toks": ["Show", "the", "working", "years", "of", "managers", "in", "descending", "order", "of", "their", "level", "."], "guid": 29}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Count the number of United Airlines flights arriving in ASY Airport.", "sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.DestAirport", "=", "``", "ASY", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "destairport", "=", "value"], "question": "Count the number of United Airlines flights arriving in ASY Airport.", "question_toks": ["Count", "the", "number", "of", "United", "Airlines", "flights", "arriving", "in", "ASY", "Airport", "."], "guid": 30}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | What is the name of the oldest manager?", "sql": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1", "example": {"db_id": "railway", "query": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "manager", "ORDER", "BY", "Age", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "manager", "order", "by", "age", "desc", "limit", "value"], "question": "What is the name of the oldest manager?", "question_toks": ["What", "is", "the", "name", "of", "the", "oldest", "manager", "?"], "guid": 31}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show all locations which don't have a train station with at least 15 platforms.", "sql": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15", "example": {"db_id": "train_station", "query": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15", "query_toks": ["SELECT", "LOCATION", "FROM", "station", "EXCEPT", "SELECT", "LOCATION", "FROM", "station", "WHERE", "number_of_platforms", ">", "=", "15"], "query_toks_no_value": ["select", "location", "from", "station", "except", "select", "location", "from", "station", "where", "number_of_platforms", ">", "=", "value"], "question": "Show all locations which don't have a train station with at least 15 platforms.", "question_toks": ["Show", "all", "locations", "which", "do", "n't", "have", "a", "train", "station", "with", "at", "least", "15", "platforms", "."], "guid": 32}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What are the names of ships that were involved in a mission launched after 1928?", "sql": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928", "example": {"db_id": "ship_mission", "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928", "query_toks": ["SELECT", "T2.Name", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID", "WHERE", "T1.Launched_Year", ">", "1928"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "where", "t1", ".", "launched_year", ">", "value"], "question": "What are the names of ships that were involved in a mission launched after 1928?", "question_toks": ["What", "are", "the", "names", "of", "ships", "that", "were", "involved", "in", "a", "mission", "launched", "after", "1928", "?"], "guid": 33}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many flights fly from Aberdeen to Ashley?", "sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRPORTS", "AS", "T3", "ON", "T1.SourceAirport", "=", "T3.AirportCode", "WHERE", "T2.City", "=", "``", "Ashley", "''", "AND", "T3.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airports", "as", "t3", "on", "t1", ".", "sourceairport", "=", "t3", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "city", "=", "value"], "question": "How many flights fly from Aberdeen to Ashley?", "question_toks": ["How", "many", "flights", "fly", "from", "Aberdeen", "to", "Ashley", "?"], "guid": 34}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the id and name of the employee with the highest salary?", "sql": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1", "query_toks": ["SELECT", "eid", ",", "name", "FROM", "Employee", "ORDER", "BY", "salary", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "eid", ",", "name", "from", "employee", "order", "by", "salary", "desc", "limit", "value"], "question": "What is the id and name of the employee with the highest salary?", "question_toks": ["What", "is", "the", "id", "and", "name", "of", "the", "employee", "with", "the", "highest", "salary", "?"], "guid": 35}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What are flight numbers of Airline \"United Airlines\"?", "sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "example": {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T2.uid", "=", "T1.Airline", "WHERE", "T2.Airline", "=", "``", "United", "Airlines", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2", ".", "uid", "=", "t1", ".", "airline", "where", "t2", ".", "airline", "=", "value"], "question": "What are flight numbers of Airline \"United Airlines\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "Airline", "``", "United", "Airlines", "''", "?"], "guid": 36}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | What is the maximum level of managers in countries that are not \"Australia\"?", "sql": "SELECT max(LEVEL) FROM manager WHERE Country != \"Australia\t\"", "example": {"db_id": "railway", "query": "SELECT max(LEVEL) FROM manager WHERE Country != \"Australia\t\"", "query_toks": ["SELECT", "max", "(", "LEVEL", ")", "FROM", "manager", "WHERE", "Country", "!", "=", "``", "Australia", "''"], "query_toks_no_value": ["select", "max", "(", "level", ")", "from", "manager", "where", "country", "!", "=", "value"], "question": "What is the maximum level of managers in countries that are not \"Australia\"?", "question_toks": ["What", "is", "the", "maximum", "level", "of", "managers", "in", "countries", "that", "are", "not", "``", "Australia", "''", "?"], "guid": 37}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Return the name of the youngest captain.", "sql": "SELECT name FROM captain ORDER BY age LIMIT 1", "example": {"db_id": "ship_1", "query": "SELECT name FROM captain ORDER BY age LIMIT 1", "query_toks": ["SELECT", "name", "FROM", "captain", "ORDER", "BY", "age", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "captain", "order", "by", "age", "limit", "value"], "question": "Return the name of the youngest captain.", "question_toks": ["Return", "the", "name", "of", "the", "youngest", "captain", "."], "guid": 38}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | How many routes does American Airlines operate?", "sql": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "WHERE", "T1.name", "=", "'American", "Airlines", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "where", "t1", ".", "name", "=", "value"], "question": "How many routes does American Airlines operate?", "question_toks": ["How", "many", "routes", "does", "American", "Airlines", "operate", "?"], "guid": 39}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the names of the pilots in alphabetical order?", "sql": "SELECT Name FROM pilot ORDER BY Name ASC", "example": {"db_id": "aircraft", "query": "SELECT Name FROM pilot ORDER BY Name ASC", "query_toks": ["SELECT", "Name", "FROM", "pilot", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["select", "name", "from", "pilot", "order", "by", "name", "asc"], "question": "What are the names of the pilots in alphabetical order?", "question_toks": ["What", "are", "the", "names", "of", "the", "pilots", "in", "alphabetical", "order", "?"], "guid": 40}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What are the nations that have more than two ships?", "sql": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2", "example": {"db_id": "ship_mission", "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2", "query_toks": ["SELECT", "Nationality", "FROM", "ship", "GROUP", "BY", "Nationality", "HAVING", "COUNT", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "nationality", "from", "ship", "group", "by", "nationality", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the nations that have more than two ships?", "question_toks": ["What", "are", "the", "nations", "that", "have", "more", "than", "two", "ships", "?"], "guid": 41}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | For the airline ids with the top 10 most routes operated, what are their names?", "sql": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10", "example": {"db_id": "flight_4", "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10", "query_toks": ["SELECT", "T1.name", ",", "T2.alid", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T2.alid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "10"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "alid", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t2", ".", "alid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "For the airline ids with the top 10 most routes operated, what are their names?", "question_toks": ["For", "the", "airline", "ids", "with", "the", "top", "10", "most", "routes", "operated", ",", "what", "are", "their", "names", "?"], "guid": 42}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Count the number of different ranks of captain.", "sql": "SELECT count(DISTINCT rank) FROM captain", "example": {"db_id": "ship_1", "query": "SELECT count(DISTINCT rank) FROM captain", "query_toks": ["SELECT", "count", "(", "DISTINCT", "rank", ")", "FROM", "captain"], "query_toks_no_value": ["select", "count", "(", "distinct", "rank", ")", "from", "captain"], "question": "Count the number of different ranks of captain.", "question_toks": ["Count", "the", "number", "of", "different", "ranks", "of", "captain", "."], "guid": 43}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What is the code of airport that has the highest number of flights?", "sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the code of airport that has the highest number of flights?", "question_toks": ["What", "is", "the", "code", "of", "airport", "that", "has", "the", "highest", "number", "of", "flights", "?"], "guid": 44}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show the number of trains", "sql": "SELECT count(*) FROM train", "example": {"db_id": "train_station", "query": "SELECT count(*) FROM train", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "train"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "train"], "question": "Show the number of trains", "question_toks": ["Show", "the", "number", "of", "trains"], "guid": 45}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Return the rank for which there are the fewest captains.", "sql": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "ship_1", "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "rank", "FROM", "captain", "GROUP", "BY", "rank", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "rank", "from", "captain", "group", "by", "rank", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the rank for which there are the fewest captains.", "question_toks": ["Return", "the", "rank", "for", "which", "there", "are", "the", "fewest", "captains", "."], "guid": 46}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the name and distance of every aircraft that can cover a distance of more than 5000 and which at least 5 people can fly?", "sql": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5", "example": {"db_id": "flight_1", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5", "query_toks": ["SELECT", "T2.name", "FROM", "Certificate", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T2.aid", "=", "T1.aid", "WHERE", "T2.distance", ">", "5000", "GROUP", "BY", "T1.aid", "ORDER", "BY", "count", "(", "*", ")", ">", "=", "5"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "certificate", "as", "t1", "join", "aircraft", "as", "t2", "on", "t2", ".", "aid", "=", "t1", ".", "aid", "where", "t2", ".", "distance", ">", "value", "group", "by", "t1", ".", "aid", "order", "by", "count", "(", "*", ")", ">", "=", "value"], "question": "What is the name and distance of every aircraft that can cover a distance of more than 5000 and which at least 5 people can fly?", "question_toks": ["What", "is", "the", "name", "and", "distance", "of", "every", "aircraft", "that", "can", "cover", "a", "distance", "of", "more", "than", "5000", "and", "which", "at", "least", "5", "people", "can", "fly", "?"], "guid": 47}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | Show id and location of railways that are associated with more than one train.", "sql": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1", "example": {"db_id": "railway", "query": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T2.Railway_ID", ",", "T1.Location", "FROM", "railway", "AS", "T1", "JOIN", "train", "AS", "T2", "ON", "T1.Railway_ID", "=", "T2.Railway_ID", "GROUP", "BY", "T2.Railway_ID", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t2", ".", "railway_id", ",", "t1", ".", "location", "from", "railway", "as", "t1", "join", "train", "as", "t2", "on", "t1", ".", "railway_id", "=", "t2", ".", "railway_id", "group", "by", "t2", ".", "railway_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Show id and location of railways that are associated with more than one train.", "question_toks": ["Show", "id", "and", "location", "of", "railways", "that", "are", "associated", "with", "more", "than", "one", "train", "."], "guid": 48}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | List the names of pilots in ascending order of rank.", "sql": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC", "example": {"db_id": "pilot_record", "query": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC", "query_toks": ["SELECT", "Pilot_name", "FROM", "pilot", "ORDER", "BY", "Rank", "ASC"], "query_toks_no_value": ["select", "pilot_name", "from", "pilot", "order", "by", "rank", "asc"], "question": "List the names of pilots in ascending order of rank.", "question_toks": ["List", "the", "names", "of", "pilots", "in", "ascending", "order", "of", "rank", "."], "guid": 49}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the id of routes whose source and destination airports are in the United States.", "sql": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "example": {"db_id": "flight_4", "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "query_toks": ["SELECT", "rid", "FROM", "routes", "WHERE", "dst_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")", "AND", "src_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")"], "query_toks_no_value": ["select", "rid", "from", "routes", "where", "dst_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")", "and", "src_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")"], "question": "Find the id of routes whose source and destination airports are in the United States.", "question_toks": ["Find", "the", "id", "of", "routes", "whose", "source", "and", "destination", "airports", "are", "in", "the", "United", "States", "."], "guid": 50}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which airlines have a flight with destination airport AHD?", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.DestAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "destairport", "=", "value"], "question": "Which airlines have a flight with destination airport AHD?", "question_toks": ["Which", "airlines", "have", "a", "flight", "with", "destination", "airport", "AHD", "?"], "guid": 51}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Return the number of airlines in the USA.", "sql": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value"], "question": "Return the number of airlines in the USA.", "question_toks": ["Return", "the", "number", "of", "airlines", "in", "the", "USA", "."], "guid": 52}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Return the number of flights departing from Aberdeen.", "sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Return the number of flights departing from Aberdeen.", "question_toks": ["Return", "the", "number", "of", "flights", "departing", "from", "Aberdeen", "."], "guid": 53}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the number of cities in the United States with more than 3 airports?", "sql": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3", "example": {"db_id": "flight_4", "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3", "query_toks": ["SELECT", "city", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "3"], "query_toks_no_value": ["select", "city", "from", "airports", "where", "country", "=", "value", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value"], "question": "What is the number of cities in the United States with more than 3 airports?", "question_toks": ["What", "is", "the", "number", "of", "cities", "in", "the", "United", "States", "with", "more", "than", "3", "airports", "?"], "guid": 54}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the names of all aircrafts that have won a match at least twice?", "sql": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2", "example": {"db_id": "aircraft", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft", "GROUP", "BY", "T2.Winning_Aircraft", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft", "group", "by", "t2", ".", "winning_aircraft", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of all aircrafts that have won a match at least twice?", "question_toks": ["What", "are", "the", "names", "of", "all", "aircrafts", "that", "have", "won", "a", "match", "at", "least", "twice", "?"], "guid": 55}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Return the name of the airport with code 'AKO'.", "sql": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "example": {"db_id": "flight_2", "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "query_toks": ["SELECT", "AirportName", "FROM", "AIRPORTS", "WHERE", "AirportCode", "=", "``", "AKO", "''"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "value"], "question": "Return the name of the airport with code 'AKO'.", "question_toks": ["Return", "the", "name", "of", "the", "airport", "with", "code", "'AKO", "'", "."], "guid": 56}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | List the cities which have more than one airport and number of airports.", "sql": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1", "example": {"db_id": "flight_4", "query": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1", "query_toks": ["SELECT", "city", ",", "count", "(", "*", ")", "FROM", "airports", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "city", ",", "count", "(", "*", ")", "from", "airports", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value"], "question": "List the cities which have more than one airport and number of airports.", "question_toks": ["List", "the", "cities", "which", "have", "more", "than", "one", "airport", "and", "number", "of", "airports", "."], "guid": 57}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Give the flight numbers of flights leaving from APG.", "sql": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "example": {"db_id": "flight_2", "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "FlightNo", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "value"], "question": "Give the flight numbers of flights leaving from APG.", "question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "leaving", "from", "APG", "."], "guid": 58}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | How many captains are in each rank?", "sql": "SELECT count(*) ,  rank FROM captain GROUP BY rank", "example": {"db_id": "ship_1", "query": "SELECT count(*) ,  rank FROM captain GROUP BY rank", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "rank", "FROM", "captain", "GROUP", "BY", "rank"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "rank", "from", "captain", "group", "by", "rank"], "question": "How many captains are in each rank?", "question_toks": ["How", "many", "captains", "are", "in", "each", "rank", "?"], "guid": 59}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | What is the id, name and IATA code of the airport that had most number of flights?", "sql": "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_company", "query": "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.id", ",", "T1.name", ",", "T1.IATA", "FROM", "airport", "AS", "T1", "JOIN", "flight", "AS", "T2", "ON", "T1.id", "=", "T2.airport_id", "GROUP", "BY", "T2.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", ",", "t1", ".", "iata", "from", "airport", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "airport_id", "group", "by", "t2", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id, name and IATA code of the airport that had most number of flights?", "question_toks": ["What", "is", "the", "id", ",", "name", "and", "IATA", "code", "of", "the", "airport", "that", "had", "most", "number", "of", "flights", "?"], "guid": 60}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | Please show the most common type of ships.", "sql": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "ship_mission", "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "TYPE", "FROM", "ship", "GROUP", "BY", "TYPE", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "type", "from", "ship", "group", "by", "type", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Please show the most common type of ships.", "question_toks": ["Please", "show", "the", "most", "common", "type", "of", "ships", "."], "guid": 61}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | List the name of the aircraft that has been named winning aircraft the most number of times.", "sql": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "aircraft", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft", "GROUP", "BY", "T2.Winning_Aircraft", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft", "group", "by", "t2", ".", "winning_aircraft", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "List the name of the aircraft that has been named winning aircraft the most number of times.", "question_toks": ["List", "the", "name", "of", "the", "aircraft", "that", "has", "been", "named", "winning", "aircraft", "the", "most", "number", "of", "times", "."], "guid": 62}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which abbreviation corresponds to Jetblue Airways?", "sql": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "example": {"db_id": "flight_2", "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "value"], "question": "Which abbreviation corresponds to Jetblue Airways?", "question_toks": ["Which", "abbreviation", "corresponds", "to", "Jetblue", "Airways", "?"], "guid": 63}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the name of the 3 employees who get paid the least?", "sql": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3", "example": {"db_id": "flight_1", "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3", "query_toks": ["SELECT", "name", "FROM", "Employee", "ORDER", "BY", "salary", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "employee", "order", "by", "salary", "asc", "limit", "value"], "question": "What is the name of the 3 employees who get paid the least?", "question_toks": ["What", "is", "the", "name", "of", "the", "3", "employees", "who", "get", "paid", "the", "least", "?"], "guid": 64}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the name, city, and country of the airport with the lowest altitude?", "sql": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1", "query_toks": ["SELECT", "name", ",", "city", ",", "country", "FROM", "airports", "ORDER", "BY", "elevation", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", "from", "airports", "order", "by", "elevation", "limit", "value"], "question": "What is the name, city, and country of the airport with the lowest altitude?", "question_toks": ["What", "is", "the", "name", ",", "city", ",", "and", "country", "of", "the", "airport", "with", "the", "lowest", "altitude", "?"], "guid": 65}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which airlines have at least 10 flights?", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", ">", "10"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", ">", "value"], "question": "Which airlines have at least 10 flights?", "question_toks": ["Which", "airlines", "have", "at", "least", "10", "flights", "?"], "guid": 66}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Find the name of the ships that are steered by both a captain with Midshipman rank and a captain with Lieutenant rank.", "sql": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'", "example": {"db_id": "ship_1", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'", "query_toks": ["SELECT", "t1.name", "FROM", "ship", "AS", "t1", "JOIN", "captain", "AS", "t2", "ON", "t1.ship_id", "=", "t2.ship_id", "WHERE", "t2.rank", "=", "'Midshipman", "'", "INTERSECT", "SELECT", "t1.name", "FROM", "ship", "AS", "t1", "JOIN", "captain", "AS", "t2", "ON", "t1.ship_id", "=", "t2.ship_id", "WHERE", "t2.rank", "=", "'Lieutenant", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "ship", "as", "t1", "join", "captain", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "where", "t2", ".", "rank", "=", "value", "intersect", "select", "t1", ".", "name", "from", "ship", "as", "t1", "join", "captain", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "where", "t2", ".", "rank", "=", "value"], "question": "Find the name of the ships that are steered by both a captain with Midshipman rank and a captain with Lieutenant rank.", "question_toks": ["Find", "the", "name", "of", "the", "ships", "that", "are", "steered", "by", "both", "a", "captain", "with", "Midshipman", "rank", "and", "a", "captain", "with", "Lieutenant", "rank", "."], "guid": 67}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | how many airports are there in each country?", "sql": "SELECT count(*) ,  country FROM airport GROUP BY country", "example": {"db_id": "flight_company", "query": "SELECT count(*) ,  country FROM airport GROUP BY country", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "country", "FROM", "airport", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "country", "from", "airport", "group", "by", "country"], "question": "how many airports are there in each country?", "question_toks": ["how", "many", "airports", "are", "there", "in", "each", "country", "?"], "guid": 68}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Which flag is most widely used among all ships?", "sql": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "ship_1", "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "flag", "FROM", "ship", "GROUP", "BY", "flag", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "flag", "from", "ship", "group", "by", "flag", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which flag is most widely used among all ships?", "question_toks": ["Which", "flag", "is", "most", "widely", "used", "among", "all", "ships", "?"], "guid": 69}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the busiest source airport that runs most number of routes in China.", "sql": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "WHERE", "T1.country", "=", "'China", "'", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "where", "t1", ".", "country", "=", "value", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the busiest source airport that runs most number of routes in China.", "question_toks": ["Find", "the", "busiest", "source", "airport", "that", "runs", "most", "number", "of", "routes", "in", "China", "."], "guid": 70}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Give the airport code and airport name corresonding to the city Anthony.", "sql": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "example": {"db_id": "flight_2", "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "query_toks": ["SELECT", "AirportCode", ",", "AirportName", "FROM", "AIRPORTS", "WHERE", "city", "=", "``", "Anthony", "''"], "query_toks_no_value": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "value"], "question": "Give the airport code and airport name corresonding to the city Anthony.", "question_toks": ["Give", "the", "airport", "code", "and", "airport", "name", "corresonding", "to", "the", "city", "Anthony", "."], "guid": 71}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | In how many cities are there airports in the country of Greenland?", "sql": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'", "example": {"db_id": "flight_4", "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'", "query_toks": ["SELECT", "count", "(", "DISTINCT", "city", ")", "FROM", "airports", "WHERE", "country", "=", "'Greenland", "'"], "query_toks_no_value": ["select", "count", "(", "distinct", "city", ")", "from", "airports", "where", "country", "=", "value"], "question": "In how many cities are there airports in the country of Greenland?", "question_toks": ["In", "how", "many", "cities", "are", "there", "airports", "in", "the", "country", "of", "Greenland", "?"], "guid": 72}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show ids for all employees with at least 100000 salary.", "sql": "SELECT eid FROM Employee WHERE salary  >  100000", "example": {"db_id": "flight_1", "query": "SELECT eid FROM Employee WHERE salary  >  100000", "query_toks": ["SELECT", "eid", "FROM", "Employee", "WHERE", "salary", ">", "100000"], "query_toks_no_value": ["select", "eid", "from", "employee", "where", "salary", ">", "value"], "question": "Show ids for all employees with at least 100000 salary.", "question_toks": ["Show", "ids", "for", "all", "employees", "with", "at", "least", "100000", "salary", "."], "guid": 73}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the name of the airports located in Cuba or Argentina.", "sql": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'", "example": {"db_id": "flight_4", "query": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "country", "=", "'Cuba", "'", "OR", "country", "=", "'Argentina", "'"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "Find the name of the airports located in Cuba or Argentina.", "question_toks": ["Find", "the", "name", "of", "the", "airports", "located", "in", "Cuba", "or", "Argentina", "."], "guid": 74}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many flights have destination ATO?", "sql": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "DestAirport", "=", "``", "ATO", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "value"], "question": "How many flights have destination ATO?", "question_toks": ["How", "many", "flights", "have", "destination", "ATO", "?"], "guid": 75}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which airlines have a flight with source airport AHD?", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Which airlines have a flight with source airport AHD?", "question_toks": ["Which", "airlines", "have", "a", "flight", "with", "source", "airport", "AHD", "?"], "guid": 76}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the total number of domestic passengers at all London airports?", "sql": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"", "example": {"db_id": "aircraft", "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"", "query_toks": ["SELECT", "sum", "(", "Domestic_Passengers", ")", "FROM", "airport", "WHERE", "Airport_Name", "LIKE", "``", "%", "London", "%", "''"], "query_toks_no_value": ["select", "sum", "(", "domestic_passengers", ")", "from", "airport", "where", "airport_name", "like", "value"], "question": "What are the total number of domestic passengers at all London airports?", "question_toks": ["What", "are", "the", "total", "number", "of", "domestic", "passengers", "at", "all", "London", "airports", "?"], "guid": 77}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What is the total number of airlines?", "sql": "SELECT count(*) FROM AIRLINES", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines"], "question": "What is the total number of airlines?", "question_toks": ["What", "is", "the", "total", "number", "of", "airlines", "?"], "guid": 78}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the name of each aircraft and how many flights does each one complete?", "sql": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid", "example": {"db_id": "flight_1", "query": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "GROUP", "BY", "T1.aid"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "group", "by", "t1", ".", "aid"], "question": "What is the name of each aircraft and how many flights does each one complete?", "question_toks": ["What", "is", "the", "name", "of", "each", "aircraft", "and", "how", "many", "flights", "does", "each", "one", "complete", "?"], "guid": 79}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the flight number, origin, and destination for all flights in alphabetical order by departure cities?", "sql": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin", "example": {"db_id": "flight_1", "query": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin", "query_toks": ["SELECT", "flno", ",", "origin", ",", "destination", "FROM", "Flight", "ORDER", "BY", "origin"], "query_toks_no_value": ["select", "flno", ",", "origin", ",", "destination", "from", "flight", "order", "by", "origin"], "question": "What is the flight number, origin, and destination for all flights in alphabetical order by departure cities?", "question_toks": ["What", "is", "the", "flight", "number", ",", "origin", ",", "and", "destination", "for", "all", "flights", "in", "alphabetical", "order", "by", "departure", "cities", "?"], "guid": 80}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the id of every employee who has at least a salary of  100000?", "sql": "SELECT eid FROM Employee WHERE salary  >  100000", "example": {"db_id": "flight_1", "query": "SELECT eid FROM Employee WHERE salary  >  100000", "query_toks": ["SELECT", "eid", "FROM", "Employee", "WHERE", "salary", ">", "100000"], "query_toks_no_value": ["select", "eid", "from", "employee", "where", "salary", ">", "value"], "question": "What is the id of every employee who has at least a salary of  100000?", "question_toks": ["What", "is", "the", "id", "of", "every", "employee", "who", "has", "at", "least", "a", "salary", "of", "100000", "?"], "guid": 81}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | List the names of pilots that do not have any record.", "sql": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)", "example": {"db_id": "pilot_record", "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)", "query_toks": ["SELECT", "Pilot_name", "FROM", "pilot", "WHERE", "Pilot_ID", "NOT", "IN", "(", "SELECT", "Pilot_ID", "FROM", "pilot_record", ")"], "query_toks_no_value": ["select", "pilot_name", "from", "pilot", "where", "pilot_id", "not", "in", "(", "select", "pilot_id", "from", "pilot_record", ")"], "question": "List the names of pilots that do not have any record.", "question_toks": ["List", "the", "names", "of", "pilots", "that", "do", "not", "have", "any", "record", "."], "guid": 82}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Give the number of Jetblue Airways flights.", "sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T1.Airline", "=", "T2.uid", "WHERE", "T2.Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1", ".", "airline", "=", "t2", ".", "uid", "where", "t2", ".", "airline", "=", "value"], "question": "Give the number of Jetblue Airways flights.", "question_toks": ["Give", "the", "number", "of", "Jetblue", "Airways", "flights", "."], "guid": 83}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | which pilot is in charge of the most number of flights?", "sql": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_company", "query": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "pilot", "FROM", "flight", "GROUP", "BY", "pilot", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "pilot", "from", "flight", "group", "by", "pilot", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "which pilot is in charge of the most number of flights?", "question_toks": ["which", "pilot", "is", "in", "charge", "of", "the", "most", "number", "of", "flights", "?"], "guid": 84}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What is the ship with the largest amount of tonnage called?", "sql": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1", "example": {"db_id": "ship_mission", "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "ship", "ORDER", "BY", "Tonnage", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "ship", "order", "by", "tonnage", "desc", "limit", "value"], "question": "What is the ship with the largest amount of tonnage called?", "question_toks": ["What", "is", "the", "ship", "with", "the", "largest", "amount", "of", "tonnage", "called", "?"], "guid": 85}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show name and salary for all employees sorted by salary.", "sql": "SELECT name ,  salary FROM Employee ORDER BY salary", "example": {"db_id": "flight_1", "query": "SELECT name ,  salary FROM Employee ORDER BY salary", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "Employee", "ORDER", "BY", "salary"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "employee", "order", "by", "salary"], "question": "Show name and salary for all employees sorted by salary.", "question_toks": ["Show", "name", "and", "salary", "for", "all", "employees", "sorted", "by", "salary", "."], "guid": 86}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What is the average number of international passengers of all airports?", "sql": "SELECT avg(International_Passengers) FROM airport", "example": {"db_id": "aircraft", "query": "SELECT avg(International_Passengers) FROM airport", "query_toks": ["SELECT", "avg", "(", "International_Passengers", ")", "FROM", "airport"], "query_toks_no_value": ["select", "avg", "(", "international_passengers", ")", "from", "airport"], "question": "What is the average number of international passengers of all airports?", "question_toks": ["What", "is", "the", "average", "number", "of", "international", "passengers", "of", "all", "airports", "?"], "guid": 87}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show the station name with at least two trains.", "sql": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2", "example": {"db_id": "train_station", "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.name", "FROM", "train_station", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.station_id", "=", "T2.station_id", "GROUP", "BY", "T1.station_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "train_station", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "station_id", "group", "by", "t1", ".", "station_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the station name with at least two trains.", "question_toks": ["Show", "the", "station", "name", "with", "at", "least", "two", "trains", "."], "guid": 88}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What are the countries of all airlines whose names start with Orbit?", "sql": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'", "example": {"db_id": "flight_4", "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'", "query_toks": ["SELECT", "country", "FROM", "airlines", "WHERE", "name", "LIKE", "'Orbit", "%", "'"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "name", "like", "value"], "question": "What are the countries of all airlines whose names start with Orbit?", "question_toks": ["What", "are", "the", "countries", "of", "all", "airlines", "whose", "names", "start", "with", "Orbit", "?"], "guid": 89}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | List names of all pilot in descending order of age.", "sql": "SELECT Name FROM pilot ORDER BY Age DESC", "example": {"db_id": "aircraft", "query": "SELECT Name FROM pilot ORDER BY Age DESC", "query_toks": ["SELECT", "Name", "FROM", "pilot", "ORDER", "BY", "Age", "DESC"], "query_toks_no_value": ["select", "name", "from", "pilot", "order", "by", "age", "desc"], "question": "List names of all pilot in descending order of age.", "question_toks": ["List", "names", "of", "all", "pilot", "in", "descending", "order", "of", "age", "."], "guid": 90}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | How many airports haven't the pilot 'Thompson' driven an aircraft?", "sql": "SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );", "example": {"db_id": "flight_company", "query": "SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airport", "WHERE", "id", "NOT", "IN", "(", "SELECT", "airport_id", "FROM", "flight", "WHERE", "pilot", "=", "'Thompson", "'", ")", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airport", "where", "id", "not", "in", "(", "select", "airport_id", "from", "flight", "where", "pilot", "=", "value", ")"], "question": "How many airports haven't the pilot 'Thompson' driven an aircraft?", "question_toks": ["How", "many", "airports", "have", "n't", "the", "pilot", "'Thompson", "'", "driven", "an", "aircraft", "?"], "guid": 91}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the origin and destination for all flights whose price is higher than 300?", "sql": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "example": {"db_id": "flight_1", "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "query_toks": ["SELECT", "origin", ",", "destination", "FROM", "Flight", "WHERE", "price", ">", "300"], "query_toks_no_value": ["select", "origin", ",", "destination", "from", "flight", "where", "price", ">", "value"], "question": "What is the origin and destination for all flights whose price is higher than 300?", "question_toks": ["What", "is", "the", "origin", "and", "destination", "for", "all", "flights", "whose", "price", "is", "higher", "than", "300", "?"], "guid": 92}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | How many airlines are there?", "sql": "SELECT count(*) FROM airlines", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM airlines", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airlines"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines"], "question": "How many airlines are there?", "question_toks": ["How", "many", "airlines", "are", "there", "?"], "guid": 93}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the departure and arrival dates of all flights from LA to Honolulu?", "sql": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "example": {"db_id": "flight_1", "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "query_toks": ["SELECT", "departure_date", ",", "arrival_date", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''", "AND", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "departure_date", ",", "arrival_date", "from", "flight", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "What are the departure and arrival dates of all flights from LA to Honolulu?", "question_toks": ["What", "are", "the", "departure", "and", "arrival", "dates", "of", "all", "flights", "from", "LA", "to", "Honolulu", "?"], "guid": 94}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Which destination has least number of flights?", "sql": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "destination", "FROM", "Flight", "GROUP", "BY", "destination", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "destination", "from", "flight", "group", "by", "destination", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Which destination has least number of flights?", "question_toks": ["Which", "destination", "has", "least", "number", "of", "flights", "?"], "guid": 95}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show all locations and the total number of platforms and passengers for all train stations in each location.", "sql": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION", "example": {"db_id": "train_station", "query": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION", "query_toks": ["SELECT", "LOCATION", ",", "sum", "(", "number_of_platforms", ")", ",", "sum", "(", "total_passengers", ")", "FROM", "station", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "location", ",", "sum", "(", "number_of_platforms", ")", ",", "sum", "(", "total_passengers", ")", "from", "station", "group", "by", "location"], "question": "Show all locations and the total number of platforms and passengers for all train stations in each location.", "question_toks": ["Show", "all", "locations", "and", "the", "total", "number", "of", "platforms", "and", "passengers", "for", "all", "train", "stations", "in", "each", "location", "."], "guid": 96}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Which countries has the most number of airlines whose active status is 'Y'?", "sql": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "country", "FROM", "airlines", "WHERE", "active", "=", "'Y", "'", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "active", "=", "value", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which countries has the most number of airlines whose active status is 'Y'?", "question_toks": ["Which", "countries", "has", "the", "most", "number", "of", "airlines", "whose", "active", "status", "is", "'Y", "'", "?"], "guid": 97}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show the names and total passengers for all train stations not in London.", "sql": "SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'", "example": {"db_id": "train_station", "query": "SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'", "query_toks": ["SELECT", "name", ",", "total_passengers", "FROM", "station", "WHERE", "LOCATION", "!", "=", "'London", "'"], "query_toks_no_value": ["select", "name", ",", "total_passengers", "from", "station", "where", "location", "!", "=", "value"], "question": "Show the names and total passengers for all train stations not in London.", "question_toks": ["Show", "the", "names", "and", "total", "passengers", "for", "all", "train", "stations", "not", "in", "London", "."], "guid": 98}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the total number of Domestic Passengers of airports that contain the word \"London\".", "sql": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"", "example": {"db_id": "aircraft", "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"", "query_toks": ["SELECT", "sum", "(", "Domestic_Passengers", ")", "FROM", "airport", "WHERE", "Airport_Name", "LIKE", "``", "%", "London", "%", "''"], "query_toks_no_value": ["select", "sum", "(", "domestic_passengers", ")", "from", "airport", "where", "airport_name", "like", "value"], "question": "What are the total number of Domestic Passengers of airports that contain the word \"London\".", "question_toks": ["What", "are", "the", "total", "number", "of", "Domestic", "Passengers", "of", "airports", "that", "contain", "the", "word", "``", "London", "''", "."], "guid": 99}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What types of ships have both ships that have Panama Flags and Malta flags?", "sql": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'", "example": {"db_id": "ship_1", "query": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'", "query_toks": ["SELECT", "TYPE", "FROM", "ship", "WHERE", "flag", "=", "'Panama", "'", "INTERSECT", "SELECT", "TYPE", "FROM", "ship", "WHERE", "flag", "=", "'Malta", "'"], "query_toks_no_value": ["select", "type", "from", "ship", "where", "flag", "=", "value", "intersect", "select", "type", "from", "ship", "where", "flag", "=", "value"], "question": "What types of ships have both ships that have Panama Flags and Malta flags?", "question_toks": ["What", "types", "of", "ships", "have", "both", "ships", "that", "have", "Panama", "Flags", "and", "Malta", "flags", "?"], "guid": 100}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | How many airports are there per city in the US ordered from most to least?", "sql": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC", "example": {"db_id": "flight_4", "query": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", "GROUP", "BY", "city", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city", "from", "airports", "where", "country", "=", "value", "group", "by", "city", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many airports are there per city in the US ordered from most to least?", "question_toks": ["How", "many", "airports", "are", "there", "per", "city", "in", "the", "US", "ordered", "from", "most", "to", "least", "?"], "guid": 101}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | List the builders of railways in ascending alphabetical order.", "sql": "SELECT Builder FROM railway ORDER BY Builder ASC", "example": {"db_id": "railway", "query": "SELECT Builder FROM railway ORDER BY Builder ASC", "query_toks": ["SELECT", "Builder", "FROM", "railway", "ORDER", "BY", "Builder", "ASC"], "query_toks_no_value": ["select", "builder", "from", "railway", "order", "by", "builder", "asc"], "question": "List the builders of railways in ascending alphabetical order.", "question_toks": ["List", "the", "builders", "of", "railways", "in", "ascending", "alphabetical", "order", "."], "guid": 102}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show the name of aircraft which fewest people have its certificate.", "sql": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Certificate", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T2.aid", "=", "T1.aid", "GROUP", "BY", "T1.aid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "certificate", "as", "t1", "join", "aircraft", "as", "t2", "on", "t2", ".", "aid", "=", "t1", ".", "aid", "group", "by", "t1", ".", "aid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the name of aircraft which fewest people have its certificate.", "question_toks": ["Show", "the", "name", "of", "aircraft", "which", "fewest", "people", "have", "its", "certificate", "."], "guid": 103}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the ids of all aircrafts that can cover a distance of more than 1000?", "sql": "SELECT aid FROM Aircraft WHERE distance  >  1000", "example": {"db_id": "flight_1", "query": "SELECT aid FROM Aircraft WHERE distance  >  1000", "query_toks": ["SELECT", "aid", "FROM", "Aircraft", "WHERE", "distance", ">", "1000"], "query_toks_no_value": ["select", "aid", "from", "aircraft", "where", "distance", ">", "value"], "question": "What are the ids of all aircrafts that can cover a distance of more than 1000?", "question_toks": ["What", "are", "the", "ids", "of", "all", "aircrafts", "that", "can", "cover", "a", "distance", "of", "more", "than", "1000", "?"], "guid": 104}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the number of routes with destination airports in Italy.", "sql": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "routes", "AS", "T1", "JOIN", "airports", "AS", "T2", "ON", "T1.dst_apid", "=", "T2.apid", "WHERE", "T2.country", "=", "'Italy", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "routes", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "dst_apid", "=", "t2", ".", "apid", "where", "t2", ".", "country", "=", "value"], "question": "Find the number of routes with destination airports in Italy.", "question_toks": ["Find", "the", "number", "of", "routes", "with", "destination", "airports", "in", "Italy", "."], "guid": 105}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show names for all employees who have certificates on both Boeing 737-800 and Airbus A340-300.", "sql": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\"", "example": {"db_id": "flight_1", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\"", "query_toks": ["SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Boeing", "737-800", "''", "INTERSECT", "SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Airbus", "A340-300", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value", "intersect", "select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value"], "question": "Show names for all employees who have certificates on both Boeing 737-800 and Airbus A340-300.", "question_toks": ["Show", "names", "for", "all", "employees", "who", "have", "certificates", "on", "both", "Boeing", "737-800", "and", "Airbus", "A340-300", "."], "guid": 106}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What are the names of all airports in Cuba or Argentina?", "sql": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'", "example": {"db_id": "flight_4", "query": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "country", "=", "'Cuba", "'", "OR", "country", "=", "'Argentina", "'"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "What are the names of all airports in Cuba or Argentina?", "question_toks": ["What", "are", "the", "names", "of", "all", "airports", "in", "Cuba", "or", "Argentina", "?"], "guid": 107}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Find the name, class and rank of all captains.", "sql": "SELECT name ,  CLASS ,  rank FROM captain", "example": {"db_id": "ship_1", "query": "SELECT name ,  CLASS ,  rank FROM captain", "query_toks": ["SELECT", "name", ",", "CLASS", ",", "rank", "FROM", "captain"], "query_toks_no_value": ["select", "name", ",", "class", ",", "rank", "from", "captain"], "question": "Find the name, class and rank of all captains.", "question_toks": ["Find", "the", "name", ",", "class", "and", "rank", "of", "all", "captains", "."], "guid": 108}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What is the number of ships?", "sql": "SELECT count(*) FROM ship", "example": {"db_id": "ship_mission", "query": "SELECT count(*) FROM ship", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "ship"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "ship"], "question": "What is the number of ships?", "question_toks": ["What", "is", "the", "number", "of", "ships", "?"], "guid": 109}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many 'United Airlines' flights go to Airport 'ASY'?", "sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.DestAirport", "=", "``", "ASY", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "destairport", "=", "value"], "question": "How many 'United Airlines' flights go to Airport 'ASY'?", "question_toks": ["How", "many", "'United", "Airlines", "'", "flights", "go", "to", "Airport", "'ASY", "'", "?"], "guid": 110}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the name, city, and country of the airport that has the highest latitude.", "sql": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "city", ",", "country", "FROM", "airports", "ORDER", "BY", "elevation", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", "from", "airports", "order", "by", "elevation", "desc", "limit", "value"], "question": "Find the name, city, and country of the airport that has the highest latitude.", "question_toks": ["Find", "the", "name", ",", "city", ",", "and", "country", "of", "the", "airport", "that", "has", "the", "highest", "latitude", "."], "guid": 111}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the number of routes operated by the airline American Airlines whose destinations are in Italy?", "sql": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "routes", "AS", "T1", "JOIN", "airports", "AS", "T2", "ON", "T1.dst_apid", "=", "T2.apid", "JOIN", "airlines", "AS", "T3", "ON", "T1.alid", "=", "T3.alid", "WHERE", "T2.country", "=", "'Italy", "'", "AND", "T3.name", "=", "'American", "Airlines", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "routes", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "dst_apid", "=", "t2", ".", "apid", "join", "airlines", "as", "t3", "on", "t1", ".", "alid", "=", "t3", ".", "alid", "where", "t2", ".", "country", "=", "value", "and", "t3", ".", "name", "=", "value"], "question": "What is the number of routes operated by the airline American Airlines whose destinations are in Italy?", "question_toks": ["What", "is", "the", "number", "of", "routes", "operated", "by", "the", "airline", "American", "Airlines", "whose", "destinations", "are", "in", "Italy", "?"], "guid": 112}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?", "sql": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'", "example": {"db_id": "flight_company", "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'", "query_toks": ["SELECT", "DISTINCT", "T2.pilot", "FROM", "airport", "AS", "T1", "JOIN", "flight", "AS", "T2", "ON", "T1.id", "=", "T2.airport_id", "WHERE", "T1.country", "=", "'United", "States", "'", "OR", "T1.name", "=", "'Billund", "Airport", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "pilot", "from", "airport", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "airport_id", "where", "t1", ".", "country", "=", "value", "or", "t1", ".", "name", "=", "value"], "question": "What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?", "question_toks": ["What", "are", "the", "different", "pilot", "names", "who", "had", "piloted", "a", "flight", "in", "the", "country", "'United", "States", "'", "or", "in", "the", "airport", "named", "'Billund", "Airport", "'", "?"], "guid": 113}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the names of all aircrafts that John Williams have certificates to be able to fly?", "sql": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\"", "example": {"db_id": "flight_1", "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\"", "query_toks": ["SELECT", "T3.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T1.name", "=", "``", "John", "Williams", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t1", ".", "name", "=", "value"], "question": "What are the names of all aircrafts that John Williams have certificates to be able to fly?", "question_toks": ["What", "are", "the", "names", "of", "all", "aircrafts", "that", "John", "Williams", "have", "certificates", "to", "be", "able", "to", "fly", "?"], "guid": 114}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | Show the builder of railways associated with the trains named \"Andaman Exp\".", "sql": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID WHERE T2.Name  =  \"Andaman Exp\"", "example": {"db_id": "railway", "query": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID WHERE T2.Name  =  \"Andaman Exp\"", "query_toks": ["SELECT", "T1.Builder", "FROM", "railway", "AS", "T1", "JOIN", "train", "AS", "T2", "ON", "T1.Railway_ID", "=", "T2.Railway_ID", "WHERE", "T2.Name", "=", "``", "Andaman", "Exp", "''"], "query_toks_no_value": ["select", "t1", ".", "builder", "from", "railway", "as", "t1", "join", "train", "as", "t2", "on", "t1", ".", "railway_id", "=", "t2", ".", "railway_id", "where", "t2", ".", "name", "=", "value"], "question": "Show the builder of railways associated with the trains named \"Andaman Exp\".", "question_toks": ["Show", "the", "builder", "of", "railways", "associated", "with", "the", "trains", "named", "``", "Andaman", "Exp", "''", "."], "guid": 115}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Find the name of airports which do not have any flight in and out.", "sql": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "example": {"db_id": "flight_2", "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "query_toks": ["SELECT", "AirportName", "FROM", "Airports", "WHERE", "AirportCode", "NOT", "IN", "(", "SELECT", "SourceAirport", "FROM", "Flights", "UNION", "SELECT", "DestAirport", "FROM", "Flights", ")"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")"], "question": "Find the name of airports which do not have any flight in and out.", "question_toks": ["Find", "the", "name", "of", "airports", "which", "do", "not", "have", "any", "flight", "in", "and", "out", "."], "guid": 116}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | What are the ids and names of the companies that operated more than one flight?", "sql": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1", "example": {"db_id": "flight_company", "query": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "operate_company", "AS", "T1", "JOIN", "flight", "AS", "t2", "ON", "T1.id", "=", "T2.company_id", "GROUP", "BY", "T1.id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "operate_company", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "company_id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the ids and names of the companies that operated more than one flight?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "the", "companies", "that", "operated", "more", "than", "one", "flight", "?"], "guid": 117}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the number of airlines based in Russia?", "sql": "SELECT count(*) FROM airlines WHERE country  =  'Russia'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM airlines WHERE country  =  'Russia'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airlines", "WHERE", "country", "=", "'Russia", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value"], "question": "What is the number of airlines based in Russia?", "question_toks": ["What", "is", "the", "number", "of", "airlines", "based", "in", "Russia", "?"], "guid": 118}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | Show the distinct countries of managers.", "sql": "SELECT DISTINCT Country FROM manager", "example": {"db_id": "railway", "query": "SELECT DISTINCT Country FROM manager", "query_toks": ["SELECT", "DISTINCT", "Country", "FROM", "manager"], "query_toks_no_value": ["select", "distinct", "country", "from", "manager"], "question": "Show the distinct countries of managers.", "question_toks": ["Show", "the", "distinct", "countries", "of", "managers", "."], "guid": 119}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the names of the pilots that have not won any matches in Australia?", "sql": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')", "example": {"db_id": "aircraft", "query": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')", "query_toks": ["SELECT", "name", "FROM", "pilot", "WHERE", "pilot_id", "NOT", "IN", "(", "SELECT", "Winning_Pilot", "FROM", "MATCH", "WHERE", "country", "=", "'Australia", "'", ")"], "query_toks_no_value": ["select", "name", "from", "pilot", "where", "pilot_id", "not", "in", "(", "select", "winning_pilot", "from", "match", "where", "country", "=", "value", ")"], "question": "What are the names of the pilots that have not won any matches in Australia?", "question_toks": ["What", "are", "the", "names", "of", "the", "pilots", "that", "have", "not", "won", "any", "matches", "in", "Australia", "?"], "guid": 120}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show names for all aircrafts with distances more than the average.", "sql": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)", "example": {"db_id": "flight_1", "query": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)", "query_toks": ["SELECT", "name", "FROM", "Aircraft", "WHERE", "distance", ">", "(", "SELECT", "avg", "(", "distance", ")", "FROM", "Aircraft", ")"], "query_toks_no_value": ["select", "name", "from", "aircraft", "where", "distance", ">", "(", "select", "avg", "(", "distance", ")", "from", "aircraft", ")"], "question": "Show names for all aircrafts with distances more than the average.", "question_toks": ["Show", "names", "for", "all", "aircrafts", "with", "distances", "more", "than", "the", "average", "."], "guid": 121}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the names of all employees who have a salary higher than average?", "sql": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)", "example": {"db_id": "flight_1", "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)", "query_toks": ["SELECT", "name", "FROM", "Employee", "WHERE", "salary", ">", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "Employee", ")"], "query_toks_no_value": ["select", "name", "from", "employee", "where", "salary", ">", "(", "select", "avg", "(", "salary", ")", "from", "employee", ")"], "question": "What are the names of all employees who have a salary higher than average?", "question_toks": ["What", "are", "the", "names", "of", "all", "employees", "who", "have", "a", "salary", "higher", "than", "average", "?"], "guid": 122}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which city has most number of arriving flights?", "sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city has most number of arriving flights?", "question_toks": ["Which", "city", "has", "most", "number", "of", "arriving", "flights", "?"], "guid": 123}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Return the number of flights arriving in Aberdeen.", "sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Return the number of flights arriving in Aberdeen.", "question_toks": ["Return", "the", "number", "of", "flights", "arriving", "in", "Aberdeen", "."], "guid": 124}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | What is the most common company type, and how many are there?", "sql": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_company", "query": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "TYPE", ",", "count", "(", "*", ")", "FROM", "operate_company", "GROUP", "BY", "TYPE", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", "from", "operate_company", "group", "by", "type", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common company type, and how many are there?", "question_toks": ["What", "is", "the", "most", "common", "company", "type", ",", "and", "how", "many", "are", "there", "?"], "guid": 125}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What is the name of the youngest captain?", "sql": "SELECT name FROM captain ORDER BY age LIMIT 1", "example": {"db_id": "ship_1", "query": "SELECT name FROM captain ORDER BY age LIMIT 1", "query_toks": ["SELECT", "name", "FROM", "captain", "ORDER", "BY", "age", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "captain", "order", "by", "age", "limit", "value"], "question": "What is the name of the youngest captain?", "question_toks": ["What", "is", "the", "name", "of", "the", "youngest", "captain", "?"], "guid": 126}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | What are the names and arrival times of trains?", "sql": "SELECT Name ,  Arrival FROM train", "example": {"db_id": "railway", "query": "SELECT Name ,  Arrival FROM train", "query_toks": ["SELECT", "Name", ",", "Arrival", "FROM", "train"], "query_toks_no_value": ["select", "name", ",", "arrival", "from", "train"], "question": "What are the names and arrival times of trains?", "question_toks": ["What", "are", "the", "names", "and", "arrival", "times", "of", "trains", "?"], "guid": 127}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the numbers of all flights coming from Los Angeles?", "sql": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"", "example": {"db_id": "flight_1", "query": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"", "query_toks": ["SELECT", "flno", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "flno", "from", "flight", "where", "origin", "=", "value"], "question": "What are the numbers of all flights coming from Los Angeles?", "question_toks": ["What", "are", "the", "numbers", "of", "all", "flights", "coming", "from", "Los", "Angeles", "?"], "guid": 128}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the name and city of the airport which is the destination of the most number of routes.", "sql": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.city", ",", "T2.dst_apid", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "GROUP", "BY", "T2.dst_apid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "city", ",", "t2", ".", "dst_apid", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "group", "by", "t2", ".", "dst_apid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and city of the airport which is the destination of the most number of routes.", "question_toks": ["Find", "the", "name", "and", "city", "of", "the", "airport", "which", "is", "the", "destination", "of", "the", "most", "number", "of", "routes", "."], "guid": 129}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the aircrafts with top 3 shortest lengthes? List their names.", "sql": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3", "example": {"db_id": "flight_1", "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3", "query_toks": ["SELECT", "name", "FROM", "Aircraft", "ORDER", "BY", "distance", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "aircraft", "order", "by", "distance", "limit", "value"], "question": "What are the aircrafts with top 3 shortest lengthes? List their names.", "question_toks": ["What", "are", "the", "aircrafts", "with", "top", "3", "shortest", "lengthes", "?", "List", "their", "names", "."], "guid": 130}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What is the airport name for airport 'AKO'?", "sql": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "example": {"db_id": "flight_2", "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "query_toks": ["SELECT", "AirportName", "FROM", "AIRPORTS", "WHERE", "AirportCode", "=", "``", "AKO", "''"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "value"], "question": "What is the airport name for airport 'AKO'?", "question_toks": ["What", "is", "the", "airport", "name", "for", "airport", "'AKO", "'", "?"], "guid": 131}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | How many airports are there per country? Order the countries by decreasing number of airports.", "sql": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC", "example": {"db_id": "flight_4", "query": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "country", "FROM", "airports", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "country", "from", "airports", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many airports are there per country? Order the countries by decreasing number of airports.", "question_toks": ["How", "many", "airports", "are", "there", "per", "country", "?", "Order", "the", "countries", "by", "decreasing", "number", "of", "airports", "."], "guid": 132}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | Show the types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000.", "sql": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000", "example": {"db_id": "ship_mission", "query": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000", "query_toks": ["SELECT", "TYPE", "FROM", "ship", "WHERE", "Tonnage", ">", "6000", "INTERSECT", "SELECT", "TYPE", "FROM", "ship", "WHERE", "Tonnage", "<", "4000"], "query_toks_no_value": ["select", "type", "from", "ship", "where", "tonnage", ">", "value", "intersect", "select", "type", "from", "ship", "where", "tonnage", "<", "value"], "question": "Show the types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000.", "question_toks": ["Show", "the", "types", "of", "ships", "that", "have", "both", "ships", "with", "tonnage", "larger", "than", "6000", "and", "ships", "with", "tonnage", "smaller", "than", "4000", "."], "guid": 133}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What are the names of the airports in the city of Goroka?", "sql": "SELECT name FROM airports WHERE city  =  'Goroka'", "example": {"db_id": "flight_4", "query": "SELECT name FROM airports WHERE city  =  'Goroka'", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "city", "=", "'Goroka", "'"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "city", "=", "value"], "question": "What are the names of the airports in the city of Goroka?", "question_toks": ["What", "are", "the", "names", "of", "the", "airports", "in", "the", "city", "of", "Goroka", "?"], "guid": 134}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the name of airline which runs the most number of routes.", "sql": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name of airline which runs the most number of routes.", "question_toks": ["Find", "the", "name", "of", "airline", "which", "runs", "the", "most", "number", "of", "routes", "."], "guid": 135}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What are flight numbers of flights arriving at City \"Aberdeen\"?", "sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "example": {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "arriving", "at", "City", "``", "Aberdeen", "''", "?"], "guid": 136}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What is the maximum and mininum number of transit passengers for all airports?", "sql": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport", "example": {"db_id": "aircraft", "query": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport", "query_toks": ["SELECT", "max", "(", "Transit_Passengers", ")", ",", "min", "(", "Transit_Passengers", ")", "FROM", "airport"], "query_toks_no_value": ["select", "max", "(", "transit_passengers", ")", ",", "min", "(", "transit_passengers", ")", "from", "airport"], "question": "What is the maximum and mininum number of transit passengers for all airports?", "question_toks": ["What", "is", "the", "maximum", "and", "mininum", "number", "of", "transit", "passengers", "for", "all", "airports", "?"], "guid": 137}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What destination has the fewest number of flights?", "sql": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "destination", "FROM", "Flight", "GROUP", "BY", "destination", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "destination", "from", "flight", "group", "by", "destination", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What destination has the fewest number of flights?", "question_toks": ["What", "destination", "has", "the", "fewest", "number", "of", "flights", "?"], "guid": 138}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which flight numbers correspond to United Airlines flights?", "sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "example": {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T2.uid", "=", "T1.Airline", "WHERE", "T2.Airline", "=", "``", "United", "Airlines", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2", ".", "uid", "=", "t1", ".", "airline", "where", "t2", ".", "airline", "=", "value"], "question": "Which flight numbers correspond to United Airlines flights?", "question_toks": ["Which", "flight", "numbers", "correspond", "to", "United", "Airlines", "flights", "?"], "guid": 139}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | List the id, country, city and name of the airports ordered alphabetically by the name.", "sql": "SELECT id ,  country ,  city ,  name FROM airport ORDER BY name", "example": {"db_id": "flight_company", "query": "SELECT id ,  country ,  city ,  name FROM airport ORDER BY name", "query_toks": ["SELECT", "id", ",", "country", ",", "city", ",", "name", "FROM", "airport", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "id", ",", "country", ",", "city", ",", "name", "from", "airport", "order", "by", "name"], "question": "List the id, country, city and name of the airports ordered alphabetically by the name.", "question_toks": ["List", "the", "id", ",", "country", ",", "city", "and", "name", "of", "the", "airports", "ordered", "alphabetically", "by", "the", "name", "."], "guid": 140}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | Show the distinct fate of missions that involve ships with nationality \"United States\"", "sql": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\"", "example": {"db_id": "ship_mission", "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\"", "query_toks": ["SELECT", "DISTINCT", "T1.Fate", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID", "WHERE", "T2.Nationality", "=", "``", "United", "States", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fate", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "where", "t2", ".", "nationality", "=", "value"], "question": "Show the distinct fate of missions that involve ships with nationality \"United States\"", "question_toks": ["Show", "the", "distinct", "fate", "of", "missions", "that", "involve", "ships", "with", "nationality", "``", "United", "States", "''"], "guid": 141}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What are the different fates of the mission that involved ships from the United States?", "sql": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\"", "example": {"db_id": "ship_mission", "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\"", "query_toks": ["SELECT", "DISTINCT", "T1.Fate", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID", "WHERE", "T2.Nationality", "=", "``", "United", "States", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fate", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "where", "t2", ".", "nationality", "=", "value"], "question": "What are the different fates of the mission that involved ships from the United States?", "question_toks": ["What", "are", "the", "different", "fates", "of", "the", "mission", "that", "involved", "ships", "from", "the", "United", "States", "?"], "guid": 142}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | List the names and locations of all stations ordered by their yearly entry exit and interchange amounts.", "sql": "SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges", "example": {"db_id": "train_station", "query": "SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "station", "ORDER", "BY", "Annual_entry_exit", ",", "Annual_interchanges"], "query_toks_no_value": ["select", "name", ",", "location", "from", "station", "order", "by", "annual_entry_exit", ",", "annual_interchanges"], "question": "List the names and locations of all stations ordered by their yearly entry exit and interchange amounts.", "question_toks": ["List", "the", "names", "and", "locations", "of", "all", "stations", "ordered", "by", "their", "yearly", "entry", "exit", "and", "interchange", "amounts", "."], "guid": 143}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the name of pilots aged 25 or older?", "sql": "SELECT Name FROM pilot WHERE Age  >=  25", "example": {"db_id": "aircraft", "query": "SELECT Name FROM pilot WHERE Age  >=  25", "query_toks": ["SELECT", "Name", "FROM", "pilot", "WHERE", "Age", ">", "=", "25"], "query_toks_no_value": ["select", "name", "from", "pilot", "where", "age", ">", "=", "value"], "question": "What are the name of pilots aged 25 or older?", "question_toks": ["What", "are", "the", "name", "of", "pilots", "aged", "25", "or", "older", "?"], "guid": 144}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show the name, time, and service for all trains.", "sql": "SELECT name ,  TIME ,  service FROM train", "example": {"db_id": "train_station", "query": "SELECT name ,  TIME ,  service FROM train", "query_toks": ["SELECT", "name", ",", "TIME", ",", "service", "FROM", "train"], "query_toks_no_value": ["select", "name", ",", "time", ",", "service", "from", "train"], "question": "Show the name, time, and service for all trains.", "question_toks": ["Show", "the", "name", ",", "time", ",", "and", "service", "for", "all", "trains", "."], "guid": 145}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What are the countries with the most airlines whose active status is Y?", "sql": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "country", "FROM", "airlines", "WHERE", "active", "=", "'Y", "'", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "active", "=", "value", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the countries with the most airlines whose active status is Y?", "question_toks": ["What", "are", "the", "countries", "with", "the", "most", "airlines", "whose", "active", "status", "is", "Y", "?"], "guid": 146}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?", "sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRPORTS", "AS", "T3", "ON", "T1.SourceAirport", "=", "T3.AirportCode", "WHERE", "T2.City", "=", "``", "Ashley", "''", "AND", "T3.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airports", "as", "t3", "on", "t1", ".", "sourceairport", "=", "t3", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "city", "=", "value"], "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?", "question_toks": ["How", "many", "flights", "depart", "from", "City", "'Aberdeen", "'", "and", "have", "destination", "City", "'Ashley", "'", "?"], "guid": 147}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | What are the names and types of the companies that have ever operated a flight?", "sql": "SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id", "example": {"db_id": "flight_company", "query": "SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id", "query_toks": ["SELECT", "T1.name", ",", "T1.type", "FROM", "operate_company", "AS", "T1", "JOIN", "flight", "AS", "t2", "ON", "T1.id", "=", "T2.company_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "type", "from", "operate_company", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "company_id"], "question": "What are the names and types of the companies that have ever operated a flight?", "question_toks": ["What", "are", "the", "names", "and", "types", "of", "the", "companies", "that", "have", "ever", "operated", "a", "flight", "?"], "guid": 148}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the number of routes operated by American Airlines.", "sql": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "WHERE", "T1.name", "=", "'American", "Airlines", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "where", "t1", ".", "name", "=", "value"], "question": "Find the number of routes operated by American Airlines.", "question_toks": ["Find", "the", "number", "of", "routes", "operated", "by", "American", "Airlines", "."], "guid": 149}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the names and descriptions of aircrafts associated with an airport that has more total passengers than 10000000?", "sql": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000", "example": {"db_id": "aircraft", "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000", "query_toks": ["SELECT", "T1.Aircraft", ",", "T1.Description", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Total_Passengers", ">", "10000000"], "query_toks_no_value": ["select", "t1", ".", "aircraft", ",", "t1", ".", "description", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "total_passengers", ">", "value"], "question": "What are the names and descriptions of aircrafts associated with an airport that has more total passengers than 10000000?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "aircrafts", "associated", "with", "an", "airport", "that", "has", "more", "total", "passengers", "than", "10000000", "?"], "guid": 150}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the total number of airlines?", "sql": "SELECT count(*) FROM airlines", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM airlines", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airlines"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines"], "question": "What is the total number of airlines?", "question_toks": ["What", "is", "the", "total", "number", "of", "airlines", "?"], "guid": 151}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than 10000000.", "sql": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000", "example": {"db_id": "aircraft", "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000", "query_toks": ["SELECT", "T1.Aircraft", ",", "T1.Description", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Total_Passengers", ">", "10000000"], "query_toks_no_value": ["select", "t1", ".", "aircraft", ",", "t1", ".", "description", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "total_passengers", ">", "value"], "question": "Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than 10000000.", "question_toks": ["Please", "show", "the", "names", "and", "descriptions", "of", "aircrafts", "associated", "with", "airports", "that", "have", "a", "total", "number", "of", "passengers", "bigger", "than", "10000000", "."], "guid": 152}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | How many cities are there that have more than 3 airports?", "sql": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "(", "SELECT", "city", "FROM", "airports", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "3", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "city", "from", "airports", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value", ")"], "question": "How many cities are there that have more than 3 airports?", "question_toks": ["How", "many", "cities", "are", "there", "that", "have", "more", "than", "3", "airports", "?"], "guid": 153}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the number of routes that end at John F Kennedy International Airport?", "sql": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "WHERE", "T1.name", "=", "'John", "F", "Kennedy", "International", "Airport", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "where", "t1", ".", "name", "=", "value"], "question": "What is the number of routes that end at John F Kennedy International Airport?", "question_toks": ["What", "is", "the", "number", "of", "routes", "that", "end", "at", "John", "F", "Kennedy", "International", "Airport", "?"], "guid": 154}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Return the flag that is most common among all ships.", "sql": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "ship_1", "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "flag", "FROM", "ship", "GROUP", "BY", "flag", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "flag", "from", "ship", "group", "by", "flag", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the flag that is most common among all ships.", "question_toks": ["Return", "the", "flag", "that", "is", "most", "common", "among", "all", "ships", "."], "guid": 155}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What are the mission codes, fates, and names of the ships involved?", "sql": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID", "example": {"db_id": "ship_mission", "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID", "query_toks": ["SELECT", "T1.Code", ",", "T1.Fate", ",", "T2.Name", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID"], "query_toks_no_value": ["select", "t1", ".", "code", ",", "t1", ".", "fate", ",", "t2", ".", "name", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id"], "question": "What are the mission codes, fates, and names of the ships involved?", "question_toks": ["What", "are", "the", "mission", "codes", ",", "fates", ",", "and", "names", "of", "the", "ships", "involved", "?"], "guid": 156}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What is the year in which most ships were built?", "sql": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "ship_1", "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "built_year", "FROM", "ship", "GROUP", "BY", "built_year", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "built_year", "from", "ship", "group", "by", "built_year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the year in which most ships were built?", "question_toks": ["What", "is", "the", "year", "in", "which", "most", "ships", "were", "built", "?"], "guid": 157}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What are the names of captains, sorted by age descending?", "sql": "SELECT name FROM captain ORDER BY age DESC", "example": {"db_id": "ship_1", "query": "SELECT name FROM captain ORDER BY age DESC", "query_toks": ["SELECT", "name", "FROM", "captain", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", "from", "captain", "order", "by", "age", "desc"], "question": "What are the names of captains, sorted by age descending?", "question_toks": ["What", "are", "the", "names", "of", "captains", ",", "sorted", "by", "age", "descending", "?"], "guid": 158}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | what are the names and classes of the ships that do not have any captain yet?", "sql": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)", "example": {"db_id": "ship_1", "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)", "query_toks": ["SELECT", "name", ",", "CLASS", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", ")"], "query_toks_no_value": ["select", "name", ",", "class", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", ")"], "question": "what are the names and classes of the ships that do not have any captain yet?", "question_toks": ["what", "are", "the", "names", "and", "classes", "of", "the", "ships", "that", "do", "not", "have", "any", "captain", "yet", "?"], "guid": 159}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | Show the locations that have more than one railways.", "sql": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1", "example": {"db_id": "railway", "query": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "LOCATION", "FROM", "railway", "GROUP", "BY", "LOCATION", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "location", "from", "railway", "group", "by", "location", "having", "count", "(", "*", ")", ">", "value"], "question": "Show the locations that have more than one railways.", "question_toks": ["Show", "the", "locations", "that", "have", "more", "than", "one", "railways", "."], "guid": 160}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What are the names of the ships that are not involved in any missions?", "sql": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)", "example": {"db_id": "ship_mission", "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)", "query_toks": ["SELECT", "Name", "FROM", "ship", "WHERE", "Ship_ID", "NOT", "IN", "(", "SELECT", "Ship_ID", "FROM", "mission", ")"], "query_toks_no_value": ["select", "name", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "mission", ")"], "question": "What are the names of the ships that are not involved in any missions?", "question_toks": ["What", "are", "the", "names", "of", "the", "ships", "that", "are", "not", "involved", "in", "any", "missions", "?"], "guid": 161}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What is the abbreviation of Airline \"JetBlue Airways\"?", "sql": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "example": {"db_id": "flight_2", "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "value"], "question": "What is the abbreviation of Airline \"JetBlue Airways\"?", "question_toks": ["What", "is", "the", "abbreviation", "of", "Airline", "``", "JetBlue", "Airways", "''", "?"], "guid": 162}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the number of routes from the United States to Canada.", "sql": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "routes", "WHERE", "dst_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'Canada", "'", ")", "AND", "src_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "routes", "where", "dst_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")", "and", "src_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")"], "question": "Find the number of routes from the United States to Canada.", "question_toks": ["Find", "the", "number", "of", "routes", "from", "the", "United", "States", "to", "Canada", "."], "guid": 163}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | What are the distinct types of the companies that have operated any flights with velocity less than 200?", "sql": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200", "example": {"db_id": "flight_company", "query": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200", "query_toks": ["SELECT", "DISTINCT", "T1.type", "FROM", "operate_company", "AS", "T1", "JOIN", "flight", "AS", "t2", "ON", "T1.id", "=", "T2.company_id", "WHERE", "T2.velocity", "<", "200"], "query_toks_no_value": ["select", "distinct", "t1", ".", "type", "from", "operate_company", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "company_id", "where", "t2", ".", "velocity", "<", "value"], "question": "What are the distinct types of the companies that have operated any flights with velocity less than 200?", "question_toks": ["What", "are", "the", "distinct", "types", "of", "the", "companies", "that", "have", "operated", "any", "flights", "with", "velocity", "less", "than", "200", "?"], "guid": 164}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the country of the airlines whose name starts with 'Orbit'.", "sql": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'", "example": {"db_id": "flight_4", "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'", "query_toks": ["SELECT", "country", "FROM", "airlines", "WHERE", "name", "LIKE", "'Orbit", "%", "'"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "name", "like", "value"], "question": "Find the country of the airlines whose name starts with 'Orbit'.", "question_toks": ["Find", "the", "country", "of", "the", "airlines", "whose", "name", "starts", "with", "'Orbit", "'", "."], "guid": 165}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | what is the name and age of the youngest winning pilot?", "sql": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1", "example": {"db_id": "aircraft", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.age", "FROM", "pilot", "AS", "t1", "JOIN", "MATCH", "AS", "t2", "ON", "t1.pilot_id", "=", "t2.winning_pilot", "ORDER", "BY", "t1.age", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "pilot", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "pilot_id", "=", "t2", ".", "winning_pilot", "order", "by", "t1", ".", "age", "limit", "value"], "question": "what is the name and age of the youngest winning pilot?", "question_toks": ["what", "is", "the", "name", "and", "age", "of", "the", "youngest", "winning", "pilot", "?"], "guid": 166}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Count the number of flights departing from 'APG'.", "sql": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "value"], "question": "Count the number of flights departing from 'APG'.", "question_toks": ["Count", "the", "number", "of", "flights", "departing", "from", "'APG", "'", "."], "guid": 167}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | What are the positions and teams of pilots?", "sql": "SELECT POSITION ,  Team FROM pilot", "example": {"db_id": "pilot_record", "query": "SELECT POSITION ,  Team FROM pilot", "query_toks": ["SELECT", "POSITION", ",", "Team", "FROM", "pilot"], "query_toks_no_value": ["select", "position", ",", "team", "from", "pilot"], "question": "What are the positions and teams of pilots?", "question_toks": ["What", "are", "the", "positions", "and", "teams", "of", "pilots", "?"], "guid": 168}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the names of all the aircrafts associated with London Gatwick airport?", "sql": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "example": {"db_id": "aircraft", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "query_toks": ["SELECT", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Airport_Name", "=", "``", "London", "Gatwick", "''"], "query_toks_no_value": ["select", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "airport_name", "=", "value"], "question": "What are the names of all the aircrafts associated with London Gatwick airport?", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "aircrafts", "associated", "with", "London", "Gatwick", "airport", "?"], "guid": 169}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | How many railways are there?", "sql": "SELECT count(*) FROM railway", "example": {"db_id": "railway", "query": "SELECT count(*) FROM railway", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "railway"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "railway"], "question": "How many railways are there?", "question_toks": ["How", "many", "railways", "are", "there", "?"], "guid": 170}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | Show the names of pilots and the number of records they have.", "sql": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name", "example": {"db_id": "pilot_record", "query": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name", "query_toks": ["SELECT", "T2.Pilot_name", ",", "COUNT", "(", "*", ")", "FROM", "pilot_record", "AS", "T1", "JOIN", "pilot", "AS", "T2", "ON", "T1.pilot_ID", "=", "T2.pilot_ID", "GROUP", "BY", "T2.Pilot_name"], "query_toks_no_value": ["select", "t2", ".", "pilot_name", ",", "count", "(", "*", ")", "from", "pilot_record", "as", "t1", "join", "pilot", "as", "t2", "on", "t1", ".", "pilot_id", "=", "t2", ".", "pilot_id", "group", "by", "t2", ".", "pilot_name"], "question": "Show the names of pilots and the number of records they have.", "question_toks": ["Show", "the", "names", "of", "pilots", "and", "the", "number", "of", "records", "they", "have", "."], "guid": 171}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | Show the names of aircrafts that are associated with both an airport named \"London Heathrow\" and an airport named \"London Gatwick\"", "sql": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "example": {"db_id": "aircraft", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "query_toks": ["SELECT", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Airport_Name", "=", "``", "London", "Heathrow", "''", "INTERSECT", "SELECT", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Airport_Name", "=", "``", "London", "Gatwick", "''"], "query_toks_no_value": ["select", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "airport_name", "=", "value", "intersect", "select", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "airport_name", "=", "value"], "question": "Show the names of aircrafts that are associated with both an airport named \"London Heathrow\" and an airport named \"London Gatwick\"", "question_toks": ["Show", "the", "names", "of", "aircrafts", "that", "are", "associated", "with", "both", "an", "airport", "named", "``", "London", "Heathrow", "''", "and", "an", "airport", "named", "``", "London", "Gatwick", "''"], "guid": 172}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the numbers of all flights that can cover a distance of more than 2000?", "sql": "SELECT flno FROM Flight WHERE distance  >  2000", "example": {"db_id": "flight_1", "query": "SELECT flno FROM Flight WHERE distance  >  2000", "query_toks": ["SELECT", "flno", "FROM", "Flight", "WHERE", "distance", ">", "2000"], "query_toks_no_value": ["select", "flno", "from", "flight", "where", "distance", ">", "value"], "question": "What are the numbers of all flights that can cover a distance of more than 2000?", "question_toks": ["What", "are", "the", "numbers", "of", "all", "flights", "that", "can", "cover", "a", "distance", "of", "more", "than", "2000", "?"], "guid": 173}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | List the names of aircrafts and the number of times it won matches.", "sql": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft", "example": {"db_id": "aircraft", "query": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft", "query_toks": ["SELECT", "T1.Aircraft", ",", "COUNT", "(", "*", ")", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft", "GROUP", "BY", "T2.Winning_Aircraft"], "query_toks_no_value": ["select", "t1", ".", "aircraft", ",", "count", "(", "*", ")", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft", "group", "by", "t2", ".", "winning_aircraft"], "question": "List the names of aircrafts and the number of times it won matches.", "question_toks": ["List", "the", "names", "of", "aircrafts", "and", "the", "number", "of", "times", "it", "won", "matches", "."], "guid": 174}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What is the name of the aircraft that has won an award the most?", "sql": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "aircraft", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft", "GROUP", "BY", "T2.Winning_Aircraft", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft", "group", "by", "t2", ".", "winning_aircraft", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the aircraft that has won an award the most?", "question_toks": ["What", "is", "the", "name", "of", "the", "aircraft", "that", "has", "won", "an", "award", "the", "most", "?"], "guid": 175}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What is the name of the ship with the largest tonnage?", "sql": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1", "example": {"db_id": "ship_mission", "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "ship", "ORDER", "BY", "Tonnage", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "ship", "order", "by", "tonnage", "desc", "limit", "value"], "question": "What is the name of the ship with the largest tonnage?", "question_toks": ["What", "is", "the", "name", "of", "the", "ship", "with", "the", "largest", "tonnage", "?"], "guid": 176}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the origins of all flights that are headed to Honolulu?", "sql": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"", "example": {"db_id": "flight_1", "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"", "query_toks": ["SELECT", "origin", "FROM", "Flight", "WHERE", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "origin", "from", "flight", "where", "destination", "=", "value"], "question": "What are the origins of all flights that are headed to Honolulu?", "question_toks": ["What", "are", "the", "origins", "of", "all", "flights", "that", "are", "headed", "to", "Honolulu", "?"], "guid": 177}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Return the average and minimum age of captains in each class.", "sql": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS", "example": {"db_id": "ship_1", "query": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "CLASS", "FROM", "captain", "GROUP", "BY", "CLASS"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "class", "from", "captain", "group", "by", "class"], "question": "Return the average and minimum age of captains in each class.", "question_toks": ["Return", "the", "average", "and", "minimum", "age", "of", "captains", "in", "each", "class", "."], "guid": 178}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many flights does airline 'JetBlue Airways' have?", "sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T1.Airline", "=", "T2.uid", "WHERE", "T2.Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1", ".", "airline", "=", "t2", ".", "uid", "where", "t2", ".", "airline", "=", "value"], "question": "How many flights does airline 'JetBlue Airways' have?", "question_toks": ["How", "many", "flights", "does", "airline", "'JetBlue", "Airways", "'", "have", "?"], "guid": 179}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the maximum and minimum number of transit passengers of all aiports.", "sql": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport", "example": {"db_id": "aircraft", "query": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport", "query_toks": ["SELECT", "max", "(", "Transit_Passengers", ")", ",", "min", "(", "Transit_Passengers", ")", "FROM", "airport"], "query_toks_no_value": ["select", "max", "(", "transit_passengers", ")", ",", "min", "(", "transit_passengers", ")", "from", "airport"], "question": "What are the maximum and minimum number of transit passengers of all aiports.", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "number", "of", "transit", "passengers", "of", "all", "aiports", "."], "guid": 180}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | Show different builders of railways, along with the corresponding number of railways using each builder.", "sql": "SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder", "example": {"db_id": "railway", "query": "SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder", "query_toks": ["SELECT", "Builder", ",", "COUNT", "(", "*", ")", "FROM", "railway", "GROUP", "BY", "Builder"], "query_toks_no_value": ["select", "builder", ",", "count", "(", "*", ")", "from", "railway", "group", "by", "builder"], "question": "Show different builders of railways, along with the corresponding number of railways using each builder.", "question_toks": ["Show", "different", "builders", "of", "railways", ",", "along", "with", "the", "corresponding", "number", "of", "railways", "using", "each", "builder", "."], "guid": 181}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Return the cities with more than 3 airports in the United States.", "sql": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3", "example": {"db_id": "flight_4", "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3", "query_toks": ["SELECT", "city", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "3"], "query_toks_no_value": ["select", "city", "from", "airports", "where", "country", "=", "value", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value"], "question": "Return the cities with more than 3 airports in the United States.", "question_toks": ["Return", "the", "cities", "with", "more", "than", "3", "airports", "in", "the", "United", "States", "."], "guid": 182}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | What is maximum group equity shareholding of the companies?", "sql": "SELECT max(group_equity_shareholding) FROM operate_company", "example": {"db_id": "flight_company", "query": "SELECT max(group_equity_shareholding) FROM operate_company", "query_toks": ["SELECT", "max", "(", "group_equity_shareholding", ")", "FROM", "operate_company"], "query_toks_no_value": ["select", "max", "(", "group_equity_shareholding", ")", "from", "operate_company"], "question": "What is maximum group equity shareholding of the companies?", "question_toks": ["What", "is", "maximum", "group", "equity", "shareholding", "of", "the", "companies", "?"], "guid": 183}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is average and maximum salary of all employees.", "sql": "SELECT avg(salary) ,  max(salary) FROM Employee", "example": {"db_id": "flight_1", "query": "SELECT avg(salary) ,  max(salary) FROM Employee", "query_toks": ["SELECT", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "FROM", "Employee"], "query_toks_no_value": ["select", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "from", "employee"], "question": "What is average and maximum salary of all employees.", "question_toks": ["What", "is", "average", "and", "maximum", "salary", "of", "all", "employees", "."], "guid": 184}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the number of different airports which are the destinations of the American Airlines.", "sql": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "example": {"db_id": "flight_4", "query": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dst_apid", ")", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "WHERE", "T1.name", "=", "'American", "Airlines", "'"], "query_toks_no_value": ["select", "count", "(", "distinct", "dst_apid", ")", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "where", "t1", ".", "name", "=", "value"], "question": "Find the number of different airports which are the destinations of the American Airlines.", "question_toks": ["Find", "the", "number", "of", "different", "airports", "which", "are", "the", "destinations", "of", "the", "American", "Airlines", "."], "guid": 185}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show me the departure date and arrival date for all flights from Los Angeles to Honolulu.", "sql": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "example": {"db_id": "flight_1", "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "query_toks": ["SELECT", "departure_date", ",", "arrival_date", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''", "AND", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "departure_date", ",", "arrival_date", "from", "flight", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "Show me the departure date and arrival date for all flights from Los Angeles to Honolulu.", "question_toks": ["Show", "me", "the", "departure", "date", "and", "arrival", "date", "for", "all", "flights", "from", "Los", "Angeles", "to", "Honolulu", "."], "guid": 186}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Find all airlines that have flights from both airports 'APG' and 'CVO'.", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''", "INTERSECT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "intersect", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "question_toks": ["Find", "all", "airlines", "that", "have", "flights", "from", "both", "airports", "'APG", "'", "and", "'CVO", "'", "."], "guid": 187}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Return the number of  airports.", "sql": "SELECT count(*) FROM AIRPORTS", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRPORTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRPORTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports"], "question": "Return the number of  airports.", "question_toks": ["Return", "the", "number", "of", "airports", "."], "guid": 188}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the name of the aircraft that was on flight number 99?", "sql": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99", "example": {"db_id": "flight_1", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99", "query_toks": ["SELECT", "T2.name", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "WHERE", "T1.flno", "=", "99"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "where", "t1", ".", "flno", "=", "value"], "question": "What is the name of the aircraft that was on flight number 99?", "question_toks": ["What", "is", "the", "name", "of", "the", "aircraft", "that", "was", "on", "flight", "number", "99", "?"], "guid": 189}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Count the number of captains younger than 50 of each rank.", "sql": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank", "example": {"db_id": "ship_1", "query": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "rank", "FROM", "captain", "WHERE", "age", "<", "50", "GROUP", "BY", "rank"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "rank", "from", "captain", "where", "age", "<", "value", "group", "by", "rank"], "question": "Count the number of captains younger than 50 of each rank.", "question_toks": ["Count", "the", "number", "of", "captains", "younger", "than", "50", "of", "each", "rank", "."], "guid": 190}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | For each type, how many ships are there?", "sql": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE", "example": {"db_id": "ship_mission", "query": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "COUNT", "(", "*", ")", "FROM", "ship", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", "from", "ship", "group", "by", "type"], "question": "For each type, how many ships are there?", "question_toks": ["For", "each", "type", ",", "how", "many", "ships", "are", "there", "?"], "guid": 191}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show the name of aircrafts with top three lowest distances.", "sql": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3", "example": {"db_id": "flight_1", "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3", "query_toks": ["SELECT", "name", "FROM", "Aircraft", "ORDER", "BY", "distance", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "aircraft", "order", "by", "distance", "limit", "value"], "question": "Show the name of aircrafts with top three lowest distances.", "question_toks": ["Show", "the", "name", "of", "aircrafts", "with", "top", "three", "lowest", "distances", "."], "guid": 192}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What are the names of ships, ordered by year they were built and their class?", "sql": "SELECT name FROM ship ORDER BY built_year ,  CLASS", "example": {"db_id": "ship_1", "query": "SELECT name FROM ship ORDER BY built_year ,  CLASS", "query_toks": ["SELECT", "name", "FROM", "ship", "ORDER", "BY", "built_year", ",", "CLASS"], "query_toks_no_value": ["select", "name", "from", "ship", "order", "by", "built_year", ",", "class"], "question": "What are the names of ships, ordered by year they were built and their class?", "question_toks": ["What", "are", "the", "names", "of", "ships", ",", "ordered", "by", "year", "they", "were", "built", "and", "their", "class", "?"], "guid": 193}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show origin and destination for flights with price higher than 300.", "sql": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "example": {"db_id": "flight_1", "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "query_toks": ["SELECT", "origin", ",", "destination", "FROM", "Flight", "WHERE", "price", ">", "300"], "query_toks_no_value": ["select", "origin", ",", "destination", "from", "flight", "where", "price", ">", "value"], "question": "Show origin and destination for flights with price higher than 300.", "question_toks": ["Show", "origin", "and", "destination", "for", "flights", "with", "price", "higher", "than", "300", "."], "guid": 194}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Find the captain rank that has no captain in Third-rate ship of the line class.", "sql": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'", "example": {"db_id": "ship_1", "query": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'", "query_toks": ["SELECT", "rank", "FROM", "captain", "EXCEPT", "SELECT", "rank", "FROM", "captain", "WHERE", "CLASS", "=", "'Third-rate", "ship", "of", "the", "line", "'"], "query_toks_no_value": ["select", "rank", "from", "captain", "except", "select", "rank", "from", "captain", "where", "class", "=", "value"], "question": "Find the captain rank that has no captain in Third-rate ship of the line class.", "question_toks": ["Find", "the", "captain", "rank", "that", "has", "no", "captain", "in", "Third-rate", "ship", "of", "the", "line", "class", "."], "guid": 195}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the name, city, and country of the airport with the highest elevation?", "sql": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "city", ",", "country", "FROM", "airports", "ORDER", "BY", "elevation", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", "from", "airports", "order", "by", "elevation", "desc", "limit", "value"], "question": "What is the name, city, and country of the airport with the highest elevation?", "question_toks": ["What", "is", "the", "name", ",", "city", ",", "and", "country", "of", "the", "airport", "with", "the", "highest", "elevation", "?"], "guid": 196}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the name and salary of all employees in order of salary?", "sql": "SELECT name ,  salary FROM Employee ORDER BY salary", "example": {"db_id": "flight_1", "query": "SELECT name ,  salary FROM Employee ORDER BY salary", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "Employee", "ORDER", "BY", "salary"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "employee", "order", "by", "salary"], "question": "What is the name and salary of all employees in order of salary?", "question_toks": ["What", "is", "the", "name", "and", "salary", "of", "all", "employees", "in", "order", "of", "salary", "?"], "guid": 197}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | For each origin, how many flights came from there?", "sql": "SELECT origin ,  count(*) FROM Flight GROUP BY origin", "example": {"db_id": "flight_1", "query": "SELECT origin ,  count(*) FROM Flight GROUP BY origin", "query_toks": ["SELECT", "origin", ",", "count", "(", "*", ")", "FROM", "Flight", "GROUP", "BY", "origin"], "query_toks_no_value": ["select", "origin", ",", "count", "(", "*", ")", "from", "flight", "group", "by", "origin"], "question": "For each origin, how many flights came from there?", "question_toks": ["For", "each", "origin", ",", "how", "many", "flights", "came", "from", "there", "?"], "guid": 198}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show all flight numbers with aircraft Airbus A340-300.", "sql": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\"", "example": {"db_id": "flight_1", "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\"", "query_toks": ["SELECT", "T1.flno", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "WHERE", "T2.name", "=", "``", "Airbus", "A340-300", "''"], "query_toks_no_value": ["select", "t1", ".", "flno", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "where", "t2", ".", "name", "=", "value"], "question": "Show all flight numbers with aircraft Airbus A340-300.", "question_toks": ["Show", "all", "flight", "numbers", "with", "aircraft", "Airbus", "A340-300", "."], "guid": 199}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the names of all employees who can fly both the Boeing 737-800 and the Airbus A340-300?", "sql": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\"", "example": {"db_id": "flight_1", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\"", "query_toks": ["SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Boeing", "737-800", "''", "INTERSECT", "SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Airbus", "A340-300", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value", "intersect", "select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value"], "question": "What are the names of all employees who can fly both the Boeing 737-800 and the Airbus A340-300?", "question_toks": ["What", "are", "the", "names", "of", "all", "employees", "who", "can", "fly", "both", "the", "Boeing", "737-800", "and", "the", "Airbus", "A340-300", "?"], "guid": 200}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | How many aircrafts exist in the database?", "sql": "SELECT count(*) FROM Aircraft", "example": {"db_id": "flight_1", "query": "SELECT count(*) FROM Aircraft", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Aircraft"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "aircraft"], "question": "How many aircrafts exist in the database?", "question_toks": ["How", "many", "aircrafts", "exist", "in", "the", "database", "?"], "guid": 201}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Return the minimum, average and maximum distances traveled across all aircrafts.", "sql": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft", "example": {"db_id": "flight_1", "query": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft", "query_toks": ["SELECT", "min", "(", "distance", ")", ",", "avg", "(", "distance", ")", ",", "max", "(", "distance", ")", "FROM", "Aircraft"], "query_toks_no_value": ["select", "min", "(", "distance", ")", ",", "avg", "(", "distance", ")", ",", "max", "(", "distance", ")", "from", "aircraft"], "question": "Return the minimum, average and maximum distances traveled across all aircrafts.", "question_toks": ["Return", "the", "minimum", ",", "average", "and", "maximum", "distances", "traveled", "across", "all", "aircrafts", "."], "guid": 202}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Find the name of the ships that have more than one captain.", "sql": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1", "example": {"db_id": "ship_1", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1", "query_toks": ["SELECT", "t1.name", "FROM", "ship", "AS", "t1", "JOIN", "captain", "AS", "t2", "ON", "t1.ship_id", "=", "t2.ship_id", "GROUP", "BY", "t2.ship_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "ship", "as", "t1", "join", "captain", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "group", "by", "t2", ".", "ship_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the name of the ships that have more than one captain.", "question_toks": ["Find", "the", "name", "of", "the", "ships", "that", "have", "more", "than", "one", "captain", "."], "guid": 203}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the names of all employees who have a certificate to fly Boeing 737-800?", "sql": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "example": {"db_id": "flight_1", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "query_toks": ["SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Boeing", "737-800", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value"], "question": "What are the names of all employees who have a certificate to fly Boeing 737-800?", "question_toks": ["What", "are", "the", "names", "of", "all", "employees", "who", "have", "a", "certificate", "to", "fly", "Boeing", "737-800", "?"], "guid": 204}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show all locations that have train stations with at least 15 platforms and train stations with more than 25 total passengers.", "sql": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25", "example": {"db_id": "train_station", "query": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25", "query_toks": ["SELECT", "DISTINCT", "LOCATION", "FROM", "station", "WHERE", "number_of_platforms", ">", "=", "15", "AND", "total_passengers", ">", "25"], "query_toks_no_value": ["select", "distinct", "location", "from", "station", "where", "number_of_platforms", ">", "=", "value", "and", "total_passengers", ">", "value"], "question": "Show all locations that have train stations with at least 15 platforms and train stations with more than 25 total passengers.", "question_toks": ["Show", "all", "locations", "that", "have", "train", "stations", "with", "at", "least", "15", "platforms", "and", "train", "stations", "with", "more", "than", "25", "total", "passengers", "."], "guid": 205}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the country of the airport with the highest elevation?", "sql": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1", "query_toks": ["SELECT", "country", "FROM", "airports", "ORDER", "BY", "elevation", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "airports", "order", "by", "elevation", "desc", "limit", "value"], "question": "What is the country of the airport with the highest elevation?", "question_toks": ["What", "is", "the", "country", "of", "the", "airport", "with", "the", "highest", "elevation", "?"], "guid": 206}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | List the name of ships that are not involved in any mission", "sql": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)", "example": {"db_id": "ship_mission", "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)", "query_toks": ["SELECT", "Name", "FROM", "ship", "WHERE", "Ship_ID", "NOT", "IN", "(", "SELECT", "Ship_ID", "FROM", "mission", ")"], "query_toks_no_value": ["select", "name", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "mission", ")"], "question": "List the name of ships that are not involved in any mission", "question_toks": ["List", "the", "name", "of", "ships", "that", "are", "not", "involved", "in", "any", "mission"], "guid": 207}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | List the distinct positions of pilots older than 30.", "sql": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30", "example": {"db_id": "pilot_record", "query": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30", "query_toks": ["SELECT", "DISTINCT", "POSITION", "FROM", "pilot", "WHERE", "Age", ">", "30"], "query_toks_no_value": ["select", "distinct", "position", "from", "pilot", "where", "age", ">", "value"], "question": "List the distinct positions of pilots older than 30.", "question_toks": ["List", "the", "distinct", "positions", "of", "pilots", "older", "than", "30", "."], "guid": 208}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the names of the top 10 airlines that operate the most number of routes.", "sql": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10", "example": {"db_id": "flight_4", "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10", "query_toks": ["SELECT", "T1.name", ",", "T2.alid", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T2.alid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "10"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "alid", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t2", ".", "alid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the names of the top 10 airlines that operate the most number of routes.", "question_toks": ["Find", "the", "names", "of", "the", "top", "10", "airlines", "that", "operate", "the", "most", "number", "of", "routes", "."], "guid": 209}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | List the description of all aircrafts.", "sql": "SELECT Description FROM aircraft", "example": {"db_id": "aircraft", "query": "SELECT Description FROM aircraft", "query_toks": ["SELECT", "Description", "FROM", "aircraft"], "query_toks_no_value": ["select", "description", "from", "aircraft"], "question": "List the description of all aircrafts.", "question_toks": ["List", "the", "description", "of", "all", "aircrafts", "."], "guid": 210}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show the flight number of flights with three lowest distances.", "sql": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3", "example": {"db_id": "flight_1", "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3", "query_toks": ["SELECT", "flno", "FROM", "Flight", "ORDER", "BY", "distance", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "flno", "from", "flight", "order", "by", "distance", "asc", "limit", "value"], "question": "Show the flight number of flights with three lowest distances.", "question_toks": ["Show", "the", "flight", "number", "of", "flights", "with", "three", "lowest", "distances", "."], "guid": 211}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Return the number of United Airlines flights leaving from AHD Airport.", "sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "sourceairport", "=", "value"], "question": "Return the number of United Airlines flights leaving from AHD Airport.", "question_toks": ["Return", "the", "number", "of", "United", "Airlines", "flights", "leaving", "from", "AHD", "Airport", "."], "guid": 212}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show names for all employees who do not have certificate of Boeing 737-800.", "sql": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "example": {"db_id": "flight_1", "query": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "query_toks": ["SELECT", "name", "FROM", "Employee", "EXCEPT", "SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Boeing", "737-800", "''"], "query_toks_no_value": ["select", "name", "from", "employee", "except", "select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value"], "question": "Show names for all employees who do not have certificate of Boeing 737-800.", "question_toks": ["Show", "names", "for", "all", "employees", "who", "do", "not", "have", "certificate", "of", "Boeing", "737-800", "."], "guid": 213}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | what are the names of the ships ordered by ascending tonnage?", "sql": "SELECT Name FROM ship ORDER BY Tonnage ASC", "example": {"db_id": "ship_mission", "query": "SELECT Name FROM ship ORDER BY Tonnage ASC", "query_toks": ["SELECT", "Name", "FROM", "ship", "ORDER", "BY", "Tonnage", "ASC"], "query_toks_no_value": ["select", "name", "from", "ship", "order", "by", "tonnage", "asc"], "question": "what are the names of the ships ordered by ascending tonnage?", "question_toks": ["what", "are", "the", "names", "of", "the", "ships", "ordered", "by", "ascending", "tonnage", "?"], "guid": 214}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | what is the name of every pilot who is at least 25 years old?", "sql": "SELECT Name FROM pilot WHERE Age  >=  25", "example": {"db_id": "aircraft", "query": "SELECT Name FROM pilot WHERE Age  >=  25", "query_toks": ["SELECT", "Name", "FROM", "pilot", "WHERE", "Age", ">", "=", "25"], "query_toks_no_value": ["select", "name", "from", "pilot", "where", "age", ">", "=", "value"], "question": "what is the name of every pilot who is at least 25 years old?", "question_toks": ["what", "is", "the", "name", "of", "every", "pilot", "who", "is", "at", "least", "25", "years", "old", "?"], "guid": 215}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Return the names and classes of ships that do not have a captain?", "sql": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)", "example": {"db_id": "ship_1", "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)", "query_toks": ["SELECT", "name", ",", "CLASS", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", ")"], "query_toks_no_value": ["select", "name", ",", "class", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", ")"], "question": "Return the names and classes of ships that do not have a captain?", "question_toks": ["Return", "the", "names", "and", "classes", "of", "ships", "that", "do", "not", "have", "a", "captain", "?"], "guid": 216}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | For each type, what is the average tonnage?", "sql": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE", "example": {"db_id": "ship_mission", "query": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "avg", "(", "Tonnage", ")", "FROM", "ship", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "avg", "(", "tonnage", ")", "from", "ship", "group", "by", "type"], "question": "For each type, what is the average tonnage?", "question_toks": ["For", "each", "type", ",", "what", "is", "the", "average", "tonnage", "?"], "guid": 217}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Give the flight numbers of flights arriving in Aberdeen.", "sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "example": {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Give the flight numbers of flights arriving in Aberdeen.", "question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "arriving", "in", "Aberdeen", "."], "guid": 218}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | How many aircrafts are there?", "sql": "SELECT count(*) FROM aircraft", "example": {"db_id": "aircraft", "query": "SELECT count(*) FROM aircraft", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "aircraft"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "aircraft"], "question": "How many aircrafts are there?", "question_toks": ["How", "many", "aircrafts", "are", "there", "?"], "guid": 219}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot.", "sql": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank", "example": {"db_id": "pilot_record", "query": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank", "query_toks": ["SELECT", "T3.Pilot_name", ",", "T2.Fleet_Series", "FROM", "pilot_record", "AS", "T1", "JOIN", "aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "pilot", "AS", "T3", "ON", "T1.Pilot_ID", "=", "T3.Pilot_ID", "ORDER", "BY", "T3.Rank"], "query_toks_no_value": ["select", "t3", ".", "pilot_name", ",", "t2", ".", "fleet_series", "from", "pilot_record", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "pilot", "as", "t3", "on", "t1", ".", "pilot_id", "=", "t3", ".", "pilot_id", "order", "by", "t3", ".", "rank"], "question": "Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot.", "question_toks": ["Show", "the", "names", "of", "pilots", "and", "fleet", "series", "of", "the", "aircrafts", "they", "have", "flied", "with", "in", "ascending", "order", "of", "the", "rank", "of", "the", "pilot", "."], "guid": 220}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Count the number of ships.", "sql": "SELECT count(*) FROM ship", "example": {"db_id": "ship_1", "query": "SELECT count(*) FROM ship", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "ship"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "ship"], "question": "Count the number of ships.", "question_toks": ["Count", "the", "number", "of", "ships", "."], "guid": 221}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show the flight number and distance of the flight with maximum price.", "sql": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1", "query_toks": ["SELECT", "flno", ",", "distance", "FROM", "Flight", "ORDER", "BY", "price", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "flno", ",", "distance", "from", "flight", "order", "by", "price", "desc", "limit", "value"], "question": "Show the flight number and distance of the flight with maximum price.", "question_toks": ["Show", "the", "flight", "number", "and", "distance", "of", "the", "flight", "with", "maximum", "price", "."], "guid": 222}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show all origins and the number of flights from each origin.", "sql": "SELECT origin ,  count(*) FROM Flight GROUP BY origin", "example": {"db_id": "flight_1", "query": "SELECT origin ,  count(*) FROM Flight GROUP BY origin", "query_toks": ["SELECT", "origin", ",", "count", "(", "*", ")", "FROM", "Flight", "GROUP", "BY", "origin"], "query_toks_no_value": ["select", "origin", ",", "count", "(", "*", ")", "from", "flight", "group", "by", "origin"], "question": "Show all origins and the number of flights from each origin.", "question_toks": ["Show", "all", "origins", "and", "the", "number", "of", "flights", "from", "each", "origin", "."], "guid": 223}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What are the ranks of captains that are both in the Cutter and Armed schooner classes?", "sql": "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'", "example": {"db_id": "ship_1", "query": "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'", "query_toks": ["SELECT", "rank", "FROM", "captain", "WHERE", "CLASS", "=", "'Cutter", "'", "INTERSECT", "SELECT", "rank", "FROM", "captain", "WHERE", "CLASS", "=", "'Armed", "schooner", "'"], "query_toks_no_value": ["select", "rank", "from", "captain", "where", "class", "=", "value", "intersect", "select", "rank", "from", "captain", "where", "class", "=", "value"], "question": "What are the ranks of captains that are both in the Cutter and Armed schooner classes?", "question_toks": ["What", "are", "the", "ranks", "of", "captains", "that", "are", "both", "in", "the", "Cutter", "and", "Armed", "schooner", "classes", "?"], "guid": 224}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show station names without any trains.", "sql": "SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station)", "example": {"db_id": "train_station", "query": "SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station)", "query_toks": ["SELECT", "name", "FROM", "station", "WHERE", "station_id", "NOT", "IN", "(", "SELECT", "station_id", "FROM", "train_station", ")"], "query_toks_no_value": ["select", "name", "from", "station", "where", "station_id", "not", "in", "(", "select", "station_id", "from", "train_station", ")"], "question": "Show station names without any trains.", "question_toks": ["Show", "station", "names", "without", "any", "trains", "."], "guid": 225}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | List names of all pilot aged 30 or younger in descending alphabetical order.", "sql": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC", "example": {"db_id": "aircraft", "query": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC", "query_toks": ["SELECT", "Name", "FROM", "pilot", "WHERE", "Age", "<", "=", "30", "ORDER", "BY", "Name", "DESC"], "query_toks_no_value": ["select", "name", "from", "pilot", "where", "age", "<", "=", "value", "order", "by", "name", "desc"], "question": "List names of all pilot aged 30 or younger in descending alphabetical order.", "question_toks": ["List", "names", "of", "all", "pilot", "aged", "30", "or", "younger", "in", "descending", "alphabetical", "order", "."], "guid": 226}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | What are the names of managers in ascending order of level?", "sql": "SELECT Name FROM manager ORDER BY LEVEL ASC", "example": {"db_id": "railway", "query": "SELECT Name FROM manager ORDER BY LEVEL ASC", "query_toks": ["SELECT", "Name", "FROM", "manager", "ORDER", "BY", "LEVEL", "ASC"], "query_toks_no_value": ["select", "name", "from", "manager", "order", "by", "level", "asc"], "question": "What are the names of managers in ascending order of level?", "question_toks": ["What", "are", "the", "names", "of", "managers", "in", "ascending", "order", "of", "level", "?"], "guid": 227}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What is the average total number of passengers for all airports that the aircraft \"Robinson R-22\" visits?", "sql": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\"", "example": {"db_id": "aircraft", "query": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\"", "query_toks": ["SELECT", "avg", "(", "T3.Total_Passengers", ")", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T1.Aircraft", "=", "``", "Robinson", "R-22", "''"], "query_toks_no_value": ["select", "avg", "(", "t3", ".", "total_passengers", ")", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t1", ".", "aircraft", "=", "value"], "question": "What is the average total number of passengers for all airports that the aircraft \"Robinson R-22\" visits?", "question_toks": ["What", "is", "the", "average", "total", "number", "of", "passengers", "for", "all", "airports", "that", "the", "aircraft", "``", "Robinson", "R-22", "''", "visits", "?"], "guid": 228}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | find the name of pilots who did not win the matches held in the country of Australia.", "sql": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')", "example": {"db_id": "aircraft", "query": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')", "query_toks": ["SELECT", "name", "FROM", "pilot", "WHERE", "pilot_id", "NOT", "IN", "(", "SELECT", "Winning_Pilot", "FROM", "MATCH", "WHERE", "country", "=", "'Australia", "'", ")"], "query_toks_no_value": ["select", "name", "from", "pilot", "where", "pilot_id", "not", "in", "(", "select", "winning_pilot", "from", "match", "where", "country", "=", "value", ")"], "question": "find the name of pilots who did not win the matches held in the country of Australia.", "question_toks": ["find", "the", "name", "of", "pilots", "who", "did", "not", "win", "the", "matches", "held", "in", "the", "country", "of", "Australia", "."], "guid": 229}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the average price for flights from LA to Honolulu?", "sql": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "example": {"db_id": "flight_1", "query": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "query_toks": ["SELECT", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''", "AND", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "What is the average price for flights from LA to Honolulu?", "question_toks": ["What", "is", "the", "average", "price", "for", "flights", "from", "LA", "to", "Honolulu", "?"], "guid": 230}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | What is the average age for all managers?", "sql": "SELECT avg(Age) FROM manager", "example": {"db_id": "railway", "query": "SELECT avg(Age) FROM manager", "query_toks": ["SELECT", "avg", "(", "Age", ")", "FROM", "manager"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "manager"], "question": "What is the average age for all managers?", "question_toks": ["What", "is", "the", "average", "age", "for", "all", "managers", "?"], "guid": 231}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the name of the airline with the most routes?", "sql": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the airline with the most routes?", "question_toks": ["What", "is", "the", "name", "of", "the", "airline", "with", "the", "most", "routes", "?"], "guid": 232}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many flights depart from City Aberdeen?", "sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "How many flights depart from City Aberdeen?", "question_toks": ["How", "many", "flights", "depart", "from", "City", "Aberdeen", "?"], "guid": 233}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | In which year were most of ships built?", "sql": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "ship_1", "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "built_year", "FROM", "ship", "GROUP", "BY", "built_year", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "built_year", "from", "ship", "group", "by", "built_year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "In which year were most of ships built?", "question_toks": ["In", "which", "year", "were", "most", "of", "ships", "built", "?"], "guid": 234}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the name of the airport that is the destination of the most number of routes that start in China?", "sql": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "WHERE", "T1.country", "=", "'China", "'", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "where", "t1", ".", "country", "=", "value", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the airport that is the destination of the most number of routes that start in China?", "question_toks": ["What", "is", "the", "name", "of", "the", "airport", "that", "is", "the", "destination", "of", "the", "most", "number", "of", "routes", "that", "start", "in", "China", "?"], "guid": 235}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the names and distances for all airplanes?", "sql": "SELECT name ,  distance FROM Aircraft", "example": {"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft"], "question": "What are the names and distances for all airplanes?", "question_toks": ["What", "are", "the", "names", "and", "distances", "for", "all", "airplanes", "?"], "guid": 236}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | how many ships are there?", "sql": "SELECT count(*) FROM ship", "example": {"db_id": "ship_1", "query": "SELECT count(*) FROM ship", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "ship"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "ship"], "question": "how many ships are there?", "question_toks": ["how", "many", "ships", "are", "there", "?"], "guid": 237}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | Show the countries that have both managers of age above 50 and managers of age below 46.", "sql": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46", "example": {"db_id": "railway", "query": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46", "query_toks": ["SELECT", "Country", "FROM", "manager", "WHERE", "Age", ">", "50", "INTERSECT", "SELECT", "Country", "FROM", "manager", "WHERE", "Age", "<", "46"], "query_toks_no_value": ["select", "country", "from", "manager", "where", "age", ">", "value", "intersect", "select", "country", "from", "manager", "where", "age", "<", "value"], "question": "Show the countries that have both managers of age above 50 and managers of age below 46.", "question_toks": ["Show", "the", "countries", "that", "have", "both", "managers", "of", "age", "above", "50", "and", "managers", "of", "age", "below", "46", "."], "guid": 238}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show the id and salary of Mark Young.", "sql": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'", "example": {"db_id": "flight_1", "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'", "query_toks": ["SELECT", "eid", ",", "salary", "FROM", "Employee", "WHERE", "name", "=", "'Mark", "Young", "'"], "query_toks_no_value": ["select", "eid", ",", "salary", "from", "employee", "where", "name", "=", "value"], "question": "Show the id and salary of Mark Young.", "question_toks": ["Show", "the", "id", "and", "salary", "of", "Mark", "Young", "."], "guid": 239}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What is the average number of international passengers for an airport?", "sql": "SELECT avg(International_Passengers) FROM airport", "example": {"db_id": "aircraft", "query": "SELECT avg(International_Passengers) FROM airport", "query_toks": ["SELECT", "avg", "(", "International_Passengers", ")", "FROM", "airport"], "query_toks_no_value": ["select", "avg", "(", "international_passengers", ")", "from", "airport"], "question": "What is the average number of international passengers for an airport?", "question_toks": ["What", "is", "the", "average", "number", "of", "international", "passengers", "for", "an", "airport", "?"], "guid": 240}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the number of international and domestic passengers of the airport named London \"Heathrow\"?", "sql": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"", "example": {"db_id": "aircraft", "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"", "query_toks": ["SELECT", "International_Passengers", ",", "Domestic_Passengers", "FROM", "airport", "WHERE", "Airport_Name", "=", "``", "London", "Heathrow", "''"], "query_toks_no_value": ["select", "international_passengers", ",", "domestic_passengers", "from", "airport", "where", "airport_name", "=", "value"], "question": "What are the number of international and domestic passengers of the airport named London \"Heathrow\"?", "question_toks": ["What", "are", "the", "number", "of", "international", "and", "domestic", "passengers", "of", "the", "airport", "named", "London", "``", "Heathrow", "''", "?"], "guid": 241}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show the name and service for all trains in order by time.", "sql": "SELECT name ,  service FROM train ORDER BY TIME", "example": {"db_id": "train_station", "query": "SELECT name ,  service FROM train ORDER BY TIME", "query_toks": ["SELECT", "name", ",", "service", "FROM", "train", "ORDER", "BY", "TIME"], "query_toks_no_value": ["select", "name", ",", "service", "from", "train", "order", "by", "time"], "question": "Show the name and service for all trains in order by time.", "question_toks": ["Show", "the", "name", "and", "service", "for", "all", "trains", "in", "order", "by", "time", "."], "guid": 242}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show names for all aircraft with at least two flights.", "sql": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2", "example": {"db_id": "flight_1", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2", "query_toks": ["SELECT", "T2.name", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "GROUP", "BY", "T1.aid", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "group", "by", "t1", ".", "aid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show names for all aircraft with at least two flights.", "question_toks": ["Show", "names", "for", "all", "aircraft", "with", "at", "least", "two", "flights", "."], "guid": 243}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the average and largest salary of all employees?", "sql": "SELECT avg(salary) ,  max(salary) FROM Employee", "example": {"db_id": "flight_1", "query": "SELECT avg(salary) ,  max(salary) FROM Employee", "query_toks": ["SELECT", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "FROM", "Employee"], "query_toks_no_value": ["select", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "from", "employee"], "question": "What is the average and largest salary of all employees?", "question_toks": ["What", "is", "the", "average", "and", "largest", "salary", "of", "all", "employees", "?"], "guid": 244}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | Show the names of trains and locations of railways they are in.", "sql": "SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID", "example": {"db_id": "railway", "query": "SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Location", "FROM", "railway", "AS", "T1", "JOIN", "train", "AS", "T2", "ON", "T1.Railway_ID", "=", "T2.Railway_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "location", "from", "railway", "as", "t1", "join", "train", "as", "t2", "on", "t1", ".", "railway_id", "=", "t2", ".", "railway_id"], "question": "Show the names of trains and locations of railways they are in.", "question_toks": ["Show", "the", "names", "of", "trains", "and", "locations", "of", "railways", "they", "are", "in", "."], "guid": 245}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the average distance and average price for flights from Los Angeles.", "sql": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"", "example": {"db_id": "flight_1", "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"", "query_toks": ["SELECT", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value"], "question": "What is the average distance and average price for flights from Los Angeles.", "question_toks": ["What", "is", "the", "average", "distance", "and", "average", "price", "for", "flights", "from", "Los", "Angeles", "."], "guid": 246}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate.", "sql": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5", "example": {"db_id": "flight_1", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5", "query_toks": ["SELECT", "T2.name", "FROM", "Certificate", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T2.aid", "=", "T1.aid", "WHERE", "T2.distance", ">", "5000", "GROUP", "BY", "T1.aid", "ORDER", "BY", "count", "(", "*", ")", ">", "=", "5"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "certificate", "as", "t1", "join", "aircraft", "as", "t2", "on", "t2", ".", "aid", "=", "t1", ".", "aid", "where", "t2", ".", "distance", ">", "value", "group", "by", "t1", ".", "aid", "order", "by", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate.", "question_toks": ["Show", "the", "name", "and", "distance", "of", "the", "aircrafts", "with", "more", "than", "5000", "distance", "and", "which", "at", "least", "5", "people", "have", "its", "certificate", "."], "guid": 247}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What are the cities that have more than 2 airports sorted by number of airports?", "sql": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)", "example": {"db_id": "flight_4", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)", "query_toks": ["SELECT", "city", "FROM", "airports", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "2", "ORDER", "BY", "count", "(", "*", ")"], "query_toks_no_value": ["select", "city", "from", "airports", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value", "order", "by", "count", "(", "*", ")"], "question": "What are the cities that have more than 2 airports sorted by number of airports?", "question_toks": ["What", "are", "the", "cities", "that", "have", "more", "than", "2", "airports", "sorted", "by", "number", "of", "airports", "?"], "guid": 248}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | What is the joined year of the pilot of the highest rank?", "sql": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1", "example": {"db_id": "pilot_record", "query": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1", "query_toks": ["SELECT", "Join_Year", "FROM", "pilot", "ORDER", "BY", "Rank", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "join_year", "from", "pilot", "order", "by", "rank", "asc", "limit", "value"], "question": "What is the joined year of the pilot of the highest rank?", "question_toks": ["What", "is", "the", "joined", "year", "of", "the", "pilot", "of", "the", "highest", "rank", "?"], "guid": 249}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the number of routes whose destination airports are in Canada.", "sql": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "WHERE", "country", "=", "'Canada", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "where", "country", "=", "value"], "question": "Find the number of routes whose destination airports are in Canada.", "question_toks": ["Find", "the", "number", "of", "routes", "whose", "destination", "airports", "are", "in", "Canada", "."], "guid": 250}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What are flight numbers of flights departing from City \"Aberdeen \"?", "sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "example": {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "What are flight numbers of flights departing from City \"Aberdeen \"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "departing", "from", "City", "``", "Aberdeen", "``", "?"], "guid": 251}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show flight number, origin, destination of all flights in the alphabetical order of the departure cities.", "sql": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin", "example": {"db_id": "flight_1", "query": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin", "query_toks": ["SELECT", "flno", ",", "origin", ",", "destination", "FROM", "Flight", "ORDER", "BY", "origin"], "query_toks_no_value": ["select", "flno", ",", "origin", ",", "destination", "from", "flight", "order", "by", "origin"], "question": "Show flight number, origin, destination of all flights in the alphabetical order of the departure cities.", "question_toks": ["Show", "flight", "number", ",", "origin", ",", "destination", "of", "all", "flights", "in", "the", "alphabetical", "order", "of", "the", "departure", "cities", "."], "guid": 252}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | Please list the location and the winning aircraft name.", "sql": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft", "example": {"db_id": "aircraft", "query": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft", "query_toks": ["SELECT", "T2.Location", ",", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft"], "query_toks_no_value": ["select", "t2", ".", "location", ",", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft"], "question": "Please list the location and the winning aircraft name.", "question_toks": ["Please", "list", "the", "location", "and", "the", "winning", "aircraft", "name", "."], "guid": 253}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the cities which have exactly two airports.", "sql": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2", "example": {"db_id": "flight_4", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2", "query_toks": ["SELECT", "city", "FROM", "airports", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", "=", "2"], "query_toks_no_value": ["select", "city", "from", "airports", "group", "by", "city", "having", "count", "(", "*", ")", "=", "value"], "question": "Find the cities which have exactly two airports.", "question_toks": ["Find", "the", "cities", "which", "have", "exactly", "two", "airports", "."], "guid": 254}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show origins of all flights with destination Honolulu.", "sql": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"", "example": {"db_id": "flight_1", "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"", "query_toks": ["SELECT", "origin", "FROM", "Flight", "WHERE", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "origin", "from", "flight", "where", "destination", "=", "value"], "question": "Show origins of all flights with destination Honolulu.", "question_toks": ["Show", "origins", "of", "all", "flights", "with", "destination", "Honolulu", "."], "guid": 255}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the salaray and name of the employee that is certified to fly the most planes?", "sql": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.salary", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "GROUP", "BY", "T1.eid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "salary", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "group", "by", "t1", ".", "eid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the salaray and name of the employee that is certified to fly the most planes?", "question_toks": ["What", "is", "the", "salaray", "and", "name", "of", "the", "employee", "that", "is", "certified", "to", "fly", "the", "most", "planes", "?"], "guid": 256}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What is the number of aircraft?", "sql": "SELECT count(*) FROM aircraft", "example": {"db_id": "aircraft", "query": "SELECT count(*) FROM aircraft", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "aircraft"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "aircraft"], "question": "What is the number of aircraft?", "question_toks": ["What", "is", "the", "number", "of", "aircraft", "?"], "guid": 257}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many flights land in Aberdeen or Abilene?", "sql": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Flights", "AS", "T1", "JOIN", "Airports", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.city", "=", "``", "Aberdeen", "''", "OR", "T2.city", "=", "``", "Abilene", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "or", "t2", ".", "city", "=", "value"], "question": "How many flights land in Aberdeen or Abilene?", "question_toks": ["How", "many", "flights", "land", "in", "Aberdeen", "or", "Abilene", "?"], "guid": 258}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Count the number of captains that have each rank.", "sql": "SELECT count(*) ,  rank FROM captain GROUP BY rank", "example": {"db_id": "ship_1", "query": "SELECT count(*) ,  rank FROM captain GROUP BY rank", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "rank", "FROM", "captain", "GROUP", "BY", "rank"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "rank", "from", "captain", "group", "by", "rank"], "question": "Count the number of captains that have each rank.", "question_toks": ["Count", "the", "number", "of", "captains", "that", "have", "each", "rank", "."], "guid": 259}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the name and distance for aircraft with id 12?", "sql": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12", "example": {"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft", "WHERE", "aid", "=", "12"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft", "where", "aid", "=", "value"], "question": "What is the name and distance for aircraft with id 12?", "question_toks": ["What", "is", "the", "name", "and", "distance", "for", "aircraft", "with", "id", "12", "?"], "guid": 260}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the names of the aircraft that the least people are certified to fly?", "sql": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Certificate", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T2.aid", "=", "T1.aid", "GROUP", "BY", "T1.aid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "certificate", "as", "t1", "join", "aircraft", "as", "t2", "on", "t2", ".", "aid", "=", "t1", ".", "aid", "group", "by", "t1", ".", "aid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the names of the aircraft that the least people are certified to fly?", "question_toks": ["What", "are", "the", "names", "of", "the", "aircraft", "that", "the", "least", "people", "are", "certified", "to", "fly", "?"], "guid": 261}}