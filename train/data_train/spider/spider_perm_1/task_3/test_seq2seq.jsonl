{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the name, city, country, and altitude (or elevation) of the airports in the city of New York.", "sql": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'", "example": {"db_id": "flight_4", "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'", "query_toks": ["SELECT", "name", ",", "city", ",", "country", ",", "elevation", "FROM", "airports", "WHERE", "city", "=", "'New", "York", "'"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", ",", "elevation", "from", "airports", "where", "city", "=", "value"], "question": "Find the name, city, country, and altitude (or elevation) of the airports in the city of New York.", "question_toks": ["Find", "the", "name", ",", "city", ",", "country", ",", "and", "altitude", "(", "or", "elevation", ")", "of", "the", "airports", "in", "the", "city", "of", "New", "York", "."], "guid": 327}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | List all countries and their number of airlines in the descending order of number of airlines.", "sql": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC", "example": {"db_id": "flight_4", "query": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC", "query_toks": ["SELECT", "country", ",", "count", "(", "*", ")", "FROM", "airlines", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "airlines", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc"], "question": "List all countries and their number of airlines in the descending order of number of airlines.", "question_toks": ["List", "all", "countries", "and", "their", "number", "of", "airlines", "in", "the", "descending", "order", "of", "number", "of", "airlines", "."], "guid": 328}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which country does Airline \"JetBlue Airways\" belong to?", "sql": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "example": {"db_id": "flight_2", "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Country", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "airline", "=", "value"], "question": "Which country does Airline \"JetBlue Airways\" belong to?", "question_toks": ["Which", "country", "does", "Airline", "``", "JetBlue", "Airways", "''", "belong", "to", "?"], "guid": 329}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show the station name with greatest number of trains.", "sql": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "train_station", "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "train_station", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.station_id", "=", "T2.station_id", "GROUP", "BY", "T1.station_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "train_station", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "station_id", "group", "by", "t1", ".", "station_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the station name with greatest number of trains.", "question_toks": ["Show", "the", "station", "name", "with", "greatest", "number", "of", "trains", "."], "guid": 330}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What is the name and age of the pilot younger than 30 who has won the most number of times?", "sql": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "aircraft", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.age", "FROM", "pilot", "AS", "t1", "JOIN", "MATCH", "AS", "t2", "ON", "t1.pilot_id", "=", "t2.winning_pilot", "WHERE", "t1.age", "<", "30", "GROUP", "BY", "t2.winning_pilot", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "pilot", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "pilot_id", "=", "t2", ".", "winning_pilot", "where", "t1", ".", "age", "<", "value", "group", "by", "t2", ".", "winning_pilot", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and age of the pilot younger than 30 who has won the most number of times?", "question_toks": ["What", "is", "the", "name", "and", "age", "of", "the", "pilot", "younger", "than", "30", "who", "has", "won", "the", "most", "number", "of", "times", "?"], "guid": 331}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the name and salary of the employee with the id 242518965?", "sql": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965", "example": {"db_id": "flight_1", "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "Employee", "WHERE", "eid", "=", "242518965"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "employee", "where", "eid", "=", "value"], "question": "What is the name and salary of the employee with the id 242518965?", "question_toks": ["What", "is", "the", "name", "and", "salary", "of", "the", "employee", "with", "the", "id", "242518965", "?"], "guid": 332}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | List the airport code and name in the city of Anthony.", "sql": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "example": {"db_id": "flight_2", "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "query_toks": ["SELECT", "AirportCode", ",", "AirportName", "FROM", "AIRPORTS", "WHERE", "city", "=", "``", "Anthony", "''"], "query_toks_no_value": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "value"], "question": "List the airport code and name in the city of Anthony.", "question_toks": ["List", "the", "airport", "code", "and", "name", "in", "the", "city", "of", "Anthony", "."], "guid": 333}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Return the number of flights.", "sql": "SELECT count(*) FROM FLIGHTS", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights"], "question": "Return the number of flights.", "question_toks": ["Return", "the", "number", "of", "flights", "."], "guid": 334}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the salaray and name of the employee with the most certificates to fly planes more than 5000?", "sql": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.distance", ">", "5000", "GROUP", "BY", "T1.eid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "distance", ">", "value", "group", "by", "t1", ".", "eid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the salaray and name of the employee with the most certificates to fly planes more than 5000?", "question_toks": ["What", "is", "the", "salaray", "and", "name", "of", "the", "employee", "with", "the", "most", "certificates", "to", "fly", "planes", "more", "than", "5000", "?"], "guid": 335}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | What are all locations of train stations?", "sql": "SELECT DISTINCT LOCATION FROM station", "example": {"db_id": "train_station", "query": "SELECT DISTINCT LOCATION FROM station", "query_toks": ["SELECT", "DISTINCT", "LOCATION", "FROM", "station"], "query_toks_no_value": ["select", "distinct", "location", "from", "station"], "question": "What are all locations of train stations?", "question_toks": ["What", "are", "all", "locations", "of", "train", "stations", "?"], "guid": 336}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What is the code of airport that has fewest number of flights?", "sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "example": {"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the code of airport that has fewest number of flights?", "question_toks": ["What", "is", "the", "code", "of", "airport", "that", "has", "fewest", "number", "of", "flights", "?"], "guid": 337}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the descriptions for the aircrafts?", "sql": "SELECT Description FROM aircraft", "example": {"db_id": "aircraft", "query": "SELECT Description FROM aircraft", "query_toks": ["SELECT", "Description", "FROM", "aircraft"], "query_toks_no_value": ["select", "description", "from", "aircraft"], "question": "What are the descriptions for the aircrafts?", "question_toks": ["What", "are", "the", "descriptions", "for", "the", "aircrafts", "?"], "guid": 338}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | How many airlines operate out of each country in descending order?", "sql": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC", "example": {"db_id": "flight_4", "query": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC", "query_toks": ["SELECT", "country", ",", "count", "(", "*", ")", "FROM", "airlines", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "airlines", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many airlines operate out of each country in descending order?", "question_toks": ["How", "many", "airlines", "operate", "out", "of", "each", "country", "in", "descending", "order", "?"], "guid": 339}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | How many airlines does Russia has?", "sql": "SELECT count(*) FROM airlines WHERE country  =  'Russia'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM airlines WHERE country  =  'Russia'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airlines", "WHERE", "country", "=", "'Russia", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value"], "question": "How many airlines does Russia has?", "question_toks": ["How", "many", "airlines", "does", "Russia", "has", "?"], "guid": 340}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | find the name and age of the pilot who has won the most number of times among the pilots who are younger than 30.", "sql": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "aircraft", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.age", "FROM", "pilot", "AS", "t1", "JOIN", "MATCH", "AS", "t2", "ON", "t1.pilot_id", "=", "t2.winning_pilot", "WHERE", "t1.age", "<", "30", "GROUP", "BY", "t2.winning_pilot", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "pilot", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "pilot_id", "=", "t2", ".", "winning_pilot", "where", "t1", ".", "age", "<", "value", "group", "by", "t2", ".", "winning_pilot", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "find the name and age of the pilot who has won the most number of times among the pilots who are younger than 30.", "question_toks": ["find", "the", "name", "and", "age", "of", "the", "pilot", "who", "has", "won", "the", "most", "number", "of", "times", "among", "the", "pilots", "who", "are", "younger", "than", "30", "."], "guid": 341}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | Show all information on the airport that has the largest number of international passengers.", "sql": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1", "example": {"db_id": "aircraft", "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1", "query_toks": ["SELECT", "*", "FROM", "airport", "ORDER", "BY", "International_Passengers", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "*", "from", "airport", "order", "by", "international_passengers", "desc", "limit", "value"], "question": "Show all information on the airport that has the largest number of international passengers.", "question_toks": ["Show", "all", "information", "on", "the", "airport", "that", "has", "the", "largest", "number", "of", "international", "passengers", "."], "guid": 342}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the number of flights?", "sql": "SELECT count(*) FROM Flight", "example": {"db_id": "flight_1", "query": "SELECT count(*) FROM Flight", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Flight"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flight"], "question": "What is the number of flights?", "question_toks": ["What", "is", "the", "number", "of", "flights", "?"], "guid": 343}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Give the classes that have more than two captains.", "sql": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2", "example": {"db_id": "ship_1", "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2", "query_toks": ["SELECT", "CLASS", "FROM", "captain", "GROUP", "BY", "CLASS", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "class", "from", "captain", "group", "by", "class", "having", "count", "(", "*", ")", ">", "value"], "question": "Give the classes that have more than two captains.", "question_toks": ["Give", "the", "classes", "that", "have", "more", "than", "two", "captains", "."], "guid": 344}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What are the names of airports in Aberdeen?", "sql": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "example": {"db_id": "flight_2", "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "query_toks": ["SELECT", "AirportName", "FROM", "AIRPORTS", "WHERE", "City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "city", "=", "value"], "question": "What are the names of airports in Aberdeen?", "question_toks": ["What", "are", "the", "names", "of", "airports", "in", "Aberdeen", "?"], "guid": 345}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | List the names of aircrafts and that did not win any match.", "sql": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)", "example": {"db_id": "aircraft", "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)", "query_toks": ["SELECT", "Aircraft", "FROM", "aircraft", "WHERE", "Aircraft_ID", "NOT", "IN", "(", "SELECT", "Winning_Aircraft", "FROM", "MATCH", ")"], "query_toks_no_value": ["select", "aircraft", "from", "aircraft", "where", "aircraft_id", "not", "in", "(", "select", "winning_aircraft", "from", "match", ")"], "question": "List the names of aircrafts and that did not win any match.", "question_toks": ["List", "the", "names", "of", "aircrafts", "and", "that", "did", "not", "win", "any", "match", "."], "guid": 346}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What is the airport code of the airport with the most flights?", "sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the airport code of the airport with the most flights?", "question_toks": ["What", "is", "the", "airport", "code", "of", "the", "airport", "with", "the", "most", "flights", "?"], "guid": 347}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the names of all pilots 30 years old or young in descending alphabetical order?", "sql": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC", "example": {"db_id": "aircraft", "query": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC", "query_toks": ["SELECT", "Name", "FROM", "pilot", "WHERE", "Age", "<", "=", "30", "ORDER", "BY", "Name", "DESC"], "query_toks_no_value": ["select", "name", "from", "pilot", "where", "age", "<", "=", "value", "order", "by", "name", "desc"], "question": "What are the names of all pilots 30 years old or young in descending alphabetical order?", "question_toks": ["What", "are", "the", "names", "of", "all", "pilots", "30", "years", "old", "or", "young", "in", "descending", "alphabetical", "order", "?"], "guid": 348}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show all flight number from Los Angeles.", "sql": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"", "example": {"db_id": "flight_1", "query": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"", "query_toks": ["SELECT", "flno", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "flno", "from", "flight", "where", "origin", "=", "value"], "question": "Show all flight number from Los Angeles.", "question_toks": ["Show", "all", "flight", "number", "from", "Los", "Angeles", "."], "guid": 349}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the name and city of the airport which is the source for the most number of flight routes.", "sql": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.city", ",", "T2.src_apid", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "GROUP", "BY", "T2.src_apid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "city", ",", "t2", ".", "src_apid", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "group", "by", "t2", ".", "src_apid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and city of the airport which is the source for the most number of flight routes.", "question_toks": ["Find", "the", "name", "and", "city", "of", "the", "airport", "which", "is", "the", "source", "for", "the", "most", "number", "of", "flight", "routes", "."], "guid": 350}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | List the object number of railways that do not have any trains.", "sql": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)", "example": {"db_id": "railway", "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)", "query_toks": ["SELECT", "ObjectNumber", "FROM", "railway", "WHERE", "Railway_ID", "NOT", "IN", "(", "SELECT", "Railway_ID", "FROM", "train", ")"], "query_toks_no_value": ["select", "objectnumber", "from", "railway", "where", "railway_id", "not", "in", "(", "select", "railway_id", "from", "train", ")"], "question": "List the object number of railways that do not have any trains.", "question_toks": ["List", "the", "object", "number", "of", "railways", "that", "do", "not", "have", "any", "trains", "."], "guid": 351}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | Show the names of pilots and models of aircrafts they have flied with.", "sql": "SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID", "example": {"db_id": "pilot_record", "query": "SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID", "query_toks": ["SELECT", "T3.Pilot_name", ",", "T2.Model", "FROM", "pilot_record", "AS", "T1", "JOIN", "aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "pilot", "AS", "T3", "ON", "T1.Pilot_ID", "=", "T3.Pilot_ID"], "query_toks_no_value": ["select", "t3", ".", "pilot_name", ",", "t2", ".", "model", "from", "pilot_record", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "pilot", "as", "t3", "on", "t1", ".", "pilot_id", "=", "t3", ".", "pilot_id"], "question": "Show the names of pilots and models of aircrafts they have flied with.", "question_toks": ["Show", "the", "names", "of", "pilots", "and", "models", "of", "aircrafts", "they", "have", "flied", "with", "."], "guid": 352}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many flights depart from 'APG'?", "sql": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "value"], "question": "How many flights depart from 'APG'?", "question_toks": ["How", "many", "flights", "depart", "from", "'APG", "'", "?"], "guid": 353}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Find the names of the trains that do not pass any station located in London.", "sql": "SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id  =  T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id  =  T4.station_id WHERE t4.location  =  \"London\")", "example": {"db_id": "train_station", "query": "SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id  =  T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id  =  T4.station_id WHERE t4.location  =  \"London\")", "query_toks": ["SELECT", "T2.name", "FROM", "train_station", "AS", "T1", "JOIN", "train", "AS", "T2", "ON", "T1.train_id", "=", "T2.train_id", "WHERE", "T1.station_id", "NOT", "IN", "(", "SELECT", "T4.station_id", "FROM", "train_station", "AS", "T3", "JOIN", "station", "AS", "T4", "ON", "T3.station_id", "=", "T4.station_id", "WHERE", "t4.location", "=", "``", "London", "''", ")"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "train_station", "as", "t1", "join", "train", "as", "t2", "on", "t1", ".", "train_id", "=", "t2", ".", "train_id", "where", "t1", ".", "station_id", "not", "in", "(", "select", "t4", ".", "station_id", "from", "train_station", "as", "t3", "join", "station", "as", "t4", "on", "t3", ".", "station_id", "=", "t4", ".", "station_id", "where", "t4", ".", "location", "=", "value", ")"], "question": "Find the names of the trains that do not pass any station located in London.", "question_toks": ["Find", "the", "names", "of", "the", "trains", "that", "do", "not", "pass", "any", "station", "located", "in", "London", "."], "guid": 354}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which airline has most number of flights?", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which airline has most number of flights?", "question_toks": ["Which", "airline", "has", "most", "number", "of", "flights", "?"], "guid": 355}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the flight numbers for the aircraft Airbus A340-300?", "sql": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\"", "example": {"db_id": "flight_1", "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\"", "query_toks": ["SELECT", "T1.flno", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "WHERE", "T2.name", "=", "``", "Airbus", "A340-300", "''"], "query_toks_no_value": ["select", "t1", ".", "flno", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "where", "t2", ".", "name", "=", "value"], "question": "What are the flight numbers for the aircraft Airbus A340-300?", "question_toks": ["What", "are", "the", "flight", "numbers", "for", "the", "aircraft", "Airbus", "A340-300", "?"], "guid": 356}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which airlines have departures from CVO but not from APG airports?", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''", "EXCEPT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "except", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Which airlines have departures from CVO but not from APG airports?", "question_toks": ["Which", "airlines", "have", "departures", "from", "CVO", "but", "not", "from", "APG", "airports", "?"], "guid": 357}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Find the name of the ship that is steered by the youngest captain.", "sql": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1", "example": {"db_id": "ship_1", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1", "query_toks": ["SELECT", "t1.name", "FROM", "ship", "AS", "t1", "JOIN", "captain", "AS", "t2", "ON", "t1.ship_id", "=", "t2.ship_id", "ORDER", "BY", "t2.age", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "ship", "as", "t1", "join", "captain", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "order", "by", "t2", ".", "age", "limit", "value"], "question": "Find the name of the ship that is steered by the youngest captain.", "question_toks": ["Find", "the", "name", "of", "the", "ship", "that", "is", "steered", "by", "the", "youngest", "captain", "."], "guid": 358}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Which origin has most number of flights?", "sql": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "origin", "FROM", "Flight", "GROUP", "BY", "origin", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "origin", "from", "flight", "group", "by", "origin", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which origin has most number of flights?", "question_toks": ["Which", "origin", "has", "most", "number", "of", "flights", "?"], "guid": 359}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Find the name, type, and flag of the ship that is built in the most recent year.", "sql": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1", "example": {"db_id": "ship_1", "query": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "TYPE", ",", "flag", "FROM", "ship", "ORDER", "BY", "built_year", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "type", ",", "flag", "from", "ship", "order", "by", "built_year", "desc", "limit", "value"], "question": "Find the name, type, and flag of the ship that is built in the most recent year.", "question_toks": ["Find", "the", "name", ",", "type", ",", "and", "flag", "of", "the", "ship", "that", "is", "built", "in", "the", "most", "recent", "year", "."], "guid": 360}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show names for all employees who have certificate of Boeing 737-800.", "sql": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "example": {"db_id": "flight_1", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "query_toks": ["SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Boeing", "737-800", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value"], "question": "Show names for all employees who have certificate of Boeing 737-800.", "question_toks": ["Show", "names", "for", "all", "employees", "who", "have", "certificate", "of", "Boeing", "737-800", "."], "guid": 361}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the number of routes whose destinations are Italian airports?", "sql": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "routes", "AS", "T1", "JOIN", "airports", "AS", "T2", "ON", "T1.dst_apid", "=", "T2.apid", "WHERE", "T2.country", "=", "'Italy", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "routes", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "dst_apid", "=", "t2", ".", "apid", "where", "t2", ".", "country", "=", "value"], "question": "What is the number of routes whose destinations are Italian airports?", "question_toks": ["What", "is", "the", "number", "of", "routes", "whose", "destinations", "are", "Italian", "airports", "?"], "guid": 362}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the count of aircrafts that have a distance between 1000 and 5000?", "sql": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000", "example": {"db_id": "flight_1", "query": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Aircraft", "WHERE", "distance", "BETWEEN", "1000", "AND", "5000"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "aircraft", "where", "distance", "between", "value", "and", "value"], "question": "What is the count of aircrafts that have a distance between 1000 and 5000?", "question_toks": ["What", "is", "the", "count", "of", "aircrafts", "that", "have", "a", "distance", "between", "1000", "and", "5000", "?"], "guid": 363}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the number of airports whose name contain the word 'International'.", "sql": "SELECT count(*) FROM airports WHERE name LIKE '%International%'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airports", "WHERE", "name", "LIKE", "'", "%", "International", "%", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports", "where", "name", "like", "value"], "question": "Find the number of airports whose name contain the word 'International'.", "question_toks": ["Find", "the", "number", "of", "airports", "whose", "name", "contain", "the", "word", "'International", "'", "."], "guid": 364}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What are the names of the ships  that are from either the US or the UK?", "sql": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"", "example": {"db_id": "ship_mission", "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"", "query_toks": ["SELECT", "Name", "FROM", "ship", "WHERE", "Nationality", "=", "``", "United", "States", "''", "OR", "Nationality", "=", "``", "United", "Kingdom", "''"], "query_toks_no_value": ["select", "name", "from", "ship", "where", "nationality", "=", "value", "or", "nationality", "=", "value"], "question": "What are the names of the ships  that are from either the US or the UK?", "question_toks": ["What", "are", "the", "names", "of", "the", "ships", "that", "are", "from", "either", "the", "US", "or", "the", "UK", "?"], "guid": 365}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | How many employees have salary between 100000 and 200000?", "sql": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000", "example": {"db_id": "flight_1", "query": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Employee", "WHERE", "salary", "BETWEEN", "100000", "AND", "200000"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "employee", "where", "salary", "between", "value", "and", "value"], "question": "How many employees have salary between 100000 and 200000?", "question_toks": ["How", "many", "employees", "have", "salary", "between", "100000", "and", "200000", "?"], "guid": 366}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | How many different captain ranks are there?", "sql": "SELECT count(DISTINCT rank) FROM captain", "example": {"db_id": "ship_1", "query": "SELECT count(DISTINCT rank) FROM captain", "query_toks": ["SELECT", "count", "(", "DISTINCT", "rank", ")", "FROM", "captain"], "query_toks_no_value": ["select", "count", "(", "distinct", "rank", ")", "from", "captain"], "question": "How many different captain ranks are there?", "question_toks": ["How", "many", "different", "captain", "ranks", "are", "there", "?"], "guid": 367}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show flight number for all flights with more than 2000 distance.", "sql": "SELECT flno FROM Flight WHERE distance  >  2000", "example": {"db_id": "flight_1", "query": "SELECT flno FROM Flight WHERE distance  >  2000", "query_toks": ["SELECT", "flno", "FROM", "Flight", "WHERE", "distance", ">", "2000"], "query_toks_no_value": ["select", "flno", "from", "flight", "where", "distance", ">", "value"], "question": "Show flight number for all flights with more than 2000 distance.", "question_toks": ["Show", "flight", "number", "for", "all", "flights", "with", "more", "than", "2000", "distance", "."], "guid": 368}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Find the name and flag of ships that are not steered by any captain with Midshipman rank.", "sql": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "example": {"db_id": "ship_1", "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "query_toks": ["SELECT", "name", ",", "flag", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", "WHERE", "rank", "=", "'Midshipman", "'", ")"], "query_toks_no_value": ["select", "name", ",", "flag", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", "where", "rank", "=", "value", ")"], "question": "Find the name and flag of ships that are not steered by any captain with Midshipman rank.", "question_toks": ["Find", "the", "name", "and", "flag", "of", "ships", "that", "are", "not", "steered", "by", "any", "captain", "with", "Midshipman", "rank", "."], "guid": 369}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the name and city of the airport from most of the routes start?", "sql": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.city", ",", "T2.src_apid", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "GROUP", "BY", "T2.src_apid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "city", ",", "t2", ".", "src_apid", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "group", "by", "t2", ".", "src_apid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and city of the airport from most of the routes start?", "question_toks": ["What", "is", "the", "name", "and", "city", "of", "the", "airport", "from", "most", "of", "the", "routes", "start", "?"], "guid": 370}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | How many flights do we have?", "sql": "SELECT count(*) FROM Flight", "example": {"db_id": "flight_1", "query": "SELECT count(*) FROM Flight", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Flight"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flight"], "question": "How many flights do we have?", "question_toks": ["How", "many", "flights", "do", "we", "have", "?"], "guid": 371}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the numbers of the shortest flights?", "sql": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3", "example": {"db_id": "flight_1", "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3", "query_toks": ["SELECT", "flno", "FROM", "Flight", "ORDER", "BY", "distance", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "flno", "from", "flight", "order", "by", "distance", "asc", "limit", "value"], "question": "What are the numbers of the shortest flights?", "question_toks": ["What", "are", "the", "numbers", "of", "the", "shortest", "flights", "?"], "guid": 372}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Find the ship type that are used by both ships with Panama and Malta flags.", "sql": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'", "example": {"db_id": "ship_1", "query": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'", "query_toks": ["SELECT", "TYPE", "FROM", "ship", "WHERE", "flag", "=", "'Panama", "'", "INTERSECT", "SELECT", "TYPE", "FROM", "ship", "WHERE", "flag", "=", "'Malta", "'"], "query_toks_no_value": ["select", "type", "from", "ship", "where", "flag", "=", "value", "intersect", "select", "type", "from", "ship", "where", "flag", "=", "value"], "question": "Find the ship type that are used by both ships with Panama and Malta flags.", "question_toks": ["Find", "the", "ship", "type", "that", "are", "used", "by", "both", "ships", "with", "Panama", "and", "Malta", "flags", "."], "guid": 373}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the count of cities with more than 3 airports?", "sql": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "(", "SELECT", "city", "FROM", "airports", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "3", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "city", "from", "airports", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value", ")"], "question": "What is the count of cities with more than 3 airports?", "question_toks": ["What", "is", "the", "count", "of", "cities", "with", "more", "than", "3", "airports", "?"], "guid": 374}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | How many different cities do have some airport in the country of Greenland?", "sql": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'", "example": {"db_id": "flight_4", "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'", "query_toks": ["SELECT", "count", "(", "DISTINCT", "city", ")", "FROM", "airports", "WHERE", "country", "=", "'Greenland", "'"], "query_toks_no_value": ["select", "count", "(", "distinct", "city", ")", "from", "airports", "where", "country", "=", "value"], "question": "How many different cities do have some airport in the country of Greenland?", "question_toks": ["How", "many", "different", "cities", "do", "have", "some", "airport", "in", "the", "country", "of", "Greenland", "?"], "guid": 375}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | How old is the youngest winning pilot and what is their name?", "sql": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1", "example": {"db_id": "aircraft", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.age", "FROM", "pilot", "AS", "t1", "JOIN", "MATCH", "AS", "t2", "ON", "t1.pilot_id", "=", "t2.winning_pilot", "ORDER", "BY", "t1.age", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "pilot", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "pilot_id", "=", "t2", ".", "winning_pilot", "order", "by", "t1", ".", "age", "limit", "value"], "question": "How old is the youngest winning pilot and what is their name?", "question_toks": ["How", "old", "is", "the", "youngest", "winning", "pilot", "and", "what", "is", "their", "name", "?"], "guid": 376}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the name of the country with the most number of home airlines?", "sql": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "country", "FROM", "airlines", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "airlines", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the country with the most number of home airlines?", "question_toks": ["What", "is", "the", "name", "of", "the", "country", "with", "the", "most", "number", "of", "home", "airlines", "?"], "guid": 377}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show all locations with only 1 station.", "sql": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1", "example": {"db_id": "train_station", "query": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1", "query_toks": ["SELECT", "LOCATION", "FROM", "station", "GROUP", "BY", "LOCATION", "HAVING", "count", "(", "*", ")", "=", "1"], "query_toks_no_value": ["select", "location", "from", "station", "group", "by", "location", "having", "count", "(", "*", ")", "=", "value"], "question": "Show all locations with only 1 station.", "question_toks": ["Show", "all", "locations", "with", "only", "1", "station", "."], "guid": 378}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | For each  airport name, how many routes start at that airport, ordered from most to least?", "sql": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC", "example": {"db_id": "flight_4", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc"], "question": "For each  airport name, how many routes start at that airport, ordered from most to least?", "question_toks": ["For", "each", "airport", "name", ",", "how", "many", "routes", "start", "at", "that", "airport", ",", "ordered", "from", "most", "to", "least", "?"], "guid": 379}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the id of the routes whose source and destination airports are in the United States?", "sql": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "example": {"db_id": "flight_4", "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "query_toks": ["SELECT", "rid", "FROM", "routes", "WHERE", "dst_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")", "AND", "src_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")"], "query_toks_no_value": ["select", "rid", "from", "routes", "where", "dst_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")", "and", "src_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")"], "question": "What is the id of the routes whose source and destination airports are in the United States?", "question_toks": ["What", "is", "the", "id", "of", "the", "routes", "whose", "source", "and", "destination", "airports", "are", "in", "the", "United", "States", "?"], "guid": 380}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show the id and name of the aircraft with the maximum distance.", "sql": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1", "query_toks": ["SELECT", "aid", ",", "name", "FROM", "Aircraft", "ORDER", "BY", "distance", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "aid", ",", "name", "from", "aircraft", "order", "by", "distance", "desc", "limit", "value"], "question": "Show the id and name of the aircraft with the maximum distance.", "question_toks": ["Show", "the", "id", "and", "name", "of", "the", "aircraft", "with", "the", "maximum", "distance", "."], "guid": 381}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | What are the names of the airports which are not in the country 'Iceland'?", "sql": "SELECT name FROM airport WHERE country != 'Iceland'", "example": {"db_id": "flight_company", "query": "SELECT name FROM airport WHERE country != 'Iceland'", "query_toks": ["SELECT", "name", "FROM", "airport", "WHERE", "country", "!", "=", "'Iceland", "'"], "query_toks_no_value": ["select", "name", "from", "airport", "where", "country", "!", "=", "value"], "question": "What are the names of the airports which are not in the country 'Iceland'?", "question_toks": ["What", "are", "the", "names", "of", "the", "airports", "which", "are", "not", "in", "the", "country", "'Iceland", "'", "?"], "guid": 382}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | For each country, what is the average elevation of that country's airports?", "sql": "SELECT avg(elevation) ,  country FROM airports GROUP BY country", "example": {"db_id": "flight_4", "query": "SELECT avg(elevation) ,  country FROM airports GROUP BY country", "query_toks": ["SELECT", "avg", "(", "elevation", ")", ",", "country", "FROM", "airports", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "avg", "(", "elevation", ")", ",", "country", "from", "airports", "group", "by", "country"], "question": "For each country, what is the average elevation of that country's airports?", "question_toks": ["For", "each", "country", ",", "what", "is", "the", "average", "elevation", "of", "that", "country", "'s", "airports", "?"], "guid": 383}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What are flight numbers of flights arriving at Airport \"APG\"?", "sql": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "example": {"db_id": "flight_2", "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "query_toks": ["SELECT", "FlightNo", "FROM", "FLIGHTS", "WHERE", "DestAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "flightno", "from", "flights", "where", "destairport", "=", "value"], "question": "What are flight numbers of flights arriving at Airport \"APG\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "arriving", "at", "Airport", "``", "APG", "''", "?"], "guid": 384}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | Show the fleet series of the aircrafts flied by pilots younger than 34", "sql": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID WHERE T3.Age  <  34", "example": {"db_id": "pilot_record", "query": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID WHERE T3.Age  <  34", "query_toks": ["SELECT", "T2.Fleet_Series", "FROM", "pilot_record", "AS", "T1", "JOIN", "aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "pilot", "AS", "T3", "ON", "T1.Pilot_ID", "=", "T3.Pilot_ID", "WHERE", "T3.Age", "<", "34"], "query_toks_no_value": ["select", "t2", ".", "fleet_series", "from", "pilot_record", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "pilot", "as", "t3", "on", "t1", ".", "pilot_id", "=", "t3", ".", "pilot_id", "where", "t3", ".", "age", "<", "value"], "question": "Show the fleet series of the aircrafts flied by pilots younger than 34", "question_toks": ["Show", "the", "fleet", "series", "of", "the", "aircrafts", "flied", "by", "pilots", "younger", "than", "34"], "guid": 385}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What are the cities with exactly two airports?", "sql": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2", "example": {"db_id": "flight_4", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2", "query_toks": ["SELECT", "city", "FROM", "airports", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", "=", "2"], "query_toks_no_value": ["select", "city", "from", "airports", "group", "by", "city", "having", "count", "(", "*", ")", "=", "value"], "question": "What are the cities with exactly two airports?", "question_toks": ["What", "are", "the", "cities", "with", "exactly", "two", "airports", "?"], "guid": 386}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Find the name of captains whose rank are either Midshipman or Lieutenant.", "sql": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'", "example": {"db_id": "ship_1", "query": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'", "query_toks": ["SELECT", "name", "FROM", "captain", "WHERE", "rank", "=", "'Midshipman", "'", "OR", "rank", "=", "'Lieutenant", "'"], "query_toks_no_value": ["select", "name", "from", "captain", "where", "rank", "=", "value", "or", "rank", "=", "value"], "question": "Find the name of captains whose rank are either Midshipman or Lieutenant.", "question_toks": ["Find", "the", "name", "of", "captains", "whose", "rank", "are", "either", "Midshipman", "or", "Lieutenant", "."], "guid": 387}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | How many flights have a velocity larger than 200?", "sql": "SELECT count(*) FROM flight WHERE velocity  >  200", "example": {"db_id": "flight_company", "query": "SELECT count(*) FROM flight WHERE velocity  >  200", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "flight", "WHERE", "velocity", ">", "200"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flight", "where", "velocity", ">", "value"], "question": "How many flights have a velocity larger than 200?", "question_toks": ["How", "many", "flights", "have", "a", "velocity", "larger", "than", "200", "?"], "guid": 388}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Count the number of flights into ATO.", "sql": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "DestAirport", "=", "``", "ATO", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "value"], "question": "Count the number of flights into ATO.", "question_toks": ["Count", "the", "number", "of", "flights", "into", "ATO", "."], "guid": 389}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | How many routes go from the United States to Canada?", "sql": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "routes", "WHERE", "dst_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'Canada", "'", ")", "AND", "src_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "routes", "where", "dst_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")", "and", "src_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")"], "question": "How many routes go from the United States to Canada?", "question_toks": ["How", "many", "routes", "go", "from", "the", "United", "States", "to", "Canada", "?"], "guid": 390}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | List all ship names in the order of built year and class.", "sql": "SELECT name FROM ship ORDER BY built_year ,  CLASS", "example": {"db_id": "ship_1", "query": "SELECT name FROM ship ORDER BY built_year ,  CLASS", "query_toks": ["SELECT", "name", "FROM", "ship", "ORDER", "BY", "built_year", ",", "CLASS"], "query_toks_no_value": ["select", "name", "from", "ship", "order", "by", "built_year", ",", "class"], "question": "List all ship names in the order of built year and class.", "question_toks": ["List", "all", "ship", "names", "in", "the", "order", "of", "built", "year", "and", "class", "."], "guid": 391}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show the name of employees with three lowest salaries.", "sql": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3", "example": {"db_id": "flight_1", "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3", "query_toks": ["SELECT", "name", "FROM", "Employee", "ORDER", "BY", "salary", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "employee", "order", "by", "salary", "asc", "limit", "value"], "question": "Show the name of employees with three lowest salaries.", "question_toks": ["Show", "the", "name", "of", "employees", "with", "three", "lowest", "salaries", "."], "guid": 392}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What is all the information on the airport with the largest number of international passengers?", "sql": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1", "example": {"db_id": "aircraft", "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1", "query_toks": ["SELECT", "*", "FROM", "airport", "ORDER", "BY", "International_Passengers", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "*", "from", "airport", "order", "by", "international_passengers", "desc", "limit", "value"], "question": "What is all the information on the airport with the largest number of international passengers?", "question_toks": ["What", "is", "all", "the", "information", "on", "the", "airport", "with", "the", "largest", "number", "of", "international", "passengers", "?"], "guid": 393}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | Show the most common builder of railways.", "sql": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "railway", "query": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Builder", "FROM", "railway", "GROUP", "BY", "Builder", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "builder", "from", "railway", "group", "by", "builder", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the most common builder of railways.", "question_toks": ["Show", "the", "most", "common", "builder", "of", "railways", "."], "guid": 394}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the average elevation of all airports for each country.", "sql": "SELECT avg(elevation) ,  country FROM airports GROUP BY country", "example": {"db_id": "flight_4", "query": "SELECT avg(elevation) ,  country FROM airports GROUP BY country", "query_toks": ["SELECT", "avg", "(", "elevation", ")", ",", "country", "FROM", "airports", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "avg", "(", "elevation", ")", ",", "country", "from", "airports", "group", "by", "country"], "question": "Find the average elevation of all airports for each country.", "question_toks": ["Find", "the", "average", "elevation", "of", "all", "airports", "for", "each", "country", "."], "guid": 395}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show name and distance for all aircrafts.", "sql": "SELECT name ,  distance FROM Aircraft", "example": {"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft"], "question": "Show name and distance for all aircrafts.", "question_toks": ["Show", "name", "and", "distance", "for", "all", "aircrafts", "."], "guid": 396}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Which country is the airport that has the highest altitude located in?", "sql": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1", "query_toks": ["SELECT", "country", "FROM", "airports", "ORDER", "BY", "elevation", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "airports", "order", "by", "elevation", "desc", "limit", "value"], "question": "Which country is the airport that has the highest altitude located in?", "question_toks": ["Which", "country", "is", "the", "airport", "that", "has", "the", "highest", "altitude", "located", "in", "?"], "guid": 397}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which city is the most frequent source airport?", "sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city is the most frequent source airport?", "question_toks": ["Which", "city", "is", "the", "most", "frequent", "source", "airport", "?"], "guid": 398}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | Show the countries that have managers of age above 50 or below 46.", "sql": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46", "example": {"db_id": "railway", "query": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46", "query_toks": ["SELECT", "Country", "FROM", "manager", "WHERE", "Age", ">", "50", "OR", "Age", "<", "46"], "query_toks_no_value": ["select", "country", "from", "manager", "where", "age", ">", "value", "or", "age", "<", "value"], "question": "Show the countries that have managers of age above 50 or below 46.", "question_toks": ["Show", "the", "countries", "that", "have", "managers", "of", "age", "above", "50", "or", "below", "46", "."], "guid": 399}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many flights arriving in Aberdeen city?", "sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "How many flights arriving in Aberdeen city?", "question_toks": ["How", "many", "flights", "arriving", "in", "Aberdeen", "city", "?"], "guid": 400}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | List the cities which have more than 2 airports sorted by the number of airports.", "sql": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)", "example": {"db_id": "flight_4", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)", "query_toks": ["SELECT", "city", "FROM", "airports", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "2", "ORDER", "BY", "count", "(", "*", ")"], "query_toks_no_value": ["select", "city", "from", "airports", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value", "order", "by", "count", "(", "*", ")"], "question": "List the cities which have more than 2 airports sorted by the number of airports.", "question_toks": ["List", "the", "cities", "which", "have", "more", "than", "2", "airports", "sorted", "by", "the", "number", "of", "airports", "."], "guid": 401}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | How many pilots are there?", "sql": "SELECT count(*) FROM pilot", "example": {"db_id": "pilot_record", "query": "SELECT count(*) FROM pilot", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "pilot"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "pilot"], "question": "How many pilots are there?", "question_toks": ["How", "many", "pilots", "are", "there", "?"], "guid": 402}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the average distance and price for all flights from LA?", "sql": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"", "example": {"db_id": "flight_1", "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"", "query_toks": ["SELECT", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value"], "question": "What is the average distance and price for all flights from LA?", "question_toks": ["What", "is", "the", "average", "distance", "and", "price", "for", "all", "flights", "from", "LA", "?"], "guid": 403}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Find the captain rank that has some captains in both Cutter and Armed schooner classes.", "sql": "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'", "example": {"db_id": "ship_1", "query": "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'", "query_toks": ["SELECT", "rank", "FROM", "captain", "WHERE", "CLASS", "=", "'Cutter", "'", "INTERSECT", "SELECT", "rank", "FROM", "captain", "WHERE", "CLASS", "=", "'Armed", "schooner", "'"], "query_toks_no_value": ["select", "rank", "from", "captain", "where", "class", "=", "value", "intersect", "select", "rank", "from", "captain", "where", "class", "=", "value"], "question": "Find the captain rank that has some captains in both Cutter and Armed schooner classes.", "question_toks": ["Find", "the", "captain", "rank", "that", "has", "some", "captains", "in", "both", "Cutter", "and", "Armed", "schooner", "classes", "."], "guid": 404}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | Show different locations of railways along with the corresponding number of railways at each location.", "sql": "SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION", "example": {"db_id": "railway", "query": "SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION", "query_toks": ["SELECT", "LOCATION", ",", "COUNT", "(", "*", ")", "FROM", "railway", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "location", ",", "count", "(", "*", ")", "from", "railway", "group", "by", "location"], "question": "Show different locations of railways along with the corresponding number of railways at each location.", "question_toks": ["Show", "different", "locations", "of", "railways", "along", "with", "the", "corresponding", "number", "of", "railways", "at", "each", "location", "."], "guid": 405}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show ids for all employees who don't have a certificate.", "sql": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate", "example": {"db_id": "flight_1", "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate", "query_toks": ["SELECT", "eid", "FROM", "Employee", "EXCEPT", "SELECT", "eid", "FROM", "Certificate"], "query_toks_no_value": ["select", "eid", "from", "employee", "except", "select", "eid", "from", "certificate"], "question": "Show ids for all employees who don't have a certificate.", "question_toks": ["Show", "ids", "for", "all", "employees", "who", "do", "n't", "have", "a", "certificate", "."], "guid": 406}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show ids for all aircrafts with more than 1000 distance.", "sql": "SELECT aid FROM Aircraft WHERE distance  >  1000", "example": {"db_id": "flight_1", "query": "SELECT aid FROM Aircraft WHERE distance  >  1000", "query_toks": ["SELECT", "aid", "FROM", "Aircraft", "WHERE", "distance", ">", "1000"], "query_toks_no_value": ["select", "aid", "from", "aircraft", "where", "distance", ">", "value"], "question": "Show ids for all aircrafts with more than 1000 distance.", "question_toks": ["Show", "ids", "for", "all", "aircrafts", "with", "more", "than", "1000", "distance", "."], "guid": 407}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | What is the velocity of the pilot named 'Thompson'?", "sql": "SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'", "example": {"db_id": "flight_company", "query": "SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'", "query_toks": ["SELECT", "avg", "(", "velocity", ")", "FROM", "flight", "WHERE", "pilot", "=", "'Thompson", "'"], "query_toks_no_value": ["select", "avg", "(", "velocity", ")", "from", "flight", "where", "pilot", "=", "value"], "question": "What is the velocity of the pilot named 'Thompson'?", "question_toks": ["What", "is", "the", "velocity", "of", "the", "pilot", "named", "'Thompson", "'", "?"], "guid": 408}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show the station name and number of trains in each station.", "sql": "SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id", "example": {"db_id": "train_station", "query": "SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "train_station", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.station_id", "=", "T2.station_id", "GROUP", "BY", "T1.station_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "train_station", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "station_id", "group", "by", "t1", ".", "station_id"], "question": "Show the station name and number of trains in each station.", "question_toks": ["Show", "the", "station", "name", "and", "number", "of", "trains", "in", "each", "station", "."], "guid": 409}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which airlines have less than 200 flights?", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", "<", "200"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", "<", "value"], "question": "Which airlines have less than 200 flights?", "question_toks": ["Which", "airlines", "have", "less", "than", "200", "flights", "?"], "guid": 410}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | List the name of ships in ascending order of tonnage.", "sql": "SELECT Name FROM ship ORDER BY Tonnage ASC", "example": {"db_id": "ship_mission", "query": "SELECT Name FROM ship ORDER BY Tonnage ASC", "query_toks": ["SELECT", "Name", "FROM", "ship", "ORDER", "BY", "Tonnage", "ASC"], "query_toks_no_value": ["select", "name", "from", "ship", "order", "by", "tonnage", "asc"], "question": "List the name of ships in ascending order of tonnage.", "question_toks": ["List", "the", "name", "of", "ships", "in", "ascending", "order", "of", "tonnage", "."], "guid": 411}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | what is the salary and name of the employee who has the most number of aircraft certificates?", "sql": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.salary", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "GROUP", "BY", "T1.eid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "salary", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "group", "by", "t1", ".", "eid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "what is the salary and name of the employee who has the most number of aircraft certificates?", "question_toks": ["what", "is", "the", "salary", "and", "name", "of", "the", "employee", "who", "has", "the", "most", "number", "of", "aircraft", "certificates", "?"], "guid": 412}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | Show names of ships involved in a mission launched after 1928.", "sql": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928", "example": {"db_id": "ship_mission", "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928", "query_toks": ["SELECT", "T2.Name", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID", "WHERE", "T1.Launched_Year", ">", "1928"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "where", "t1", ".", "launched_year", ">", "value"], "question": "Show names of ships involved in a mission launched after 1928.", "question_toks": ["Show", "names", "of", "ships", "involved", "in", "a", "mission", "launched", "after", "1928", "."], "guid": 413}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the name of airports whose altitude is between -50 and 50.", "sql": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50", "example": {"db_id": "flight_4", "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "elevation", "BETWEEN", "-50", "AND", "50"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "elevation", "between", "value", "and", "value"], "question": "Find the name of airports whose altitude is between -50 and 50.", "question_toks": ["Find", "the", "name", "of", "airports", "whose", "altitude", "is", "between", "-50", "and", "50", "."], "guid": 414}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | List the vehicle flight number, date and pilot of all the flights, ordered by altitude.", "sql": "SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC", "example": {"db_id": "flight_company", "query": "SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC", "query_toks": ["SELECT", "vehicle_flight_number", ",", "date", ",", "pilot", "FROM", "flight", "ORDER", "BY", "altitude", "ASC"], "query_toks_no_value": ["select", "vehicle_flight_number", ",", "date", ",", "pilot", "from", "flight", "order", "by", "altitude", "asc"], "question": "List the vehicle flight number, date and pilot of all the flights, ordered by altitude.", "question_toks": ["List", "the", "vehicle", "flight", "number", ",", "date", "and", "pilot", "of", "all", "the", "flights", ",", "ordered", "by", "altitude", "."], "guid": 415}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many United Airlines flights go to City 'Aberdeen'?", "sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRLINES", "AS", "T3", "ON", "T3.uid", "=", "T1.Airline", "WHERE", "T2.City", "=", "``", "Aberdeen", "''", "AND", "T3.Airline", "=", "``", "United", "Airlines", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airlines", "as", "t3", "on", "t3", ".", "uid", "=", "t1", ".", "airline", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "airline", "=", "value"], "question": "How many United Airlines flights go to City 'Aberdeen'?", "question_toks": ["How", "many", "United", "Airlines", "flights", "go", "to", "City", "'Aberdeen", "'", "?"], "guid": 416}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Find the number of flights landing in the city of Aberdeen or Abilene.", "sql": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Flights", "AS", "T1", "JOIN", "Airports", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.city", "=", "``", "Aberdeen", "''", "OR", "T2.city", "=", "``", "Abilene", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "or", "t2", ".", "city", "=", "value"], "question": "Find the number of flights landing in the city of Aberdeen or Abilene.", "question_toks": ["Find", "the", "number", "of", "flights", "landing", "in", "the", "city", "of", "Aberdeen", "or", "Abilene", "."], "guid": 417}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | For each airport name, how many routes start at that airport?", "sql": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name", "example": {"db_id": "flight_4", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "group", "by", "t1", ".", "name"], "question": "For each airport name, how many routes start at that airport?", "question_toks": ["For", "each", "airport", "name", ",", "how", "many", "routes", "start", "at", "that", "airport", "?"], "guid": 418}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | For each country and airline name, how many routes are there?", "sql": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name", "example": {"db_id": "flight_4", "query": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name", "query_toks": ["SELECT", "T1.country", ",", "T1.name", ",", "count", "(", "*", ")", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T1.country", ",", "T1.name"], "query_toks_no_value": ["select", "t1", ".", "country", ",", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t1", ".", "country", ",", "t1", ".", "name"], "question": "For each country and airline name, how many routes are there?", "question_toks": ["For", "each", "country", "and", "airline", "name", ",", "how", "many", "routes", "are", "there", "?"], "guid": 419}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | What are the names of the stations which serve both \"Ananthapuri Express\" and \"Guruvayur Express\" trains?", "sql": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Ananthapuri Express\" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Guruvayur Express\"", "example": {"db_id": "train_station", "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Ananthapuri Express\" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Guruvayur Express\"", "query_toks": ["SELECT", "T2.name", "FROM", "train_station", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.station_id", "=", "T2.station_id", "JOIN", "train", "AS", "T3", "ON", "T3.train_id", "=", "T1.train_id", "WHERE", "T3.Name", "=", "``", "Ananthapuri", "Express", "''", "INTERSECT", "SELECT", "T2.name", "FROM", "train_station", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.station_id", "=", "T2.station_id", "JOIN", "train", "AS", "T3", "ON", "T3.train_id", "=", "T1.train_id", "WHERE", "T3.Name", "=", "``", "Guruvayur", "Express", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "train_station", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "station_id", "join", "train", "as", "t3", "on", "t3", ".", "train_id", "=", "t1", ".", "train_id", "where", "t3", ".", "name", "=", "value", "intersect", "select", "t2", ".", "name", "from", "train_station", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "station_id", "join", "train", "as", "t3", "on", "t3", ".", "train_id", "=", "t1", ".", "train_id", "where", "t3", ".", "name", "=", "value"], "question": "What are the names of the stations which serve both \"Ananthapuri Express\" and \"Guruvayur Express\" trains?", "question_toks": ["What", "are", "the", "names", "of", "the", "stations", "which", "serve", "both", "``", "Ananthapuri", "Express", "''", "and", "``", "Guruvayur", "Express", "''", "trains", "?"], "guid": 420}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What are the average and minimum age of captains in different class?", "sql": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS", "example": {"db_id": "ship_1", "query": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "CLASS", "FROM", "captain", "GROUP", "BY", "CLASS"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "class", "from", "captain", "group", "by", "class"], "question": "What are the average and minimum age of captains in different class?", "question_toks": ["What", "are", "the", "average", "and", "minimum", "age", "of", "captains", "in", "different", "class", "?"], "guid": 421}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show the location with most number of train stations.", "sql": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "train_station", "query": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "LOCATION", "FROM", "station", "GROUP", "BY", "LOCATION", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "location", "from", "station", "group", "by", "location", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the location with most number of train stations.", "question_toks": ["Show", "the", "location", "with", "most", "number", "of", "train", "stations", "."], "guid": 422}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What are the names of the ships that are not from the United States?", "sql": "SELECT Name FROM ship WHERE Nationality != \"United States\"", "example": {"db_id": "ship_mission", "query": "SELECT Name FROM ship WHERE Nationality != \"United States\"", "query_toks": ["SELECT", "Name", "FROM", "ship", "WHERE", "Nationality", "!", "=", "``", "United", "States", "''"], "query_toks_no_value": ["select", "name", "from", "ship", "where", "nationality", "!", "=", "value"], "question": "What are the names of the ships that are not from the United States?", "question_toks": ["What", "are", "the", "names", "of", "the", "ships", "that", "are", "not", "from", "the", "United", "States", "?"], "guid": 423}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which city has the most frequent destination airport?", "sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city has the most frequent destination airport?", "question_toks": ["Which", "city", "has", "the", "most", "frequent", "destination", "airport", "?"], "guid": 424}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Find all airlines that have flights from airport 'CVO' but not from 'APG'.", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''", "EXCEPT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "except", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.", "question_toks": ["Find", "all", "airlines", "that", "have", "flights", "from", "airport", "'CVO", "'", "but", "not", "from", "'APG", "'", "."], "guid": 425}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Find the abbreviation and country of the airline that has fewest number of flights?", "sql": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "example": {"db_id": "flight_2", "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.Abbreviation", ",", "T1.Country", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "abbreviation", ",", "t1", ".", "country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Find the abbreviation and country of the airline that has fewest number of flights?", "question_toks": ["Find", "the", "abbreviation", "and", "country", "of", "the", "airline", "that", "has", "fewest", "number", "of", "flights", "?"], "guid": 426}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What are the names of captains that have either the rank Midshipman or Lieutenant?", "sql": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'", "example": {"db_id": "ship_1", "query": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'", "query_toks": ["SELECT", "name", "FROM", "captain", "WHERE", "rank", "=", "'Midshipman", "'", "OR", "rank", "=", "'Lieutenant", "'"], "query_toks_no_value": ["select", "name", "from", "captain", "where", "rank", "=", "value", "or", "rank", "=", "value"], "question": "What are the names of captains that have either the rank Midshipman or Lieutenant?", "question_toks": ["What", "are", "the", "names", "of", "captains", "that", "have", "either", "the", "rank", "Midshipman", "or", "Lieutenant", "?"], "guid": 427}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the number of airports per country, ordered from most to least?", "sql": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC", "example": {"db_id": "flight_4", "query": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "country", "FROM", "airports", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "country", "from", "airports", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc"], "question": "What is the number of airports per country, ordered from most to least?", "question_toks": ["What", "is", "the", "number", "of", "airports", "per", "country", ",", "ordered", "from", "most", "to", "least", "?"], "guid": 428}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Group by ships by flag, and return number of ships that have each flag.", "sql": "SELECT count(*) ,  flag FROM ship GROUP BY flag", "example": {"db_id": "ship_1", "query": "SELECT count(*) ,  flag FROM ship GROUP BY flag", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "flag", "FROM", "ship", "GROUP", "BY", "flag"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "flag", "from", "ship", "group", "by", "flag"], "question": "Group by ships by flag, and return number of ships that have each flag.", "question_toks": ["Group", "by", "ships", "by", "flag", ",", "and", "return", "number", "of", "ships", "that", "have", "each", "flag", "."], "guid": 429}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the names for all aircrafts with at least 2 flights?", "sql": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2", "example": {"db_id": "flight_1", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2", "query_toks": ["SELECT", "T2.name", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "GROUP", "BY", "T1.aid", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "group", "by", "t1", ".", "aid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names for all aircrafts with at least 2 flights?", "question_toks": ["What", "are", "the", "names", "for", "all", "aircrafts", "with", "at", "least", "2", "flights", "?"], "guid": 430}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the names of all aircrafts that can cover more distances than average?", "sql": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)", "example": {"db_id": "flight_1", "query": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)", "query_toks": ["SELECT", "name", "FROM", "Aircraft", "WHERE", "distance", ">", "(", "SELECT", "avg", "(", "distance", ")", "FROM", "Aircraft", ")"], "query_toks_no_value": ["select", "name", "from", "aircraft", "where", "distance", ">", "(", "select", "avg", "(", "distance", ")", "from", "aircraft", ")"], "question": "What are the names of all aircrafts that can cover more distances than average?", "question_toks": ["What", "are", "the", "names", "of", "all", "aircrafts", "that", "can", "cover", "more", "distances", "than", "average", "?"], "guid": 431}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Find all airlines that have at least 10 flights.", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", ">", "10"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", ">", "value"], "question": "Find all airlines that have at least 10 flights.", "question_toks": ["Find", "all", "airlines", "that", "have", "at", "least", "10", "flights", "."], "guid": 432}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | How many train stations are there?", "sql": "SELECT count(*) FROM station", "example": {"db_id": "train_station", "query": "SELECT count(*) FROM station", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "station"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "station"], "question": "How many train stations are there?", "question_toks": ["How", "many", "train", "stations", "are", "there", "?"], "guid": 433}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many flights do we have?", "sql": "SELECT count(*) FROM FLIGHTS", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights"], "question": "How many flights do we have?", "question_toks": ["How", "many", "flights", "do", "we", "have", "?"], "guid": 434}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show aircraft names and number of flights for each aircraft.", "sql": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid", "example": {"db_id": "flight_1", "query": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "GROUP", "BY", "T1.aid"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "group", "by", "t1", ".", "aid"], "question": "Show aircraft names and number of flights for each aircraft.", "question_toks": ["Show", "aircraft", "names", "and", "number", "of", "flights", "for", "each", "aircraft", "."], "guid": 435}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | How many companies operates airlines in each airport?", "sql": "SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id", "example": {"db_id": "flight_company", "query": "SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id", "query_toks": ["SELECT", "T3.id", ",", "count", "(", "*", ")", "FROM", "operate_company", "AS", "T1", "JOIN", "flight", "AS", "t2", "ON", "T1.id", "=", "T2.company_id", "JOIN", "airport", "AS", "T3", "ON", "T2.airport_id", "=", "T3.id", "GROUP", "BY", "T3.id"], "query_toks_no_value": ["select", "t3", ".", "id", ",", "count", "(", "*", ")", "from", "operate_company", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "company_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "id", "group", "by", "t3", ".", "id"], "question": "How many companies operates airlines in each airport?", "question_toks": ["How", "many", "companies", "operates", "airlines", "in", "each", "airport", "?"], "guid": 436}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What are the names of ships that are commanded by both captains with the rank of Midshipman and captains with the rank of Lieutenant?", "sql": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'", "example": {"db_id": "ship_1", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'", "query_toks": ["SELECT", "t1.name", "FROM", "ship", "AS", "t1", "JOIN", "captain", "AS", "t2", "ON", "t1.ship_id", "=", "t2.ship_id", "WHERE", "t2.rank", "=", "'Midshipman", "'", "INTERSECT", "SELECT", "t1.name", "FROM", "ship", "AS", "t1", "JOIN", "captain", "AS", "t2", "ON", "t1.ship_id", "=", "t2.ship_id", "WHERE", "t2.rank", "=", "'Lieutenant", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "ship", "as", "t1", "join", "captain", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "where", "t2", ".", "rank", "=", "value", "intersect", "select", "t1", ".", "name", "from", "ship", "as", "t1", "join", "captain", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "where", "t2", ".", "rank", "=", "value"], "question": "What are the names of ships that are commanded by both captains with the rank of Midshipman and captains with the rank of Lieutenant?", "question_toks": ["What", "are", "the", "names", "of", "ships", "that", "are", "commanded", "by", "both", "captains", "with", "the", "rank", "of", "Midshipman", "and", "captains", "with", "the", "rank", "of", "Lieutenant", "?"], "guid": 437}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the names of all employees who are not certified to fly Boeing 737-800s?", "sql": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "example": {"db_id": "flight_1", "query": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "query_toks": ["SELECT", "name", "FROM", "Employee", "EXCEPT", "SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Boeing", "737-800", "''"], "query_toks_no_value": ["select", "name", "from", "employee", "except", "select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value"], "question": "What are the names of all employees who are not certified to fly Boeing 737-800s?", "question_toks": ["What", "are", "the", "names", "of", "all", "employees", "who", "are", "not", "certified", "to", "fly", "Boeing", "737-800s", "?"], "guid": 438}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Find all airlines that have fewer than 200 flights.", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", "<", "200"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", "<", "value"], "question": "Find all airlines that have fewer than 200 flights.", "question_toks": ["Find", "all", "airlines", "that", "have", "fewer", "than", "200", "flights", "."], "guid": 439}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What are the names, classes, and ranks of all captains?", "sql": "SELECT name ,  CLASS ,  rank FROM captain", "example": {"db_id": "ship_1", "query": "SELECT name ,  CLASS ,  rank FROM captain", "query_toks": ["SELECT", "name", ",", "CLASS", ",", "rank", "FROM", "captain"], "query_toks_no_value": ["select", "name", ",", "class", ",", "rank", "from", "captain"], "question": "What are the names, classes, and ranks of all captains?", "question_toks": ["What", "are", "the", "names", ",", "classes", ",", "and", "ranks", "of", "all", "captains", "?"], "guid": 440}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the number of different different airports that are destinations for American Airlines?", "sql": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "example": {"db_id": "flight_4", "query": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dst_apid", ")", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "WHERE", "T1.name", "=", "'American", "Airlines", "'"], "query_toks_no_value": ["select", "count", "(", "distinct", "dst_apid", ")", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "where", "t1", ".", "name", "=", "value"], "question": "What is the number of different different airports that are destinations for American Airlines?", "question_toks": ["What", "is", "the", "number", "of", "different", "different", "airports", "that", "are", "destinations", "for", "American", "Airlines", "?"], "guid": 441}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show the name, location, and number of platforms for all stations.", "sql": "SELECT name ,  LOCATION ,  number_of_platforms FROM station", "example": {"db_id": "train_station", "query": "SELECT name ,  LOCATION ,  number_of_platforms FROM station", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "number_of_platforms", "FROM", "station"], "query_toks_no_value": ["select", "name", ",", "location", ",", "number_of_platforms", "from", "station"], "question": "Show the name, location, and number of platforms for all stations.", "question_toks": ["Show", "the", "name", ",", "location", ",", "and", "number", "of", "platforms", "for", "all", "stations", "."], "guid": 442}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show the names and main services for train stations that have the top three total number of passengers.", "sql": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3", "example": {"db_id": "train_station", "query": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3", "query_toks": ["SELECT", "name", ",", "main_services", "FROM", "station", "ORDER", "BY", "total_passengers", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", ",", "main_services", "from", "station", "order", "by", "total_passengers", "desc", "limit", "value"], "question": "Show the names and main services for train stations that have the top three total number of passengers.", "question_toks": ["Show", "the", "names", "and", "main", "services", "for", "train", "stations", "that", "have", "the", "top", "three", "total", "number", "of", "passengers", "."], "guid": 443}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | How many aircrafts do we have?", "sql": "SELECT count(*) FROM Aircraft", "example": {"db_id": "flight_1", "query": "SELECT count(*) FROM Aircraft", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Aircraft"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "aircraft"], "question": "How many aircrafts do we have?", "question_toks": ["How", "many", "aircrafts", "do", "we", "have", "?"], "guid": 444}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What are the names of all cities with more than one airport and how many airports do they have?", "sql": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1", "example": {"db_id": "flight_4", "query": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1", "query_toks": ["SELECT", "city", ",", "count", "(", "*", ")", "FROM", "airports", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "city", ",", "count", "(", "*", ")", "from", "airports", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of all cities with more than one airport and how many airports do they have?", "question_toks": ["What", "are", "the", "names", "of", "all", "cities", "with", "more", "than", "one", "airport", "and", "how", "many", "airports", "do", "they", "have", "?"], "guid": 445}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | How many aircrafts have distance between 1000 and 5000?", "sql": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000", "example": {"db_id": "flight_1", "query": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Aircraft", "WHERE", "distance", "BETWEEN", "1000", "AND", "5000"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "aircraft", "where", "distance", "between", "value", "and", "value"], "question": "How many aircrafts have distance between 1000 and 5000?", "question_toks": ["How", "many", "aircrafts", "have", "distance", "between", "1000", "and", "5000", "?"], "guid": 446}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many airlines are from USA?", "sql": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value"], "question": "How many airlines are from USA?", "question_toks": ["How", "many", "airlines", "are", "from", "USA", "?"], "guid": 447}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What country is Jetblue Airways affiliated with?", "sql": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "example": {"db_id": "flight_2", "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Country", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "airline", "=", "value"], "question": "What country is Jetblue Airways affiliated with?", "question_toks": ["What", "country", "is", "Jetblue", "Airways", "affiliated", "with", "?"], "guid": 448}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | Show the most common nationality of pilots.", "sql": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "pilot_record", "query": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Nationality", "FROM", "pilot", "GROUP", "BY", "Nationality", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "nationality", "from", "pilot", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the most common nationality of pilots.", "question_toks": ["Show", "the", "most", "common", "nationality", "of", "pilots", "."], "guid": 449}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | Show the name of ships whose nationality is either United States or United Kingdom.", "sql": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"", "example": {"db_id": "ship_mission", "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"", "query_toks": ["SELECT", "Name", "FROM", "ship", "WHERE", "Nationality", "=", "``", "United", "States", "''", "OR", "Nationality", "=", "``", "United", "Kingdom", "''"], "query_toks_no_value": ["select", "name", "from", "ship", "where", "nationality", "=", "value", "or", "nationality", "=", "value"], "question": "Show the name of ships whose nationality is either United States or United Kingdom.", "question_toks": ["Show", "the", "name", "of", "ships", "whose", "nationality", "is", "either", "United", "States", "or", "United", "Kingdom", "."], "guid": 450}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | Show different types of ships and the average tonnage of ships of each type.", "sql": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE", "example": {"db_id": "ship_mission", "query": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "avg", "(", "Tonnage", ")", "FROM", "ship", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "avg", "(", "tonnage", ")", "from", "ship", "group", "by", "type"], "question": "Show different types of ships and the average tonnage of ships of each type.", "question_toks": ["Show", "different", "types", "of", "ships", "and", "the", "average", "tonnage", "of", "ships", "of", "each", "type", "."], "guid": 451}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | Show different types of ships and the number of ships of each type.", "sql": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE", "example": {"db_id": "ship_mission", "query": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "COUNT", "(", "*", ")", "FROM", "ship", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", "from", "ship", "group", "by", "type"], "question": "Show different types of ships and the number of ships of each type.", "question_toks": ["Show", "different", "types", "of", "ships", "and", "the", "number", "of", "ships", "of", "each", "type", "."], "guid": 452}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show names for all aircrafts of which John Williams has certificates.", "sql": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\"", "example": {"db_id": "flight_1", "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\"", "query_toks": ["SELECT", "T3.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T1.name", "=", "``", "John", "Williams", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t1", ".", "name", "=", "value"], "question": "Show names for all aircrafts of which John Williams has certificates.", "question_toks": ["Show", "names", "for", "all", "aircrafts", "of", "which", "John", "Williams", "has", "certificates", "."], "guid": 453}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the name, city, country, and elevation for every airport in the city of New York?", "sql": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'", "example": {"db_id": "flight_4", "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'", "query_toks": ["SELECT", "name", ",", "city", ",", "country", ",", "elevation", "FROM", "airports", "WHERE", "city", "=", "'New", "York", "'"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", ",", "elevation", "from", "airports", "where", "city", "=", "value"], "question": "What is the name, city, country, and elevation for every airport in the city of New York?", "question_toks": ["What", "is", "the", "name", ",", "city", ",", "country", ",", "and", "elevation", "for", "every", "airport", "in", "the", "city", "of", "New", "York", "?"], "guid": 454}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What is the average total number of passengers of airports that are associated with aircraft \"Robinson R-22\"?", "sql": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\"", "example": {"db_id": "aircraft", "query": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\"", "query_toks": ["SELECT", "avg", "(", "T3.Total_Passengers", ")", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T1.Aircraft", "=", "``", "Robinson", "R-22", "''"], "query_toks_no_value": ["select", "avg", "(", "t3", ".", "total_passengers", ")", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t1", ".", "aircraft", "=", "value"], "question": "What is the average total number of passengers of airports that are associated with aircraft \"Robinson R-22\"?", "question_toks": ["What", "is", "the", "average", "total", "number", "of", "passengers", "of", "airports", "that", "are", "associated", "with", "aircraft", "``", "Robinson", "R-22", "''", "?"], "guid": 455}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which city and country is the Alton airport at?", "sql": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "example": {"db_id": "flight_2", "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "query_toks": ["SELECT", "City", ",", "Country", "FROM", "AIRPORTS", "WHERE", "AirportName", "=", "``", "Alton", "''"], "query_toks_no_value": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "value"], "question": "Which city and country is the Alton airport at?", "question_toks": ["Which", "city", "and", "country", "is", "the", "Alton", "airport", "at", "?"], "guid": 456}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | How many airports' names have the word Interanation in them?", "sql": "SELECT count(*) FROM airports WHERE name LIKE '%International%'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airports", "WHERE", "name", "LIKE", "'", "%", "International", "%", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports", "where", "name", "like", "value"], "question": "How many airports' names have the word Interanation in them?", "question_toks": ["How", "many", "airports", "'", "names", "have", "the", "word", "Interanation", "in", "them", "?"], "guid": 457}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Give the airline with abbreviation 'UAL'.", "sql": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "example": {"db_id": "flight_2", "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "query_toks": ["SELECT", "Airline", "FROM", "AIRLINES", "WHERE", "Abbreviation", "=", "``", "UAL", "''"], "query_toks_no_value": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "value"], "question": "Give the airline with abbreviation 'UAL'.", "question_toks": ["Give", "the", "airline", "with", "abbreviation", "'UAL", "'", "."], "guid": 458}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | List all pilot names in ascending alphabetical order.", "sql": "SELECT Name FROM pilot ORDER BY Name ASC", "example": {"db_id": "aircraft", "query": "SELECT Name FROM pilot ORDER BY Name ASC", "query_toks": ["SELECT", "Name", "FROM", "pilot", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["select", "name", "from", "pilot", "order", "by", "name", "asc"], "question": "List all pilot names in ascending alphabetical order.", "question_toks": ["List", "all", "pilot", "names", "in", "ascending", "alphabetical", "order", "."], "guid": 459}}