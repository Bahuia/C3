{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the number of employees?", "sql": "SELECT count(*) FROM Employee", "example": {"db_id": "flight_1", "query": "SELECT count(*) FROM Employee", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Employee"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "employee"], "question": "What is the number of employees?", "question_toks": ["What", "is", "the", "number", "of", "employees", "?"], "guid": 262}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What is the name of the ship that is commanded by the youngest captain?", "sql": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1", "example": {"db_id": "ship_1", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1", "query_toks": ["SELECT", "t1.name", "FROM", "ship", "AS", "t1", "JOIN", "captain", "AS", "t2", "ON", "t1.ship_id", "=", "t2.ship_id", "ORDER", "BY", "t2.age", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "ship", "as", "t1", "join", "captain", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "order", "by", "t2", ".", "age", "limit", "value"], "question": "What is the name of the ship that is commanded by the youngest captain?", "question_toks": ["What", "is", "the", "name", "of", "the", "ship", "that", "is", "commanded", "by", "the", "youngest", "captain", "?"], "guid": 263}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What is the most common type of ships?", "sql": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "ship_mission", "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "TYPE", "FROM", "ship", "GROUP", "BY", "TYPE", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "type", "from", "ship", "group", "by", "type", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common type of ships?", "question_toks": ["What", "is", "the", "most", "common", "type", "of", "ships", "?"], "guid": 264}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | List the nations that have more than two ships.", "sql": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2", "example": {"db_id": "ship_mission", "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2", "query_toks": ["SELECT", "Nationality", "FROM", "ship", "GROUP", "BY", "Nationality", "HAVING", "COUNT", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "nationality", "from", "ship", "group", "by", "nationality", "having", "count", "(", "*", ")", ">", "value"], "question": "List the nations that have more than two ships.", "question_toks": ["List", "the", "nations", "that", "have", "more", "than", "two", "ships", "."], "guid": 265}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | which countries have more than 2 airports?", "sql": "SELECT country FROM airport GROUP BY country HAVING count(*)  >  2", "example": {"db_id": "flight_company", "query": "SELECT country FROM airport GROUP BY country HAVING count(*)  >  2", "query_toks": ["SELECT", "country", "FROM", "airport", "GROUP", "BY", "country", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "country", "from", "airport", "group", "by", "country", "having", "count", "(", "*", ")", ">", "value"], "question": "which countries have more than 2 airports?", "question_toks": ["which", "countries", "have", "more", "than", "2", "airports", "?"], "guid": 266}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | List all airline names and their abbreviations in \"USA\".", "sql": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "example": {"db_id": "flight_2", "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "Airline", ",", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "value"], "question": "List all airline names and their abbreviations in \"USA\".", "question_toks": ["List", "all", "airline", "names", "and", "their", "abbreviations", "in", "``", "USA", "''", "."], "guid": 267}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What are airlines that have some flight departing from airport 'AHD'?", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "What are airlines that have some flight departing from airport 'AHD'?", "question_toks": ["What", "are", "airlines", "that", "have", "some", "flight", "departing", "from", "airport", "'AHD", "'", "?"], "guid": 268}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the id and salary of the employee named Mark Young?", "sql": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'", "example": {"db_id": "flight_1", "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'", "query_toks": ["SELECT", "eid", ",", "salary", "FROM", "Employee", "WHERE", "name", "=", "'Mark", "Young", "'"], "query_toks_no_value": ["select", "eid", ",", "salary", "from", "employee", "where", "name", "=", "value"], "question": "What is the id and salary of the employee named Mark Young?", "question_toks": ["What", "is", "the", "id", "and", "salary", "of", "the", "employee", "named", "Mark", "Young", "?"], "guid": 269}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Count the number of United Airlines flights that arrive in Aberdeen.", "sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRLINES", "AS", "T3", "ON", "T3.uid", "=", "T1.Airline", "WHERE", "T2.City", "=", "``", "Aberdeen", "''", "AND", "T3.Airline", "=", "``", "United", "Airlines", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airlines", "as", "t3", "on", "t3", ".", "uid", "=", "t1", ".", "airline", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "airline", "=", "value"], "question": "Count the number of United Airlines flights that arrive in Aberdeen.", "question_toks": ["Count", "the", "number", "of", "United", "Airlines", "flights", "that", "arrive", "in", "Aberdeen", "."], "guid": 270}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What are the different ship flags, and how many ships have each?", "sql": "SELECT count(*) ,  flag FROM ship GROUP BY flag", "example": {"db_id": "ship_1", "query": "SELECT count(*) ,  flag FROM ship GROUP BY flag", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "flag", "FROM", "ship", "GROUP", "BY", "flag"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "flag", "from", "ship", "group", "by", "flag"], "question": "What are the different ship flags, and how many ships have each?", "question_toks": ["What", "are", "the", "different", "ship", "flags", ",", "and", "how", "many", "ships", "have", "each", "?"], "guid": 271}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which airports do not have departing or arriving flights?", "sql": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "example": {"db_id": "flight_2", "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "query_toks": ["SELECT", "AirportName", "FROM", "Airports", "WHERE", "AirportCode", "NOT", "IN", "(", "SELECT", "SourceAirport", "FROM", "Flights", "UNION", "SELECT", "DestAirport", "FROM", "Flights", ")"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")"], "question": "Which airports do not have departing or arriving flights?", "question_toks": ["Which", "airports", "do", "not", "have", "departing", "or", "arriving", "flights", "?"], "guid": 272}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the names of all aircrafts that are associated with both London Heathrow and Gatwick airports?", "sql": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "example": {"db_id": "aircraft", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "query_toks": ["SELECT", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Airport_Name", "=", "``", "London", "Heathrow", "''", "INTERSECT", "SELECT", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Airport_Name", "=", "``", "London", "Gatwick", "''"], "query_toks_no_value": ["select", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "airport_name", "=", "value", "intersect", "select", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "airport_name", "=", "value"], "question": "What are the names of all aircrafts that are associated with both London Heathrow and Gatwick airports?", "question_toks": ["What", "are", "the", "names", "of", "all", "aircrafts", "that", "are", "associated", "with", "both", "London", "Heathrow", "and", "Gatwick", "airports", "?"], "guid": 273}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What are the names of all pilots listed by descending age?", "sql": "SELECT Name FROM pilot ORDER BY Age DESC", "example": {"db_id": "aircraft", "query": "SELECT Name FROM pilot ORDER BY Age DESC", "query_toks": ["SELECT", "Name", "FROM", "pilot", "ORDER", "BY", "Age", "DESC"], "query_toks_no_value": ["select", "name", "from", "pilot", "order", "by", "age", "desc"], "question": "What are the names of all pilots listed by descending age?", "question_toks": ["What", "are", "the", "names", "of", "all", "pilots", "listed", "by", "descending", "age", "?"], "guid": 274}}
{"text": "airport: id, City, Country, IATA, ICAO, name; operate_company: id, name, Type, Principal_activities, Incorporated_in, Group_Equity_Shareholding; flight: id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id | Which of the airport names contains the word 'international'?", "sql": "SELECT name FROM airport WHERE name LIKE '%international%'", "example": {"db_id": "flight_company", "query": "SELECT name FROM airport WHERE name LIKE '%international%'", "query_toks": ["SELECT", "name", "FROM", "airport", "WHERE", "name", "LIKE", "'", "%", "international", "%", "'"], "query_toks_no_value": ["select", "name", "from", "airport", "where", "name", "like", "value"], "question": "Which of the airport names contains the word 'international'?", "question_toks": ["Which", "of", "the", "airport", "names", "contains", "the", "word", "'international", "'", "?"], "guid": 275}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the busiest destination airport that runs most number of routes in China.", "sql": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "WHERE", "T1.country", "=", "'China", "'", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "where", "t1", ".", "country", "=", "value", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the busiest destination airport that runs most number of routes in China.", "question_toks": ["Find", "the", "busiest", "destination", "airport", "that", "runs", "most", "number", "of", "routes", "in", "China", "."], "guid": 276}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Which rank is the most common among captains?", "sql": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "ship_1", "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "rank", "FROM", "captain", "GROUP", "BY", "rank", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "rank", "from", "captain", "group", "by", "rank", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which rank is the most common among captains?", "question_toks": ["Which", "rank", "is", "the", "most", "common", "among", "captains", "?"], "guid": 277}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Which countries has the most number of airlines?", "sql": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "country", "FROM", "airlines", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "airlines", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which countries has the most number of airlines?", "question_toks": ["Which", "countries", "has", "the", "most", "number", "of", "airlines", "?"], "guid": 278}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show names for all employees with salary more than the average.", "sql": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)", "example": {"db_id": "flight_1", "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)", "query_toks": ["SELECT", "name", "FROM", "Employee", "WHERE", "salary", ">", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "Employee", ")"], "query_toks_no_value": ["select", "name", "from", "employee", "where", "salary", ">", "(", "select", "avg", "(", "salary", ")", "from", "employee", ")"], "question": "Show names for all employees with salary more than the average.", "question_toks": ["Show", "names", "for", "all", "employees", "with", "salary", "more", "than", "the", "average", "."], "guid": 279}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | How many routes end in a Canadian airport?", "sql": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "WHERE", "country", "=", "'Canada", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "where", "country", "=", "value"], "question": "How many routes end in a Canadian airport?", "question_toks": ["How", "many", "routes", "end", "in", "a", "Canadian", "airport", "?"], "guid": 280}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What are the names and flags of ships that do not have a captain with the rank of Midshipman?", "sql": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "example": {"db_id": "ship_1", "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "query_toks": ["SELECT", "name", ",", "flag", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", "WHERE", "rank", "=", "'Midshipman", "'", ")"], "query_toks_no_value": ["select", "name", ",", "flag", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", "where", "rank", "=", "value", ")"], "question": "What are the names and flags of ships that do not have a captain with the rank of Midshipman?", "question_toks": ["What", "are", "the", "names", "and", "flags", "of", "ships", "that", "do", "not", "have", "a", "captain", "with", "the", "rank", "of", "Midshipman", "?"], "guid": 281}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the number of routes that have destination John F Kennedy International Airport.", "sql": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "WHERE", "T1.name", "=", "'John", "F", "Kennedy", "International", "Airport", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "where", "t1", ".", "name", "=", "value"], "question": "Find the number of routes that have destination John F Kennedy International Airport.", "question_toks": ["Find", "the", "number", "of", "routes", "that", "have", "destination", "John", "F", "Kennedy", "International", "Airport", "."], "guid": 282}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What are the ranks of captains that have no captain that are in the Third-rate ship of the line class?", "sql": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'", "example": {"db_id": "ship_1", "query": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'", "query_toks": ["SELECT", "rank", "FROM", "captain", "EXCEPT", "SELECT", "rank", "FROM", "captain", "WHERE", "CLASS", "=", "'Third-rate", "ship", "of", "the", "line", "'"], "query_toks_no_value": ["select", "rank", "from", "captain", "except", "select", "rank", "from", "captain", "where", "class", "=", "value"], "question": "What are the ranks of captains that have no captain that are in the Third-rate ship of the line class?", "question_toks": ["What", "are", "the", "ranks", "of", "captains", "that", "have", "no", "captain", "that", "are", "in", "the", "Third-rate", "ship", "of", "the", "line", "class", "?"], "guid": 283}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.", "sql": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'", "example": {"db_id": "flight_4", "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "routes", "AS", "T1", "JOIN", "airports", "AS", "T2", "ON", "T1.dst_apid", "=", "T2.apid", "JOIN", "airlines", "AS", "T3", "ON", "T1.alid", "=", "T3.alid", "WHERE", "T2.country", "=", "'Italy", "'", "AND", "T3.name", "=", "'American", "Airlines", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "routes", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "dst_apid", "=", "t2", ".", "apid", "join", "airlines", "as", "t3", "on", "t1", ".", "alid", "=", "t3", ".", "alid", "where", "t2", ".", "country", "=", "value", "and", "t3", ".", "name", "=", "value"], "question": "Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.", "question_toks": ["Return", "the", "number", "of", "routes", "with", "destination", "airport", "in", "Italy", "operated", "by", "the", "airline", "with", "name", "'American", "Airlines", "'", "."], "guid": 284}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show the id and name of the employee with maximum salary.", "sql": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1", "query_toks": ["SELECT", "eid", ",", "name", "FROM", "Employee", "ORDER", "BY", "salary", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "eid", ",", "name", "from", "employee", "order", "by", "salary", "desc", "limit", "value"], "question": "Show the id and name of the employee with maximum salary.", "question_toks": ["Show", "the", "id", "and", "name", "of", "the", "employee", "with", "maximum", "salary", "."], "guid": 285}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the aircraft name for the flight with number 99", "sql": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99", "example": {"db_id": "flight_1", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99", "query_toks": ["SELECT", "T2.name", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "WHERE", "T1.flno", "=", "99"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "where", "t1", ".", "flno", "=", "value"], "question": "What is the aircraft name for the flight with number 99", "question_toks": ["What", "is", "the", "aircraft", "name", "for", "the", "flight", "with", "number", "99"], "guid": 286}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What are the type and nationality of ships?", "sql": "SELECT TYPE ,  Nationality FROM ship", "example": {"db_id": "ship_mission", "query": "SELECT TYPE ,  Nationality FROM ship", "query_toks": ["SELECT", "TYPE", ",", "Nationality", "FROM", "ship"], "query_toks_no_value": ["select", "type", ",", "nationality", "from", "ship"], "question": "What are the type and nationality of ships?", "question_toks": ["What", "are", "the", "type", "and", "nationality", "of", "ships", "?"], "guid": 287}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What are the destinations and number of flights to each one?", "sql": "SELECT destination ,  count(*) FROM Flight GROUP BY destination", "example": {"db_id": "flight_1", "query": "SELECT destination ,  count(*) FROM Flight GROUP BY destination", "query_toks": ["SELECT", "destination", ",", "count", "(", "*", ")", "FROM", "Flight", "GROUP", "BY", "destination"], "query_toks_no_value": ["select", "destination", ",", "count", "(", "*", ")", "from", "flight", "group", "by", "destination"], "question": "What are the destinations and number of flights to each one?", "question_toks": ["What", "are", "the", "destinations", "and", "number", "of", "flights", "to", "each", "one", "?"], "guid": 288}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000?", "sql": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.distance", ">", "5000", "GROUP", "BY", "T1.eid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "distance", ">", "value", "group", "by", "t1", ".", "eid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000?", "question_toks": ["What", "is", "the", "salary", "and", "name", "of", "the", "employee", "who", "has", "the", "most", "number", "of", "certificates", "on", "aircrafts", "with", "distance", "more", "than", "5000", "?"], "guid": 289}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the number of routes for each source airport and the airport name.", "sql": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name", "example": {"db_id": "flight_4", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "group", "by", "t1", ".", "name"], "question": "Find the number of routes for each source airport and the airport name.", "question_toks": ["Find", "the", "number", "of", "routes", "for", "each", "source", "airport", "and", "the", "airport", "name", "."], "guid": 290}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | How many employees do we have?", "sql": "SELECT count(*) FROM Employee", "example": {"db_id": "flight_1", "query": "SELECT count(*) FROM Employee", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Employee"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "employee"], "question": "How many employees do we have?", "question_toks": ["How", "many", "employees", "do", "we", "have", "?"], "guid": 291}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | List the names of aircrafts and that won matches at least twice.", "sql": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2", "example": {"db_id": "aircraft", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft", "GROUP", "BY", "T2.Winning_Aircraft", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft", "group", "by", "t2", ".", "winning_aircraft", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "List the names of aircrafts and that won matches at least twice.", "question_toks": ["List", "the", "names", "of", "aircrafts", "and", "that", "won", "matches", "at", "least", "twice", "."], "guid": 292}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | What is the name, type, and flag of the ship that was built in the most recent year?", "sql": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1", "example": {"db_id": "ship_1", "query": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "TYPE", ",", "flag", "FROM", "ship", "ORDER", "BY", "built_year", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "type", ",", "flag", "from", "ship", "order", "by", "built_year", "desc", "limit", "value"], "question": "What is the name, type, and flag of the ship that was built in the most recent year?", "question_toks": ["What", "is", "the", "name", ",", "type", ",", "and", "flag", "of", "the", "ship", "that", "was", "built", "in", "the", "most", "recent", "year", "?"], "guid": 293}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What are flight numbers of flights departing from Airport \"APG\"?", "sql": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "example": {"db_id": "flight_2", "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "FlightNo", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "value"], "question": "What are flight numbers of flights departing from Airport \"APG\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "departing", "from", "Airport", "``", "APG", "''", "?"], "guid": 294}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | Show all destinations and the number of flights to each destination.", "sql": "SELECT destination ,  count(*) FROM Flight GROUP BY destination", "example": {"db_id": "flight_1", "query": "SELECT destination ,  count(*) FROM Flight GROUP BY destination", "query_toks": ["SELECT", "destination", ",", "count", "(", "*", ")", "FROM", "Flight", "GROUP", "BY", "destination"], "query_toks_no_value": ["select", "destination", ",", "count", "(", "*", ")", "from", "flight", "group", "by", "destination"], "question": "Show all destinations and the number of flights to each destination.", "question_toks": ["Show", "all", "destinations", "and", "the", "number", "of", "flights", "to", "each", "destination", "."], "guid": 295}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the flight number and its distance for the one with the maximum price?", "sql": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1", "query_toks": ["SELECT", "flno", ",", "distance", "FROM", "Flight", "ORDER", "BY", "price", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "flno", ",", "distance", "from", "flight", "order", "by", "price", "desc", "limit", "value"], "question": "What is the flight number and its distance for the one with the maximum price?", "question_toks": ["What", "is", "the", "flight", "number", "and", "its", "distance", "for", "the", "one", "with", "the", "maximum", "price", "?"], "guid": 296}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Give the flight numbers of flights leaving from Aberdeen.", "sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "example": {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Give the flight numbers of flights leaving from Aberdeen.", "question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "leaving", "from", "Aberdeen", "."], "guid": 297}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What is the abbreviation of the airilne has the fewest flights and what country is it in?", "sql": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "example": {"db_id": "flight_2", "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.Abbreviation", ",", "T1.Country", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "abbreviation", ",", "t1", ".", "country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?", "question_toks": ["What", "is", "the", "abbreviation", "of", "the", "airilne", "has", "the", "fewest", "flights", "and", "what", "country", "is", "it", "in", "?"], "guid": 298}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the name and salary for employee with id 242518965?", "sql": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965", "example": {"db_id": "flight_1", "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "Employee", "WHERE", "eid", "=", "242518965"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "employee", "where", "eid", "=", "value"], "question": "What is the name and salary for employee with id 242518965?", "question_toks": ["What", "is", "the", "name", "and", "salary", "for", "employee", "with", "id", "242518965", "?"], "guid": 299}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the maximum elevation of all airports in the country of Iceland?", "sql": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'", "example": {"db_id": "flight_4", "query": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'", "query_toks": ["SELECT", "max", "(", "elevation", ")", "FROM", "airports", "WHERE", "country", "=", "'Iceland", "'"], "query_toks_no_value": ["select", "max", "(", "elevation", ")", "from", "airports", "where", "country", "=", "value"], "question": "What is the maximum elevation of all airports in the country of Iceland?", "question_toks": ["What", "is", "the", "maximum", "elevation", "of", "all", "airports", "in", "the", "country", "of", "Iceland", "?"], "guid": 300}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | Show the names of pilots from team \"Bradley\" or \"Fordham\".", "sql": "SELECT Pilot_name FROM pilot WHERE Team  =  \"Bradley\" OR Team  =  \"Fordham\"", "example": {"db_id": "pilot_record", "query": "SELECT Pilot_name FROM pilot WHERE Team  =  \"Bradley\" OR Team  =  \"Fordham\"", "query_toks": ["SELECT", "Pilot_name", "FROM", "pilot", "WHERE", "Team", "=", "``", "Bradley", "''", "OR", "Team", "=", "``", "Fordham", "''"], "query_toks_no_value": ["select", "pilot_name", "from", "pilot", "where", "team", "=", "value", "or", "team", "=", "value"], "question": "Show the names of pilots from team \"Bradley\" or \"Fordham\".", "question_toks": ["Show", "the", "names", "of", "pilots", "from", "team", "``", "Bradley", "''", "or", "``", "Fordham", "''", "."], "guid": 301}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | How many airports are there per city in the United States? Order the cities by decreasing number of airports.", "sql": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC", "example": {"db_id": "flight_4", "query": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", "GROUP", "BY", "city", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city", "from", "airports", "where", "country", "=", "value", "group", "by", "city", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many airports are there per city in the United States? Order the cities by decreasing number of airports.", "question_toks": ["How", "many", "airports", "are", "there", "per", "city", "in", "the", "United", "States", "?", "Order", "the", "cities", "by", "decreasing", "number", "of", "airports", "."], "guid": 302}}
{"text": "pilot: Pilot_Id, Name, Age; aircraft: Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading; match: Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft; airport: Airport_ID, Airport_Name, Total_Passengers, %_Change_2007, International_Passengers, Domestic_Passengers, Transit_Passengers, Aircraft_Movements, Freight_Metric_Tonnes; airport_aircraft: ID, Airport_ID, Aircraft_ID | What is the location and name of the winning aircraft?", "sql": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft", "example": {"db_id": "aircraft", "query": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft", "query_toks": ["SELECT", "T2.Location", ",", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft"], "query_toks_no_value": ["select", "t2", ".", "location", ",", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft"], "question": "What is the location and name of the winning aircraft?", "question_toks": ["What", "is", "the", "location", "and", "name", "of", "the", "winning", "aircraft", "?"], "guid": 303}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | What are the types and nationalities of every ship?", "sql": "SELECT TYPE ,  Nationality FROM ship", "example": {"db_id": "ship_mission", "query": "SELECT TYPE ,  Nationality FROM ship", "query_toks": ["SELECT", "TYPE", ",", "Nationality", "FROM", "ship"], "query_toks_no_value": ["select", "type", ",", "nationality", "from", "ship"], "question": "What are the types and nationalities of every ship?", "question_toks": ["What", "are", "the", "types", "and", "nationalities", "of", "every", "ship", "?"], "guid": 304}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the minimum, average, and maximum distance of all aircrafts.", "sql": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft", "example": {"db_id": "flight_1", "query": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft", "query_toks": ["SELECT", "min", "(", "distance", ")", ",", "avg", "(", "distance", ")", ",", "max", "(", "distance", ")", "FROM", "Aircraft"], "query_toks_no_value": ["select", "min", "(", "distance", ")", ",", "avg", "(", "distance", ")", ",", "max", "(", "distance", ")", "from", "aircraft"], "question": "What is the minimum, average, and maximum distance of all aircrafts.", "question_toks": ["What", "is", "the", "minimum", ",", "average", ",", "and", "maximum", "distance", "of", "all", "aircrafts", "."], "guid": 305}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the name of the airport with the most number of routes that start in China?", "sql": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "flight_4", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "WHERE", "T1.country", "=", "'China", "'", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "where", "t1", ".", "country", "=", "value", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the airport with the most number of routes that start in China?", "question_toks": ["What", "is", "the", "name", "of", "the", "airport", "with", "the", "most", "number", "of", "routes", "that", "start", "in", "China", "?"], "guid": 306}}
{"text": "captain: Captain_ID, Name, Ship_ID, age, Class, Rank; Ship: Ship_ID, Name, Type, Built_Year, Class, Flag | Which classes have more than two captains?", "sql": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2", "example": {"db_id": "ship_1", "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2", "query_toks": ["SELECT", "CLASS", "FROM", "captain", "GROUP", "BY", "CLASS", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "class", "from", "captain", "group", "by", "class", "having", "count", "(", "*", ")", ">", "value"], "question": "Which classes have more than two captains?", "question_toks": ["Which", "classes", "have", "more", "than", "two", "captains", "?"], "guid": 307}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many airlines do we have?", "sql": "SELECT count(*) FROM AIRLINES", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines"], "question": "How many airlines do we have?", "question_toks": ["How", "many", "airlines", "do", "we", "have", "?"], "guid": 308}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.", "sql": "SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality", "example": {"db_id": "pilot_record", "query": "SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "pilot", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "pilot", "group", "by", "nationality"], "question": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.", "question_toks": ["What", "are", "the", "different", "nationalities", "of", "pilots", "?", "Show", "each", "nationality", "and", "the", "number", "of", "pilots", "of", "each", "nationality", "."], "guid": 309}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | Show all train names and times in stations in London in descending order by train time.", "sql": "SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'London' ORDER BY T3.time DESC", "example": {"db_id": "train_station", "query": "SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'London' ORDER BY T3.time DESC", "query_toks": ["SELECT", "T3.name", ",", "T3.time", "FROM", "train_station", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.station_id", "=", "T2.station_id", "JOIN", "train", "AS", "T3", "ON", "T3.train_id", "=", "T1.train_id", "WHERE", "T2.location", "=", "'London", "'", "ORDER", "BY", "T3.time", "DESC"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t3", ".", "time", "from", "train_station", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "station_id", "join", "train", "as", "t3", "on", "t3", ".", "train_id", "=", "t1", ".", "train_id", "where", "t2", ".", "location", "=", "value", "order", "by", "t3", ".", "time", "desc"], "question": "Show all train names and times in stations in London in descending order by train time.", "question_toks": ["Show", "all", "train", "names", "and", "times", "in", "stations", "in", "London", "in", "descending", "order", "by", "train", "time", "."], "guid": 310}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | What is the total number of routes for each country and airline in that country?", "sql": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name", "example": {"db_id": "flight_4", "query": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name", "query_toks": ["SELECT", "T1.country", ",", "T1.name", ",", "count", "(", "*", ")", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T1.country", ",", "T1.name"], "query_toks_no_value": ["select", "t1", ".", "country", ",", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t1", ".", "country", ",", "t1", ".", "name"], "question": "What is the total number of routes for each country and airline in that country?", "question_toks": ["What", "is", "the", "total", "number", "of", "routes", "for", "each", "country", "and", "airline", "in", "that", "country", "?"], "guid": 311}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which airline has abbreviation 'UAL'?", "sql": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "example": {"db_id": "flight_2", "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "query_toks": ["SELECT", "Airline", "FROM", "AIRLINES", "WHERE", "Abbreviation", "=", "``", "UAL", "''"], "query_toks_no_value": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "value"], "question": "Which airline has abbreviation 'UAL'?", "question_toks": ["Which", "airline", "has", "abbreviation", "'UAL", "'", "?"], "guid": 312}}
{"text": "station: Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms; train: Train_ID, Name, Time, Service; train_station: Train_ID, Station_ID | What is the average and maximum number of total passengers for train stations in London or Glasgow?", "sql": "SELECT avg(total_passengers) ,  max(total_passengers) FROM station WHERE LOCATION  =  'London' OR LOCATION  =  'Glasgow'", "example": {"db_id": "train_station", "query": "SELECT avg(total_passengers) ,  max(total_passengers) FROM station WHERE LOCATION  =  'London' OR LOCATION  =  'Glasgow'", "query_toks": ["SELECT", "avg", "(", "total_passengers", ")", ",", "max", "(", "total_passengers", ")", "FROM", "station", "WHERE", "LOCATION", "=", "'London", "'", "OR", "LOCATION", "=", "'Glasgow", "'"], "query_toks_no_value": ["select", "avg", "(", "total_passengers", ")", ",", "max", "(", "total_passengers", ")", "from", "station", "where", "location", "=", "value", "or", "location", "=", "value"], "question": "What is the average and maximum number of total passengers for train stations in London or Glasgow?", "question_toks": ["What", "is", "the", "average", "and", "maximum", "number", "of", "total", "passengers", "for", "train", "stations", "in", "London", "or", "Glasgow", "?"], "guid": 313}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | How many 'United Airlines' flights depart from Airport 'AHD'?", "sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "example": {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "sourceairport", "=", "value"], "question": "How many 'United Airlines' flights depart from Airport 'AHD'?", "question_toks": ["How", "many", "'United", "Airlines", "'", "flights", "depart", "from", "Airport", "'AHD", "'", "?"], "guid": 314}}
{"text": "railway: Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber; train: Train_ID, Train_Num, Name, From, Arrival, Railway_ID; manager: Manager_ID, Name, Country, Working_year_starts, Age, Level; railway_manage: Railway_ID, Manager_ID, From_Year | List the wheels and locations of the railways.", "sql": "SELECT Wheels ,  LOCATION FROM railway", "example": {"db_id": "railway", "query": "SELECT Wheels ,  LOCATION FROM railway", "query_toks": ["SELECT", "Wheels", ",", "LOCATION", "FROM", "railway"], "query_toks_no_value": ["select", "wheels", ",", "location", "from", "railway"], "question": "List the wheels and locations of the railways.", "question_toks": ["List", "the", "wheels", "and", "locations", "of", "the", "railways", "."], "guid": 315}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What are airlines that have flights arriving at airport 'AHD'?", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.DestAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "destairport", "=", "value"], "question": "What are airlines that have flights arriving at airport 'AHD'?", "question_toks": ["What", "are", "airlines", "that", "have", "flights", "arriving", "at", "airport", "'AHD", "'", "?"], "guid": 316}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | List the name of ships whose nationality is not \"United States\".", "sql": "SELECT Name FROM ship WHERE Nationality != \"United States\"", "example": {"db_id": "ship_mission", "query": "SELECT Name FROM ship WHERE Nationality != \"United States\"", "query_toks": ["SELECT", "Name", "FROM", "ship", "WHERE", "Nationality", "!", "=", "``", "United", "States", "''"], "query_toks_no_value": ["select", "name", "from", "ship", "where", "nationality", "!", "=", "value"], "question": "List the name of ships whose nationality is not \"United States\".", "question_toks": ["List", "the", "name", "of", "ships", "whose", "nationality", "is", "not", "``", "United", "States", "''", "."], "guid": 317}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Give the city and country for the Alton airport.", "sql": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "example": {"db_id": "flight_2", "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "query_toks": ["SELECT", "City", ",", "Country", "FROM", "AIRPORTS", "WHERE", "AirportName", "=", "``", "Alton", "''"], "query_toks_no_value": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "value"], "question": "Give the city and country for the Alton airport.", "question_toks": ["Give", "the", "city", "and", "country", "for", "the", "Alton", "airport", "."], "guid": 318}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Which airlines have departing flights from both APG and CVO airports?", "sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "example": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''", "INTERSECT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "intersect", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Which airlines have departing flights from both APG and CVO airports?", "question_toks": ["Which", "airlines", "have", "departing", "flights", "from", "both", "APG", "and", "CVO", "airports", "?"], "guid": 319}}
{"text": "mission: Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate; ship: Ship_ID, Name, Type, Nationality, Tonnage | Show codes and fates of missions, and names of ships involved.", "sql": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID", "example": {"db_id": "ship_mission", "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID", "query_toks": ["SELECT", "T1.Code", ",", "T1.Fate", ",", "T2.Name", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID"], "query_toks_no_value": ["select", "t1", ".", "code", ",", "t1", ".", "fate", ",", "t2", ".", "name", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id"], "question": "Show codes and fates of missions, and names of ships involved.", "question_toks": ["Show", "codes", "and", "fates", "of", "missions", ",", "and", "names", "of", "ships", "involved", "."], "guid": 320}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the number of routes and airport name for each source airport, order the results by decreasing number of routes.", "sql": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC", "example": {"db_id": "flight_4", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc"], "question": "Find the number of routes and airport name for each source airport, order the results by decreasing number of routes.", "question_toks": ["Find", "the", "number", "of", "routes", "and", "airport", "name", "for", "each", "source", "airport", ",", "order", "the", "results", "by", "decreasing", "number", "of", "routes", "."], "guid": 321}}
{"text": "flight: flno, origin, destination, distance, departure_date, arrival_date, price, aid; aircraft: aid, name, distance; employee: eid, name, salary; certificate: eid, aid | What is the id and name of the aircraft that can cover the maximum distance?", "sql": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1", "example": {"db_id": "flight_1", "query": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1", "query_toks": ["SELECT", "aid", ",", "name", "FROM", "Aircraft", "ORDER", "BY", "distance", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "aid", ",", "name", "from", "aircraft", "order", "by", "distance", "desc", "limit", "value"], "question": "What is the id and name of the aircraft that can cover the maximum distance?", "question_toks": ["What", "is", "the", "id", "and", "name", "of", "the", "aircraft", "that", "can", "cover", "the", "maximum", "distance", "?"], "guid": 322}}
{"text": "routes: rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare; airports: apid, name, city, country, x, y, elevation, iata, icao; airlines: alid, name, iata, icao, callsign, country, active | Find the name of the airport in the city of Goroka.", "sql": "SELECT name FROM airports WHERE city  =  'Goroka'", "example": {"db_id": "flight_4", "query": "SELECT name FROM airports WHERE city  =  'Goroka'", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "city", "=", "'Goroka", "'"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "city", "=", "value"], "question": "Find the name of the airport in the city of Goroka.", "question_toks": ["Find", "the", "name", "of", "the", "airport", "in", "the", "city", "of", "Goroka", "."], "guid": 323}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | What are the airline names and abbreviations for airlines in the USA?", "sql": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "example": {"db_id": "flight_2", "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "Airline", ",", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "value"], "question": "What are the airline names and abbreviations for airlines in the USA?", "question_toks": ["What", "are", "the", "airline", "names", "and", "abbreviations", "for", "airlines", "in", "the", "USA", "?"], "guid": 324}}
{"text": "airlines: uid, Airline, Abbreviation, Country; airports: City, AirportCode, AirportName, Country, CountryAbbrev; flights: Airline, FlightNo, SourceAirport, DestAirport | Give the code of the airport with the least flights.", "sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "example": {"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Give the code of the airport with the least flights.", "question_toks": ["Give", "the", "code", "of", "the", "airport", "with", "the", "least", "flights", "."], "guid": 325}}
{"text": "aircraft: Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion; pilot: Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team; pilot_record: Record_ID, Pilot_ID, Aircraft_ID, Date | Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000.", "sql": "SELECT POSITION FROM pilot WHERE Join_Year\t <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year\t >  2005", "example": {"db_id": "pilot_record", "query": "SELECT POSITION FROM pilot WHERE Join_Year\t <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year\t >  2005", "query_toks": ["SELECT", "POSITION", "FROM", "pilot", "WHERE", "Join_Year", "<", "2000", "INTERSECT", "SELECT", "POSITION", "FROM", "pilot", "WHERE", "Join_Year", ">", "2005"], "query_toks_no_value": ["select", "position", "from", "pilot", "where", "join_year", "<", "value", "intersect", "select", "position", "from", "pilot", "where", "join_year", ">", "value"], "question": "Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000.", "question_toks": ["Show", "the", "pilot", "positions", "that", "have", "both", "pilots", "joining", "after", "year", "2005", "and", "pilots", "joining", "before", "2000", "."], "guid": 326}}