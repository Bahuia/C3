{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Which tourist attractions are related to royal family? Tell me their details and how we can get there.", "sql": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Royal_Family_Details", ",", "T2.How_to_Get_There", "FROM", "ROYAL_FAMILY", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Royal_Family_ID", "=", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "royal_family_details", ",", "t2", ".", "how_to_get_there", "from", "royal_family", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "royal_family_id", "=", "t2", ".", "tourist_attraction_id"], "question": "Which tourist attractions are related to royal family? Tell me their details and how we can get there.", "question_toks": ["Which", "tourist", "attractions", "are", "related", "to", "royal", "family", "?", "Tell", "me", "their", "details", "and", "how", "we", "can", "get", "there", "."], "guid": 7248}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What is the name of the staff that is in charge of the attraction named \"US museum\"?", "sql": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\"", "query_toks": ["SELECT", "T1.Name", "FROM", "STAFF", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.Name", "=", "``", "US", "museum", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "staff", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "name", "=", "value"], "question": "What is the name of the staff that is in charge of the attraction named \"US museum\"?", "question_toks": ["What", "is", "the", "name", "of", "the", "staff", "that", "is", "in", "charge", "of", "the", "attraction", "named", "``", "US", "museum", "''", "?"], "guid": 7249}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where are some good places for arabic in mountain view ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where are some good places for arabic in mountain view ?", "question_toks": ["where", "are", "some", "good", "places", "for", "arabic", "in", "mountain", "view", "?"], "guid": 7250}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many people reviewed the restaurant \" Texas de Brazil \" in Dallas Texas ?", "sql": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t1.name  =  \"Texas de Brazil\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t1.name  =  \"Texas de Brazil\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t4.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "review", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t4", "ON", "t4.user_id", "=", "t3.user_id", "WHERE", "t1.city", "=", "``", "Dallas", "''", "AND", "t1.name", "=", "``", "Texas", "de", "Brazil", "''", "AND", "t1.state", "=", "``", "Texas", "''", "AND", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t4", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "review", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t4", "on", "t4", ".", "user_id", "=", "t3", ".", "user_id", "where", "t1", ".", "city", "=", "value", "and", "t1", ".", "name", "=", "value", "and", "t1", ".", "state", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "How many people reviewed the restaurant \" Texas de Brazil \" in Dallas Texas ?", "question_toks": ["How", "many", "people", "reviewed", "the", "restaurant", "``", "Texas", "de", "Brazil", "``", "in", "Dallas", "Texas", "?"], "guid": 7251}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Which restaurant in Dallas were reviewed by user Patrick ?", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"restaurant\" AND t4.name  =  \"Patrick\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"restaurant\" AND t4.name  =  \"Patrick\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "review", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t4", "ON", "t4.user_id", "=", "t3.user_id", "WHERE", "t1.city", "=", "``", "Dallas", "''", "AND", "t2.category_name", "=", "``", "restaurant", "''", "AND", "t4.name", "=", "``", "Patrick", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "review", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t4", "on", "t4", ".", "user_id", "=", "t3", ".", "user_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t4", ".", "name", "=", "value"], "question": "Which restaurant in Dallas were reviewed by user Patrick ?", "question_toks": ["Which", "restaurant", "in", "Dallas", "were", "reviewed", "by", "user", "Patrick", "?"], "guid": 7252}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can i eat some good french food in the yosemite and mono lake area ?", "sql": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where can i eat some good french food in the yosemite and mono lake area ?", "question_toks": ["where", "can", "i", "eat", "some", "good", "french", "food", "in", "the", "yosemite", "and", "mono", "lake", "area", "?"], "guid": 7253}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all users who have written tips about businesses in Dallas", "sql": "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Dallas\";", "example": {"db_id": "yelp", "query": "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Dallas\";", "query_toks": ["SELECT", "t3.name", "FROM", "tip", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t3", "ON", "t3.user_id", "=", "t2.user_id", "WHERE", "t1.city", "=", "``", "Dallas", "''", ";"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "tip", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t3", "on", "t3", ".", "user_id", "=", "t2", ".", "user_id", "where", "t1", ".", "city", "=", "value"], "question": "Find all users who have written tips about businesses in Dallas", "question_toks": ["Find", "all", "users", "who", "have", "written", "tips", "about", "businesses", "in", "Dallas"], "guid": 7254}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Tell me the price ranges for all the hotels.", "sql": "SELECT price_range FROM HOTELS", "example": {"db_id": "cre_Theme_park", "query": "SELECT price_range FROM HOTELS", "query_toks": ["SELECT", "price_range", "FROM", "HOTELS"], "query_toks_no_value": ["select", "price_range", "from", "hotels"], "question": "Tell me the price ranges for all the hotels.", "question_toks": ["Tell", "me", "the", "price", "ranges", "for", "all", "the", "hotels", "."], "guid": 7255}}
{"text": "shop: Shop_ID, Address, Num_of_staff, Score, Open_Year; member: Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address; happy_hour: HH_ID, Shop_ID, Month, Num_of_shaff_in_charge; happy_hour_member: HH_ID, Member_ID, Total_amount | What are the average score and average staff number of all shops?", "sql": "SELECT avg(num_of_staff) ,  avg(score) FROM shop", "example": {"db_id": "coffee_shop", "query": "SELECT avg(num_of_staff) ,  avg(score) FROM shop", "query_toks": ["SELECT", "avg", "(", "num_of_staff", ")", ",", "avg", "(", "score", ")", "FROM", "shop"], "query_toks_no_value": ["select", "avg", "(", "num_of_staff", ")", ",", "avg", "(", "score", ")", "from", "shop"], "question": "What are the average score and average staff number of all shops?", "question_toks": ["What", "are", "the", "average", "score", "and", "average", "staff", "number", "of", "all", "shops", "?"], "guid": 7256}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | find the id, name and age for visitors who visited some museums more than once.", "sql": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1", "example": {"db_id": "museum_visit", "query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1", "query_toks": ["SELECT", "t1.id", ",", "t1.name", ",", "t1.age", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "GROUP", "BY", "t1.id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", ",", "t1", ".", "age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "find the id, name and age for visitors who visited some museums more than once.", "question_toks": ["find", "the", "id", ",", "name", "and", "age", "for", "visitors", "who", "visited", "some", "museums", "more", "than", "once", "."], "guid": 7257}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Return the detail of the location named \"UK Gallery\".", "sql": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "query_toks": ["SELECT", "Other_Details", "FROM", "LOCATIONS", "WHERE", "Location_Name", "=", "``", "UK", "Gallery", "''"], "query_toks_no_value": ["select", "other_details", "from", "locations", "where", "location_name", "=", "value"], "question": "Return the detail of the location named \"UK Gallery\".", "question_toks": ["Return", "the", "detail", "of", "the", "location", "named", "``", "UK", "Gallery", "''", "."], "guid": 7258}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What are the name of rooms booked by customers whose first name has \"ROY\" in part?", "sql": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'", "example": {"db_id": "inn_1", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'", "query_toks": ["SELECT", "T2.roomName", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "WHERE", "firstname", "LIKE", "'", "%", "ROY", "%", "'"], "query_toks_no_value": ["select", "t2", ".", "roomname", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "where", "firstname", "like", "value"], "question": "What are the name of rooms booked by customers whose first name has \"ROY\" in part?", "question_toks": ["What", "are", "the", "name", "of", "rooms", "booked", "by", "customers", "whose", "first", "name", "has", "``", "ROY", "''", "in", "part", "?"], "guid": 7259}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What are the names of rooms that have either king or queen bed?", "sql": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";", "example": {"db_id": "inn_1", "query": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "WHERE", "bedType", "=", "``", "King", "''", "OR", "bedType", "=", "``", "Queen", "''", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "bedtype", "=", "value", "or", "bedtype", "=", "value"], "question": "What are the names of rooms that have either king or queen bed?", "question_toks": ["What", "are", "the", "names", "of", "rooms", "that", "have", "either", "king", "or", "queen", "bed", "?"], "guid": 7260}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | Show the different statuses and the numbers of roller coasters for each status.", "sql": "SELECT Status ,  COUNT(*) FROM roller_coaster GROUP BY Status", "example": {"db_id": "roller_coaster", "query": "SELECT Status ,  COUNT(*) FROM roller_coaster GROUP BY Status", "query_toks": ["SELECT", "Status", ",", "COUNT", "(", "*", ")", "FROM", "roller_coaster", "GROUP", "BY", "Status"], "query_toks_no_value": ["select", "status", ",", "count", "(", "*", ")", "from", "roller_coaster", "group", "by", "status"], "question": "Show the different statuses and the numbers of roller coasters for each status.", "question_toks": ["Show", "the", "different", "statuses", "and", "the", "numbers", "of", "roller", "coasters", "for", "each", "status", "."], "guid": 7261}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many Target are there in \" Los Angeles \" ?", "sql": "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Target\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Target\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "business_id", ")", "FROM", "business", "WHERE", "city", "=", "``", "Los", "Angeles", "''", "AND", "name", "=", "``", "Target", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "business_id", ")", "from", "business", "where", "city", "=", "value", "and", "name", "=", "value"], "question": "How many Target are there in \" Los Angeles \" ?", "question_toks": ["How", "many", "Target", "are", "there", "in", "``", "Los", "Angeles", "``", "?"], "guid": 7262}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many escape games exist in Madison", "sql": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Madison", "''", "AND", "t2.category_name", "=", "``", "escape", "games", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "How many escape games exist in Madison", "question_toks": ["How", "many", "escape", "games", "exist", "in", "Madison"], "guid": 7263}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Find all the locations whose names contain the word \"film\".", "sql": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"", "query_toks": ["SELECT", "Location_Name", "FROM", "LOCATIONS", "WHERE", "Location_Name", "LIKE", "``", "%", "film", "%", "''"], "query_toks_no_value": ["select", "location_name", "from", "locations", "where", "location_name", "like", "value"], "question": "Find all the locations whose names contain the word \"film\".", "question_toks": ["Find", "all", "the", "locations", "whose", "names", "contain", "the", "word", "``", "film", "''", "."], "guid": 7264}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Find all the building full names containing the word \"court\".", "sql": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"", "example": {"db_id": "apartment_rentals", "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"", "query_toks": ["SELECT", "building_full_name", "FROM", "Apartment_Buildings", "WHERE", "building_full_name", "LIKE", "``", "%", "court", "%", "''"], "query_toks_no_value": ["select", "building_full_name", "from", "apartment_buildings", "where", "building_full_name", "like", "value"], "question": "Find all the building full names containing the word \"court\".", "question_toks": ["Find", "all", "the", "building", "full", "names", "containing", "the", "word", "``", "court", "''", "."], "guid": 7265}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "sql": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1", "example": {"db_id": "museum_visit", "query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1", "query_toks": ["SELECT", "t2.visitor_id", ",", "t1.name", ",", "t1.Level_of_membership", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "GROUP", "BY", "t2.visitor_id", "ORDER", "BY", "sum", "(", "t2.Total_spent", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "visitor_id", ",", "t1", ".", "name", ",", "t1", ".", "level_of_membership", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "group", "by", "t2", ".", "visitor_id", "order", "by", "sum", "(", "t2", ".", "total_spent", ")", "desc", "limit", "value"], "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "question_toks": ["What", "are", "the", "id", ",", "name", "and", "membership", "level", "of", "visitors", "who", "have", "spent", "the", "largest", "amount", "of", "money", "in", "total", "in", "all", "museum", "tickets", "?"], "guid": 7266}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what is the best american restaurant in the bay area ?", "sql": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "what is the best american restaurant in the bay area ?", "question_toks": ["what", "is", "the", "best", "american", "restaurant", "in", "the", "bay", "area", "?"], "guid": 7267}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the names of tourist attraction that Alison visited but Rosalind did not visit?", "sql": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\"", "query_toks": ["SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Alison", "''", "EXCEPT", "SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Rosalind", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value", "except", "select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value"], "question": "What are the names of tourist attraction that Alison visited but Rosalind did not visit?", "question_toks": ["What", "are", "the", "names", "of", "tourist", "attraction", "that", "Alison", "visited", "but", "Rosalind", "did", "not", "visit", "?"], "guid": 7268}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the total number of rooms of all apartments with facility code \"Gym\".", "sql": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\"", "example": {"db_id": "apartment_rentals", "query": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\"", "query_toks": ["SELECT", "sum", "(", "T2.room_count", ")", "FROM", "Apartment_Facilities", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T1.facility_code", "=", "``", "Gym", "''"], "query_toks_no_value": ["select", "sum", "(", "t2", ".", "room_count", ")", "from", "apartment_facilities", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t1", ".", "facility_code", "=", "value"], "question": "Show the total number of rooms of all apartments with facility code \"Gym\".", "question_toks": ["Show", "the", "total", "number", "of", "rooms", "of", "all", "apartments", "with", "facility", "code", "``", "Gym", "''", "."], "guid": 7269}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some restaurants good for arabic food on buchanan in san francisco ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some restaurants good for arabic food on buchanan in san francisco ?", "question_toks": ["give", "me", "some", "restaurants", "good", "for", "arabic", "food", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 7270}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the average room count of the apartments that have booking status code \"Provisional\".", "sql": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"", "example": {"db_id": "apartment_rentals", "query": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"", "query_toks": ["SELECT", "avg", "(", "room_count", ")", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T1.booking_status_code", "=", "``", "Provisional", "''"], "query_toks_no_value": ["select", "avg", "(", "room_count", ")", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t1", ".", "booking_status_code", "=", "value"], "question": "Show the average room count of the apartments that have booking status code \"Provisional\".", "question_toks": ["Show", "the", "average", "room", "count", "of", "the", "apartments", "that", "have", "booking", "status", "code", "``", "Provisional", "''", "."], "guid": 7271}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | Which major has between 2 and 30 number of students? List major and the number of students.", "sql": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;", "example": {"db_id": "restaurant_1", "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;", "query_toks": ["SELECT", "Major", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "Major", "HAVING", "count", "(", "Major", ")", "BETWEEN", "2", "AND", "30", ";"], "query_toks_no_value": ["select", "major", ",", "count", "(", "*", ")", "from", "student", "group", "by", "major", "having", "count", "(", "major", ")", "between", "value", "and", "value"], "question": "Which major has between 2 and 30 number of students? List major and the number of students.", "question_toks": ["Which", "major", "has", "between", "2", "and", "30", "number", "of", "students", "?", "List", "major", "and", "the", "number", "of", "students", "."], "guid": 7272}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all states in which there is a Whataburger", "sql": "SELECT state FROM business WHERE name  =  \"Whataburger\";", "example": {"db_id": "yelp", "query": "SELECT state FROM business WHERE name  =  \"Whataburger\";", "query_toks": ["SELECT", "state", "FROM", "business", "WHERE", "name", "=", "``", "Whataburger", "''", ";"], "query_toks_no_value": ["select", "state", "from", "business", "where", "name", "=", "value"], "question": "Find all states in which there is a Whataburger", "question_toks": ["Find", "all", "states", "in", "which", "there", "is", "a", "Whataburger"], "guid": 7273}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | How many available hotels are there in total?", "sql": "SELECT count(*) FROM HOTELS", "example": {"db_id": "cre_Theme_park", "query": "SELECT count(*) FROM HOTELS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "HOTELS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "hotels"], "question": "How many available hotels are there in total?", "question_toks": ["How", "many", "available", "hotels", "are", "there", "in", "total", "?"], "guid": 7274}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | How many times does ROY SWEAZY has reserved a room.", "sql": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";", "example": {"db_id": "inn_1", "query": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Reservations", "WHERE", "FirstName", "=", "``", "ROY", "''", "AND", "LastName", "=", "``", "SWEAZY", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "reservations", "where", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "How many times does ROY SWEAZY has reserved a room.", "question_toks": ["How", "many", "times", "does", "ROY", "SWEAZY", "has", "reserved", "a", "room", "."], "guid": 7275}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Count the number of artists.", "sql": "SELECT count(*) FROM artist", "example": {"db_id": "theme_gallery", "query": "SELECT count(*) FROM artist", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "artist"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "artist"], "question": "Count the number of artists.", "question_toks": ["Count", "the", "number", "of", "artists", "."], "guid": 7276}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Count the number of distinct names associated with the photos.", "sql": "SELECT count(DISTINCT Name) FROM PHOTOS", "example": {"db_id": "cre_Theme_park", "query": "SELECT count(DISTINCT Name) FROM PHOTOS", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Name", ")", "FROM", "PHOTOS"], "query_toks_no_value": ["select", "count", "(", "distinct", "name", ")", "from", "photos"], "question": "Count the number of distinct names associated with the photos.", "question_toks": ["Count", "the", "number", "of", "distinct", "names", "associated", "with", "the", "photos", "."], "guid": 7277}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a jamerican cuisine in san francisco ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.name", "=", "``", "jamerican", "cuisine", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "name", "=", "value"], "question": "where is a jamerican cuisine in san francisco ?", "question_toks": ["where", "is", "a", "jamerican", "cuisine", "in", "san", "francisco", "?"], "guid": 7278}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me the best american in the bay area ?", "sql": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "give me the best american in the bay area ?", "question_toks": ["give", "me", "the", "best", "american", "in", "the", "bay", "area", "?"], "guid": 7279}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what are some good places for arabic on buchanan in san francisco ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good places for arabic on buchanan in san francisco ?", "question_toks": ["what", "are", "some", "good", "places", "for", "arabic", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 7280}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | what is the number of restaurant in Texas", "sql": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.state", "=", "``", "Texas", "''", "AND", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "state", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "what is the number of restaurant in Texas", "question_toks": ["what", "is", "the", "number", "of", "restaurant", "in", "Texas"], "guid": 7281}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some good arabic restaurants in mountain view ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good arabic restaurants in mountain view ?", "question_toks": ["give", "me", "some", "good", "arabic", "restaurants", "in", "mountain", "view", "?"], "guid": 7282}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there?", "sql": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\"", "query_toks": ["SELECT", "T1.Name", ",", "T3.Visit_Date", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Vincent", "''", "OR", "T2.Tourist_Details", "=", "``", "Vivian", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "visit_date", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value", "or", "t2", ".", "tourist_details", "=", "value"], "question": "What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there?", "question_toks": ["What", "are", "the", "names", "of", "the", "tourist", "attractions", "and", "the", "dates", "when", "the", "tourists", "named", "Vincent", "or", "Vivian", "visited", "there", "?"], "guid": 7283}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many businesses are there in the \" Stone Meadows \" neighbourhood in Madison ?", "sql": "SELECT COUNT ( DISTINCT t1.name ) FROM neighbourhood AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.neighbourhood_name  =  \"Stone Meadows\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.name ) FROM neighbourhood AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.neighbourhood_name  =  \"Stone Meadows\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.name", ")", "FROM", "neighbourhood", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Madison", "''", "AND", "t2.neighbourhood_name", "=", "``", "Stone", "Meadows", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", "from", "neighbourhood", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "neighbourhood_name", "=", "value"], "question": "How many businesses are there in the \" Stone Meadows \" neighbourhood in Madison ?", "question_toks": ["How", "many", "businesses", "are", "there", "in", "the", "``", "Stone", "Meadows", "``", "neighbourhood", "in", "Madison", "?"], "guid": 7284}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find the number of reviews on businesses located in \" South Summerlin \" neighbourhood", "sql": "SELECT COUNT ( DISTINCT t3.text ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id JOIN review AS t3 ON t3.business_id  =  t2.business_id WHERE t1.neighbourhood_name  =  \"South Summerlin\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t3.text ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id JOIN review AS t3 ON t3.business_id  =  t2.business_id WHERE t1.neighbourhood_name  =  \"South Summerlin\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t3.text", ")", "FROM", "neighbourhood", "AS", "t1", "JOIN", "business", "AS", "t2", "ON", "t1.business_id", "=", "t2.business_id", "JOIN", "review", "AS", "t3", "ON", "t3.business_id", "=", "t2.business_id", "WHERE", "t1.neighbourhood_name", "=", "``", "South", "Summerlin", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t3", ".", "text", ")", "from", "neighbourhood", "as", "t1", "join", "business", "as", "t2", "on", "t1", ".", "business_id", "=", "t2", ".", "business_id", "join", "review", "as", "t3", "on", "t3", ".", "business_id", "=", "t2", ".", "business_id", "where", "t1", ".", "neighbourhood_name", "=", "value"], "question": "Find the number of reviews on businesses located in \" South Summerlin \" neighbourhood", "question_toks": ["Find", "the", "number", "of", "reviews", "on", "businesses", "located", "in", "``", "South", "Summerlin", "``", "neighbourhood"], "guid": 7285}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the total number of rooms of the apartments in the building with short name \"Columbus Square\".", "sql": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\"", "example": {"db_id": "apartment_rentals", "query": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\"", "query_toks": ["SELECT", "sum", "(", "T2.room_count", ")", "FROM", "Apartment_Buildings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "WHERE", "T1.building_short_name", "=", "``", "Columbus", "Square", "''"], "query_toks_no_value": ["select", "sum", "(", "t2", ".", "room_count", ")", "from", "apartment_buildings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "where", "t1", ".", "building_short_name", "=", "value"], "question": "Show the total number of rooms of the apartments in the building with short name \"Columbus Square\".", "question_toks": ["Show", "the", "total", "number", "of", "rooms", "of", "the", "apartments", "in", "the", "building", "with", "short", "name", "``", "Columbus", "Square", "''", "."], "guid": 7286}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can we find a restaurant on bethel island rd in bethel island ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "bethel", "island", "''", "AND", "t2.street_name", "=", "``", "bethel", "island", "rd", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value"], "question": "where can we find a restaurant on bethel island rd in bethel island ?", "question_toks": ["where", "can", "we", "find", "a", "restaurant", "on", "bethel", "island", "rd", "in", "bethel", "island", "?"], "guid": 7287}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is the best american in the bay area ?", "sql": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "where is the best american in the bay area ?", "question_toks": ["where", "is", "the", "best", "american", "in", "the", "bay", "area", "?"], "guid": 7288}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | how many french restaurants are there in palo alto ?", "sql": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";", "example": {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "palo", "alto", "''", "AND", "t1.food_type", "=", "``", "french", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "how many french restaurants are there in palo alto ?", "question_toks": ["how", "many", "french", "restaurants", "are", "there", "in", "palo", "alto", "?"], "guid": 7289}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | How many apartment bookings are there in total?", "sql": "SELECT count(*) FROM Apartment_Bookings", "example": {"db_id": "apartment_rentals", "query": "SELECT count(*) FROM Apartment_Bookings", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Apartment_Bookings"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "apartment_bookings"], "question": "How many apartment bookings are there in total?", "question_toks": ["How", "many", "apartment", "bookings", "are", "there", "in", "total", "?"], "guid": 7290}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the star rating descriptions of the hotels with price above 10000?", "sql": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000", "example": {"db_id": "cre_Theme_park", "query": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000", "query_toks": ["SELECT", "T2.star_rating_description", "FROM", "HOTELS", "AS", "T1", "JOIN", "Ref_Hotel_Star_Ratings", "AS", "T2", "ON", "T1.star_rating_code", "=", "T2.star_rating_code", "WHERE", "T1.price_range", ">", "10000"], "query_toks_no_value": ["select", "t2", ".", "star_rating_description", "from", "hotels", "as", "t1", "join", "ref_hotel_star_ratings", "as", "t2", "on", "t1", ".", "star_rating_code", "=", "t2", ".", "star_rating_code", "where", "t1", ".", "price_range", ">", "value"], "question": "What are the star rating descriptions of the hotels with price above 10000?", "question_toks": ["What", "are", "the", "star", "rating", "descriptions", "of", "the", "hotels", "with", "price", "above", "10000", "?"], "guid": 7291}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | What is the average age of the visitors whose membership level is not higher than 4?", "sql": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4", "example": {"db_id": "museum_visit", "query": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "visitor", "WHERE", "Level_of_membership", "<", "=", "4"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "visitor", "where", "level_of_membership", "<", "=", "value"], "question": "What is the average age of the visitors whose membership level is not higher than 4?", "question_toks": ["What", "is", "the", "average", "age", "of", "the", "visitors", "whose", "membership", "level", "is", "not", "higher", "than", "4", "?"], "guid": 7292}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Which apartment type has the largest number of total rooms? Return the apartment type code, its number of bathrooms and number of bedrooms.", "sql": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1", "query_toks": ["SELECT", "apt_type_code", ",", "bathroom_count", ",", "bedroom_count", "FROM", "Apartments", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "sum", "(", "room_count", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "apt_type_code", ",", "bathroom_count", ",", "bedroom_count", "from", "apartments", "group", "by", "apt_type_code", "order", "by", "sum", "(", "room_count", ")", "desc", "limit", "value"], "question": "Which apartment type has the largest number of total rooms? Return the apartment type code, its number of bathrooms and number of bedrooms.", "question_toks": ["Which", "apartment", "type", "has", "the", "largest", "number", "of", "total", "rooms", "?", "Return", "the", "apartment", "type", "code", ",", "its", "number", "of", "bathrooms", "and", "number", "of", "bedrooms", "."], "guid": 7293}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | List all the restaurant rated more than 3.5", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.rating", ">", "3.5", "AND", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "rating", ">", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "List all the restaurant rated more than 3.5", "question_toks": ["List", "all", "the", "restaurant", "rated", "more", "than", "3.5"], "guid": 7294}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Which apartments have unit status availability of both 0 and 1? Return their apartment numbers.", "sql": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1", "query_toks": ["SELECT", "T1.apt_number", "FROM", "Apartments", "AS", "T1", "JOIN", "View_Unit_Status", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.available_yn", "=", "0", "INTERSECT", "SELECT", "T1.apt_number", "FROM", "Apartments", "AS", "T1", "JOIN", "View_Unit_Status", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.available_yn", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "apt_number", "from", "apartments", "as", "t1", "join", "view_unit_status", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "available_yn", "=", "value", "intersect", "select", "t1", ".", "apt_number", "from", "apartments", "as", "t1", "join", "view_unit_status", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "available_yn", "=", "value"], "question": "Which apartments have unit status availability of both 0 and 1? Return their apartment numbers.", "question_toks": ["Which", "apartments", "have", "unit", "status", "availability", "of", "both", "0", "and", "1", "?", "Return", "their", "apartment", "numbers", "."], "guid": 7295}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What is the total number of rooms available in this inn?", "sql": "SELECT count(*) FROM Rooms;", "example": {"db_id": "inn_1", "query": "SELECT count(*) FROM Rooms;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Rooms", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "rooms"], "question": "What is the total number of rooms available in this inn?", "question_toks": ["What", "is", "the", "total", "number", "of", "rooms", "available", "in", "this", "inn", "?"], "guid": 7296}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Which tourist attraction is associated with the photo \"game1\"? Return its name.", "sql": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"", "query_toks": ["SELECT", "T2.Name", "FROM", "PHOTOS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T1.Name", "=", "``", "game1", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "photos", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t1", ".", "name", "=", "value"], "question": "Which tourist attraction is associated with the photo \"game1\"? Return its name.", "question_toks": ["Which", "tourist", "attraction", "is", "associated", "with", "the", "photo", "``", "game1", "''", "?", "Return", "its", "name", "."], "guid": 7297}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | How many times the number of adults and kids staying in a room reached the maximum capacity of the room?", "sql": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;", "example": {"db_id": "inn_1", "query": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "WHERE", "T2.maxOccupancy", "=", "T1.Adults", "+", "T1.Kids", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "where", "t2", ".", "maxoccupancy", "=", "t1", ".", "adults", "+", "t1", ".", "kids"], "question": "How many times the number of adults and kids staying in a room reached the maximum capacity of the room?", "question_toks": ["How", "many", "times", "the", "number", "of", "adults", "and", "kids", "staying", "in", "a", "room", "reached", "the", "maximum", "capacity", "of", "the", "room", "?"], "guid": 7298}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | How many restaurant is the Sandwich type restaurant?", "sql": "SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'", "example": {"db_id": "restaurant_1", "query": "SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Restaurant", "JOIN", "Type_Of_Restaurant", "ON", "Restaurant.ResID", "=", "Type_Of_Restaurant.ResID", "JOIN", "Restaurant_Type", "ON", "Type_Of_Restaurant.ResTypeID", "=", "Restaurant_Type.ResTypeID", "GROUP", "BY", "Type_Of_Restaurant.ResTypeID", "HAVING", "Restaurant_Type.ResTypeName", "=", "'Sandwich", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "join", "type_of_restaurant", "on", "restaurant.resid", "=", "type_of_restaurant.resid", "join", "restaurant_type", "on", "type_of_restaurant.restypeid", "=", "restaurant_type.restypeid", "group", "by", "type_of_restaurant.restypeid", "having", "restaurant_type.restypename", "=", "value"], "question": "How many restaurant is the Sandwich type restaurant?", "question_toks": ["How", "many", "restaurant", "is", "the", "Sandwich", "type", "restaurant", "?"], "guid": 7299}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all reviews about \" Kabob Palace \" in year 2014", "sql": "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Kabob Palace\" AND t2.year  =  2014;", "example": {"db_id": "yelp", "query": "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Kabob Palace\" AND t2.year  =  2014;", "query_toks": ["SELECT", "t2.text", "FROM", "review", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.name", "=", "``", "Kabob", "Palace", "''", "AND", "t2.year", "=", "2014", ";"], "query_toks_no_value": ["select", "t2", ".", "text", "from", "review", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "name", "=", "value", "and", "t2", ".", "year", "=", "value"], "question": "Find all reviews about \" Kabob Palace \" in year 2014", "question_toks": ["Find", "all", "reviews", "about", "``", "Kabob", "Palace", "``", "in", "year", "2014"], "guid": 7300}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a good restaurant on buchanan in san francisco for arabic food ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good restaurant on buchanan in san francisco for arabic food ?", "question_toks": ["where", "is", "a", "good", "restaurant", "on", "buchanan", "in", "san", "francisco", "for", "arabic", "food", "?"], "guid": 7301}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | List all businesses that are restaurant in Pennsylvania .", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pennsylvania\" AND t2.category_name  =  \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pennsylvania\" AND t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.state", "=", "``", "Pennsylvania", "''", "AND", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "state", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "List all businesses that are restaurant in Pennsylvania .", "question_toks": ["List", "all", "businesses", "that", "are", "restaurant", "in", "Pennsylvania", "."], "guid": 7302}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | How many museums were opened after 2013 or before 2008?", "sql": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008", "example": {"db_id": "museum_visit", "query": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "museum", "WHERE", "open_year", ">", "2013", "OR", "open_year", "<", "2008"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "museum", "where", "open_year", ">", "value", "or", "open_year", "<", "value"], "question": "How many museums were opened after 2013 or before 2008?", "question_toks": ["How", "many", "museums", "were", "opened", "after", "2013", "or", "before", "2008", "?"], "guid": 7303}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Which rooms cost between 120 and 150? Give me the room names.", "sql": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150", "example": {"db_id": "inn_1", "query": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150", "query_toks": ["SELECT", "roomname", "FROM", "rooms", "WHERE", "baseprice", "BETWEEN", "120", "AND", "150"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "baseprice", "between", "value", "and", "value"], "question": "Which rooms cost between 120 and 150? Give me the room names.", "question_toks": ["Which", "rooms", "cost", "between", "120", "and", "150", "?", "Give", "me", "the", "room", "names", "."], "guid": 7304}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the start dates and end dates of all the apartment bookings made by guests with gender code \"Female\".", "sql": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id", "WHERE", "T2.gender_code", "=", "``", "Female", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id", "where", "t2", ".", "gender_code", "=", "value"], "question": "Show the start dates and end dates of all the apartment bookings made by guests with gender code \"Female\".", "question_toks": ["Show", "the", "start", "dates", "and", "end", "dates", "of", "all", "the", "apartment", "bookings", "made", "by", "guests", "with", "gender", "code", "``", "Female", "''", "."], "guid": 7305}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | What is the number of escape games in Madison", "sql": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Madison", "''", "AND", "t2.category_name", "=", "``", "escape", "games", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "What is the number of escape games in Madison", "question_toks": ["What", "is", "the", "number", "of", "escape", "games", "in", "Madison"], "guid": 7306}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What are the start date and end date of the apartment bookings made by female guests (gender code \"Female\")?", "sql": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id", "WHERE", "T2.gender_code", "=", "``", "Female", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id", "where", "t2", ".", "gender_code", "=", "value"], "question": "What are the start date and end date of the apartment bookings made by female guests (gender code \"Female\")?", "question_toks": ["What", "are", "the", "start", "date", "and", "end", "date", "of", "the", "apartment", "bookings", "made", "by", "female", "guests", "(", "gender", "code", "``", "Female", "''", ")", "?"], "guid": 7307}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many tips has Michelle written in April", "sql": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"April\" AND t2.name  =  \"Michelle\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"April\" AND t2.name  =  \"Michelle\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.text", ")", "FROM", "USER", "AS", "t2", "JOIN", "tip", "AS", "t1", "ON", "t2.user_id", "=", "t1.user_id", "WHERE", "t1.month", "=", "``", "April", "''", "AND", "t2.name", "=", "``", "Michelle", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "text", ")", "from", "user", "as", "t2", "join", "tip", "as", "t1", "on", "t2", ".", "user_id", "=", "t1", ".", "user_id", "where", "t1", ".", "month", "=", "value", "and", "t2", ".", "name", "=", "value"], "question": "How many tips has Michelle written in April", "question_toks": ["How", "many", "tips", "has", "Michelle", "written", "in", "April"], "guid": 7308}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What are the start date and end date of each apartment booking?", "sql": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings", "example": {"db_id": "apartment_rentals", "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings", "query_toks": ["SELECT", "booking_start_date", ",", "booking_end_date", "FROM", "Apartment_Bookings"], "query_toks_no_value": ["select", "booking_start_date", ",", "booking_end_date", "from", "apartment_bookings"], "question": "What are the start date and end date of each apartment booking?", "question_toks": ["What", "are", "the", "start", "date", "and", "end", "date", "of", "each", "apartment", "booking", "?"], "guid": 7309}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me the best restaurant in bay area for american food ?", "sql": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "give me the best restaurant in bay area for american food ?", "question_toks": ["give", "me", "the", "best", "restaurant", "in", "bay", "area", "for", "american", "food", "?"], "guid": 7310}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | What are the lengths and heights of roller coasters?", "sql": "SELECT LENGTH ,  Height FROM roller_coaster", "example": {"db_id": "roller_coaster", "query": "SELECT LENGTH ,  Height FROM roller_coaster", "query_toks": ["SELECT", "LENGTH", ",", "Height", "FROM", "roller_coaster"], "query_toks_no_value": ["select", "length", ",", "height", "from", "roller_coaster"], "question": "What are the lengths and heights of roller coasters?", "question_toks": ["What", "are", "the", "lengths", "and", "heights", "of", "roller", "coasters", "?"], "guid": 7311}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show the details of the top 3 most expensive hotels.", "sql": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3", "example": {"db_id": "cre_Theme_park", "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3", "query_toks": ["SELECT", "other_hotel_details", "FROM", "HOTELS", "ORDER", "BY", "price_range", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "other_hotel_details", "from", "hotels", "order", "by", "price_range", "desc", "limit", "value"], "question": "Show the details of the top 3 most expensive hotels.", "question_toks": ["Show", "the", "details", "of", "the", "top", "3", "most", "expensive", "hotels", "."], "guid": 7312}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Count the number of exhibitions that have had an attendnance of over 100 or a ticket prices under 10.", "sql": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10", "example": {"db_id": "theme_gallery", "query": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T1.attendance", ">", "100", "OR", "T2.ticket_price", "<", "10"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t1", ".", "attendance", ">", "value", "or", "t2", ".", "ticket_price", "<", "value"], "question": "Count the number of exhibitions that have had an attendnance of over 100 or a ticket prices under 10.", "question_toks": ["Count", "the", "number", "of", "exhibitions", "that", "have", "had", "an", "attendnance", "of", "over", "100", "or", "a", "ticket", "prices", "under", "10", "."], "guid": 7313}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What is the decor of room Recluse and defiance?", "sql": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";", "example": {"db_id": "inn_1", "query": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";", "query_toks": ["SELECT", "decor", "FROM", "Rooms", "WHERE", "roomName", "=", "``", "Recluse", "and", "defiance", "''", ";"], "query_toks_no_value": ["select", "decor", "from", "rooms", "where", "roomname", "=", "value"], "question": "What is the decor of room Recluse and defiance?", "question_toks": ["What", "is", "the", "decor", "of", "room", "Recluse", "and", "defiance", "?"], "guid": 7314}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | Find the average number of staff working for the museums that were open before 2009.", "sql": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009", "example": {"db_id": "museum_visit", "query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009", "query_toks": ["SELECT", "avg", "(", "num_of_staff", ")", "FROM", "museum", "WHERE", "open_year", "<", "2009"], "query_toks_no_value": ["select", "avg", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", "<", "value"], "question": "Find the average number of staff working for the museums that were open before 2009.", "question_toks": ["Find", "the", "average", "number", "of", "staff", "working", "for", "the", "museums", "that", "were", "open", "before", "2009", "."], "guid": 7315}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the names and opening hours of the tourist attractions that can be accessed by bus or walk?", "sql": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "Name", ",", "Opening_Hours", "FROM", "TOURIST_ATTRACTIONS", "WHERE", "How_to_Get_There", "=", "``", "bus", "''", "OR", "How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "name", ",", "opening_hours", "from", "tourist_attractions", "where", "how_to_get_there", "=", "value", "or", "how_to_get_there", "=", "value"], "question": "What are the names and opening hours of the tourist attractions that can be accessed by bus or walk?", "question_toks": ["What", "are", "the", "names", "and", "opening", "hours", "of", "the", "tourist", "attractions", "that", "can", "be", "accessed", "by", "bus", "or", "walk", "?"], "guid": 7316}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | What is the total likes on tips from Niloofar", "sql": "SELECT SUM ( t1.likes ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";", "example": {"db_id": "yelp", "query": "SELECT SUM ( t1.likes ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";", "query_toks": ["SELECT", "SUM", "(", "t1.likes", ")", "FROM", "USER", "AS", "t2", "JOIN", "tip", "AS", "t1", "ON", "t2.user_id", "=", "t1.user_id", "WHERE", "t2.name", "=", "``", "Niloofar", "''", ";"], "query_toks_no_value": ["select", "sum", "(", "t1", ".", "likes", ")", "from", "user", "as", "t2", "join", "tip", "as", "t1", "on", "t2", ".", "user_id", "=", "t1", ".", "user_id", "where", "t2", ".", "name", "=", "value"], "question": "What is the total likes on tips from Niloofar", "question_toks": ["What", "is", "the", "total", "likes", "on", "tips", "from", "Niloofar"], "guid": 7317}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many people reviewed \" Bistro Di Napoli \" in 2015 ?", "sql": "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Bistro Di Napoli\" AND t2.year  =  2015;", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Bistro Di Napoli\" AND t2.year  =  2015;", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t3.name", ")", "FROM", "review", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t3", "ON", "t3.user_id", "=", "t2.user_id", "WHERE", "t1.name", "=", "``", "Bistro", "Di", "Napoli", "''", "AND", "t2.year", "=", "2015", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t3", ".", "name", ")", "from", "review", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t3", "on", "t3", ".", "user_id", "=", "t2", ".", "user_id", "where", "t1", ".", "name", "=", "value", "and", "t2", ".", "year", "=", "value"], "question": "How many people reviewed \" Bistro Di Napoli \" in 2015 ?", "question_toks": ["How", "many", "people", "reviewed", "``", "Bistro", "Di", "Napoli", "``", "in", "2015", "?"], "guid": 7318}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where are some good places for arabic on buchanan in san francisco ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where are some good places for arabic on buchanan in san francisco ?", "question_toks": ["where", "are", "some", "good", "places", "for", "arabic", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 7319}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show the description and code of the attraction type most tourist attractions belong to.", "sql": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Attraction_Type_Description", ",", "T2.Attraction_Type_Code", "FROM", "Ref_Attraction_Types", "AS", "T1", "JOIN", "Tourist_Attractions", "AS", "T2", "ON", "T1.Attraction_Type_Code", "=", "T2.Attraction_Type_Code", "GROUP", "BY", "T2.Attraction_Type_Code", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "attraction_type_description", ",", "t2", ".", "attraction_type_code", "from", "ref_attraction_types", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "attraction_type_code", "=", "t2", ".", "attraction_type_code", "group", "by", "t2", ".", "attraction_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the description and code of the attraction type most tourist attractions belong to.", "question_toks": ["Show", "the", "description", "and", "code", "of", "the", "attraction", "type", "most", "tourist", "attractions", "belong", "to", "."], "guid": 7320}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction?", "sql": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\"", "query_toks": ["SELECT", "T2.Name", "FROM", "Locations", "AS", "T1", "JOIN", "Tourist_Attractions", "AS", "T2", "ON", "T1.Location_ID", "=", "T2.Location_ID", "WHERE", "T1.Address", "=", "``", "254", "Ottilie", "Junction", "''", "OR", "T2.How_to_Get_There", "=", "``", "bus", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "locations", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "location_id", "=", "t2", ".", "location_id", "where", "t1", ".", "address", "=", "value", "or", "t2", ".", "how_to_get_there", "=", "value"], "question": "What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction?", "question_toks": ["What", "are", "the", "names", "of", "tourist", "attractions", "that", "can", "be", "reached", "by", "bus", "or", "is", "at", "address", "254", "Ottilie", "Junction", "?"], "guid": 7321}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What are the top three apartment types in terms of the average room count? Give me the", "sql": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3", "query_toks": ["SELECT", "apt_type_code", "FROM", "Apartments", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "avg", "(", "room_count", ")", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "apt_type_code", "from", "apartments", "group", "by", "apt_type_code", "order", "by", "avg", "(", "room_count", ")", "desc", "limit", "value"], "question": "What are the top three apartment types in terms of the average room count? Give me the", "question_toks": ["What", "are", "the", "top", "three", "apartment", "types", "in", "terms", "of", "the", "average", "room", "count", "?", "Give", "me", "the"], "guid": 7322}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Return the average and minimum ages across artists from the United States.", "sql": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'", "example": {"db_id": "theme_gallery", "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "FROM", "artist", "WHERE", "country", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "from", "artist", "where", "country", "=", "value"], "question": "Return the average and minimum ages across artists from the United States.", "question_toks": ["Return", "the", "average", "and", "minimum", "ages", "across", "artists", "from", "the", "United", "States", "."], "guid": 7323}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | List all students' first names and last names who majored in 600.", "sql": "SELECT Fname , Lname FROM Student WHERE Major  =  600;", "example": {"db_id": "restaurant_1", "query": "SELECT Fname , Lname FROM Student WHERE Major  =  600;", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "Student", "WHERE", "Major", "=", "600", ";"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "major", "=", "value"], "question": "List all students' first names and last names who majored in 600.", "question_toks": ["List", "all", "students", "'", "first", "names", "and", "last", "names", "who", "majored", "in", "600", "."], "guid": 7324}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | What is the number of checkins for \" Cafe Zinho \" on Friday", "sql": "SELECT t2.count FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t2.day  =  \"Friday\";", "example": {"db_id": "yelp", "query": "SELECT t2.count FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t2.day  =  \"Friday\";", "query_toks": ["SELECT", "t2.count", "FROM", "checkin", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.name", "=", "``", "Cafe", "Zinho", "''", "AND", "t2.day", "=", "``", "Friday", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "count", "from", "checkin", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "name", "=", "value", "and", "t2", ".", "day", "=", "value"], "question": "What is the number of checkins for \" Cafe Zinho \" on Friday", "question_toks": ["What", "is", "the", "number", "of", "checkins", "for", "``", "Cafe", "Zinho", "``", "on", "Friday"], "guid": 7325}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show all distinct building descriptions.", "sql": "SELECT DISTINCT building_description FROM Apartment_Buildings", "example": {"db_id": "apartment_rentals", "query": "SELECT DISTINCT building_description FROM Apartment_Buildings", "query_toks": ["SELECT", "DISTINCT", "building_description", "FROM", "Apartment_Buildings"], "query_toks_no_value": ["select", "distinct", "building_description", "from", "apartment_buildings"], "question": "Show all distinct building descriptions.", "question_toks": ["Show", "all", "distinct", "building", "descriptions", "."], "guid": 7326}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show the id and star rating of each hotel, ordered by its price from low to high.", "sql": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC", "example": {"db_id": "cre_Theme_park", "query": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC", "query_toks": ["SELECT", "hotel_id", ",", "star_rating_code", "FROM", "HOTELS", "ORDER", "BY", "price_range", "ASC"], "query_toks_no_value": ["select", "hotel_id", ",", "star_rating_code", "from", "hotels", "order", "by", "price_range", "asc"], "question": "Show the id and star rating of each hotel, ordered by its price from low to high.", "question_toks": ["Show", "the", "id", "and", "star", "rating", "of", "each", "hotel", ",", "ordered", "by", "its", "price", "from", "low", "to", "high", "."], "guid": 7327}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a good restaurant on bethel island rd in bethel island ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "bethel", "island", "''", "AND", "t2.street_name", "=", "``", "bethel", "island", "rd", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good restaurant on bethel island rd in bethel island ?", "question_toks": ["give", "me", "a", "good", "restaurant", "on", "bethel", "island", "rd", "in", "bethel", "island", "?"], "guid": 7328}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | List all user ids with name Michelle", "sql": "SELECT user_id FROM USER WHERE name  =  \"Michelle\";", "example": {"db_id": "yelp", "query": "SELECT user_id FROM USER WHERE name  =  \"Michelle\";", "query_toks": ["SELECT", "user_id", "FROM", "USER", "WHERE", "name", "=", "``", "Michelle", "''", ";"], "query_toks_no_value": ["select", "user_id", "from", "user", "where", "name", "=", "value"], "question": "List all user ids with name Michelle", "question_toks": ["List", "all", "user", "ids", "with", "name", "Michelle"], "guid": 7329}}
{"text": "shop: Shop_ID, Address, Num_of_staff, Score, Open_Year; member: Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address; happy_hour: HH_ID, Shop_ID, Month, Num_of_shaff_in_charge; happy_hour_member: HH_ID, Member_ID, Total_amount | Which address do not have any member with the black membership card?", "sql": "SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card  =  'Black'", "example": {"db_id": "coffee_shop", "query": "SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card  =  'Black'", "query_toks": ["SELECT", "address", "FROM", "member", "EXCEPT", "SELECT", "address", "FROM", "member", "WHERE", "Membership_card", "=", "'Black", "'"], "query_toks_no_value": ["select", "address", "from", "member", "except", "select", "address", "from", "member", "where", "membership_card", "=", "value"], "question": "Which address do not have any member with the black membership card?", "question_toks": ["Which", "address", "do", "not", "have", "any", "member", "with", "the", "black", "membership", "card", "?"], "guid": 7330}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What is the name of the artist who joined latest?", "sql": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1", "example": {"db_id": "theme_gallery", "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1", "query_toks": ["SELECT", "name", "FROM", "artist", "ORDER", "BY", "year_join", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "artist", "order", "by", "year_join", "desc", "limit", "value"], "question": "What is the name of the artist who joined latest?", "question_toks": ["What", "is", "the", "name", "of", "the", "artist", "who", "joined", "latest", "?"], "guid": 7331}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Return the apartment number with the largest number of bedrooms.", "sql": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1", "query_toks": ["SELECT", "apt_number", "FROM", "Apartments", "ORDER", "BY", "bedroom_count", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "apt_number", "from", "apartments", "order", "by", "bedroom_count", "desc", "limit", "value"], "question": "Return the apartment number with the largest number of bedrooms.", "question_toks": ["Return", "the", "apartment", "number", "with", "the", "largest", "number", "of", "bedrooms", "."], "guid": 7332}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What are the average, minimum, and maximum ticket prices for exhibitions that happened prior to 2009?", "sql": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009", "example": {"db_id": "theme_gallery", "query": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009", "query_toks": ["SELECT", "avg", "(", "ticket_price", ")", ",", "min", "(", "ticket_price", ")", ",", "max", "(", "ticket_price", ")", "FROM", "exhibition", "WHERE", "YEAR", "<", "2009"], "query_toks_no_value": ["select", "avg", "(", "ticket_price", ")", ",", "min", "(", "ticket_price", ")", ",", "max", "(", "ticket_price", ")", "from", "exhibition", "where", "year", "<", "value"], "question": "What are the average, minimum, and maximum ticket prices for exhibitions that happened prior to 2009?", "question_toks": ["What", "are", "the", "average", ",", "minimum", ",", "and", "maximum", "ticket", "prices", "for", "exhibitions", "that", "happened", "prior", "to", "2009", "?"], "guid": 7333}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the first names and last names of all the guests that have apartment bookings with status code \"Confirmed\".", "sql": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"", "example": {"db_id": "apartment_rentals", "query": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"", "query_toks": ["SELECT", "T2.guest_first_name", ",", "T2.guest_last_name", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id", "WHERE", "T1.booking_status_code", "=", "``", "Confirmed", "''"], "query_toks_no_value": ["select", "t2", ".", "guest_first_name", ",", "t2", ".", "guest_last_name", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id", "where", "t1", ".", "booking_status_code", "=", "value"], "question": "Show the first names and last names of all the guests that have apartment bookings with status code \"Confirmed\".", "question_toks": ["Show", "the", "first", "names", "and", "last", "names", "of", "all", "the", "guests", "that", "have", "apartment", "bookings", "with", "status", "code", "``", "Confirmed", "''", "."], "guid": 7334}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | What is the total likes on tips about \" Cafe Zinho \"", "sql": "SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\";", "example": {"db_id": "yelp", "query": "SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\";", "query_toks": ["SELECT", "SUM", "(", "t2.likes", ")", "FROM", "tip", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.name", "=", "``", "Cafe", "Zinho", "''", ";"], "query_toks_no_value": ["select", "sum", "(", "t2", ".", "likes", ")", "from", "tip", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "name", "=", "value"], "question": "What is the total likes on tips about \" Cafe Zinho \"", "question_toks": ["What", "is", "the", "total", "likes", "on", "tips", "about", "``", "Cafe", "Zinho", "``"], "guid": 7335}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some good restaurants in alameda ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good restaurants in alameda ?", "question_toks": ["give", "me", "some", "good", "restaurants", "in", "alameda", "?"], "guid": 7336}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | How many exhibitions has each artist had?", "sql": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id", "example": {"db_id": "theme_gallery", "query": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "GROUP", "BY", "T1.artist_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "group", "by", "t1", ".", "artist_id"], "question": "How many exhibitions has each artist had?", "question_toks": ["How", "many", "exhibitions", "has", "each", "artist", "had", "?"], "guid": 7337}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What apartment type codes and apartment numbers do the buildings managed by \"Kyle\" have?", "sql": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"", "example": {"db_id": "apartment_rentals", "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"", "query_toks": ["SELECT", "T2.apt_type_code", ",", "T2.apt_number", "FROM", "Apartment_Buildings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "WHERE", "T1.building_manager", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "t2", ".", "apt_type_code", ",", "t2", ".", "apt_number", "from", "apartment_buildings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "where", "t1", ".", "building_manager", "=", "value"], "question": "What apartment type codes and apartment numbers do the buildings managed by \"Kyle\" have?", "question_toks": ["What", "apartment", "type", "codes", "and", "apartment", "numbers", "do", "the", "buildings", "managed", "by", "``", "Kyle", "''", "have", "?"], "guid": 7338}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.", "sql": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;", "example": {"db_id": "inn_1", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.roomName", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "GROUP", "BY", "T1.Room", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "roomname", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "group", "by", "t1", ".", "room", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.", "question_toks": ["Find", "the", "most", "popular", "room", "in", "the", "hotel", ".", "The", "most", "popular", "room", "is", "the", "room", "that", "had", "seen", "the", "largest", "number", "of", "reservations", "."], "guid": 7339}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | list all the businesses which have a review by Niloofar", "sql": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t3.name  =  \"Niloofar\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t3.name  =  \"Niloofar\";", "query_toks": ["SELECT", "t1.name", "FROM", "review", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t3", "ON", "t3.user_id", "=", "t2.user_id", "WHERE", "t3.name", "=", "``", "Niloofar", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "review", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t3", "on", "t3", ".", "user_id", "=", "t2", ".", "user_id", "where", "t3", ".", "name", "=", "value"], "question": "list all the businesses which have a review by Niloofar", "question_toks": ["list", "all", "the", "businesses", "which", "have", "a", "review", "by", "Niloofar"], "guid": 7340}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is the best restaurant in bay area for american food ?", "sql": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "where is the best restaurant in bay area for american food ?", "question_toks": ["where", "is", "the", "best", "restaurant", "in", "bay", "area", "for", "american", "food", "?"], "guid": 7341}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where are some restaurants good for arabic food in mountain view ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where are some restaurants good for arabic food in mountain view ?", "question_toks": ["where", "are", "some", "restaurants", "good", "for", "arabic", "food", "in", "mountain", "view", "?"], "guid": 7342}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all Dallas restaurant with a rating above 4.5", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  4.5 AND t2.category_name  =  \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  4.5 AND t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Dallas", "''", "AND", "t1.rating", ">", "4.5", "AND", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t1", ".", "rating", ">", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "Find all Dallas restaurant with a rating above 4.5", "question_toks": ["Find", "all", "Dallas", "restaurant", "with", "a", "rating", "above", "4.5"], "guid": 7343}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the name of rooms whose base price is between 120 and 150.", "sql": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150", "example": {"db_id": "inn_1", "query": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150", "query_toks": ["SELECT", "roomname", "FROM", "rooms", "WHERE", "baseprice", "BETWEEN", "120", "AND", "150"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "baseprice", "between", "value", "and", "value"], "question": "Find the name of rooms whose base price is between 120 and 150.", "question_toks": ["Find", "the", "name", "of", "rooms", "whose", "base", "price", "is", "between", "120", "and", "150", "."], "guid": 7344}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many Starbucks are there in Dallas Texas ?", "sql": "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Dallas\" AND name  =  \"Starbucks\" AND state  =  \"Texas\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Dallas\" AND name  =  \"Starbucks\" AND state  =  \"Texas\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "business_id", ")", "FROM", "business", "WHERE", "city", "=", "``", "Dallas", "''", "AND", "name", "=", "``", "Starbucks", "''", "AND", "state", "=", "``", "Texas", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "business_id", ")", "from", "business", "where", "city", "=", "value", "and", "name", "=", "value", "and", "state", "=", "value"], "question": "How many Starbucks are there in Dallas Texas ?", "question_toks": ["How", "many", "Starbucks", "are", "there", "in", "Dallas", "Texas", "?"], "guid": 7345}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What is the least popular kind of decor?", "sql": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;", "example": {"db_id": "inn_1", "query": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;", "query_toks": ["SELECT", "T2.decor", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "GROUP", "BY", "T2.decor", "ORDER", "BY", "count", "(", "T2.decor", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "decor", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "group", "by", "t2", ".", "decor", "order", "by", "count", "(", "t2", ".", "decor", ")", "asc", "limit", "value"], "question": "What is the least popular kind of decor?", "question_toks": ["What", "is", "the", "least", "popular", "kind", "of", "decor", "?"], "guid": 7346}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | How many visitors below age 30 are there?", "sql": "SELECT count(*) FROM visitor WHERE age  <  30", "example": {"db_id": "museum_visit", "query": "SELECT count(*) FROM visitor WHERE age  <  30", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "visitor", "WHERE", "age", "<", "30"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "visitor", "where", "age", "<", "value"], "question": "How many visitors below age 30 are there?", "question_toks": ["How", "many", "visitors", "below", "age", "30", "are", "there", "?"], "guid": 7347}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find the cities of businesses rated below 1.5", "sql": "SELECT city FROM business WHERE rating  <  1.5;", "example": {"db_id": "yelp", "query": "SELECT city FROM business WHERE rating  <  1.5;", "query_toks": ["SELECT", "city", "FROM", "business", "WHERE", "rating", "<", "1.5", ";"], "query_toks_no_value": ["select", "city", "from", "business", "where", "rating", "<", "value"], "question": "Find the cities of businesses rated below 1.5", "question_toks": ["Find", "the", "cities", "of", "businesses", "rated", "below", "1.5"], "guid": 7348}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | What is the number of restaurant in Pittsburgh rated 4.5", "sql": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Pittsburgh\" AND t1.rating  =  4.5 AND t2.category_name  =  \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Pittsburgh\" AND t1.rating  =  4.5 AND t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Pittsburgh", "''", "AND", "t1.rating", "=", "4.5", "AND", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t1", ".", "rating", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "What is the number of restaurant in Pittsburgh rated 4.5", "question_toks": ["What", "is", "the", "number", "of", "restaurant", "in", "Pittsburgh", "rated", "4.5"], "guid": 7349}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What is the name and detail of each staff member?", "sql": "SELECT Name ,  Other_Details FROM Staff", "example": {"db_id": "cre_Theme_park", "query": "SELECT Name ,  Other_Details FROM Staff", "query_toks": ["SELECT", "Name", ",", "Other_Details", "FROM", "Staff"], "query_toks_no_value": ["select", "name", ",", "other_details", "from", "staff"], "question": "What is the name and detail of each staff member?", "question_toks": ["What", "is", "the", "name", "and", "detail", "of", "each", "staff", "member", "?"], "guid": 7350}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some restaurants good for french food ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some restaurants good for french food ?", "question_toks": ["give", "me", "some", "restaurants", "good", "for", "french", "food", "?"], "guid": 7351}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what are some good restaurants on bethel island rd in bethel island ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "bethel", "island", "''", "AND", "t2.street_name", "=", "``", "bethel", "island", "rd", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good restaurants on bethel island rd in bethel island ?", "question_toks": ["what", "are", "some", "good", "restaurants", "on", "bethel", "island", "rd", "in", "bethel", "island", "?"], "guid": 7352}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids.", "sql": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;", "example": {"db_id": "inn_1", "query": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;", "query_toks": ["SELECT", "roomName", ",", "RoomId", "FROM", "Rooms", "WHERE", "basePrice", ">", "160", "AND", "maxOccupancy", ">", "2", ";"], "query_toks_no_value": ["select", "roomname", ",", "roomid", "from", "rooms", "where", "baseprice", ">", "value", "and", "maxoccupancy", ">", "value"], "question": "Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids.", "question_toks": ["Find", "all", "the", "rooms", "that", "have", "a", "price", "higher", "than", "160", "and", "can", "accommodate", "more", "than", "2", "people", ".", "Report", "room", "names", "and", "ids", "."], "guid": 7353}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | How many roller coasters are there?", "sql": "SELECT count(*) FROM roller_coaster", "example": {"db_id": "roller_coaster", "query": "SELECT count(*) FROM roller_coaster", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "roller_coaster"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "roller_coaster"], "question": "How many roller coasters are there?", "question_toks": ["How", "many", "roller", "coasters", "are", "there", "?"], "guid": 7354}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | which neighbourhood has the most number of businesses in Madison", "sql": "SELECT t1.neighbourhood_name FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" GROUP BY t1.neighbourhood_name ORDER BY COUNT ( DISTINCT t2.name ) DESC LIMIT 1;", "example": {"db_id": "yelp", "query": "SELECT t1.neighbourhood_name FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" GROUP BY t1.neighbourhood_name ORDER BY COUNT ( DISTINCT t2.name ) DESC LIMIT 1;", "query_toks": ["SELECT", "t1.neighbourhood_name", "FROM", "neighbourhood", "AS", "t1", "JOIN", "business", "AS", "t2", "ON", "t1.business_id", "=", "t2.business_id", "WHERE", "t2.city", "=", "``", "Madison", "''", "GROUP", "BY", "t1.neighbourhood_name", "ORDER", "BY", "COUNT", "(", "DISTINCT", "t2.name", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "neighbourhood_name", "from", "neighbourhood", "as", "t1", "join", "business", "as", "t2", "on", "t1", ".", "business_id", "=", "t2", ".", "business_id", "where", "t2", ".", "city", "=", "value", "group", "by", "t1", ".", "neighbourhood_name", "order", "by", "count", "(", "distinct", "t2", ".", "name", ")", "desc", "limit", "value"], "question": "which neighbourhood has the most number of businesses in Madison", "question_toks": ["which", "neighbourhood", "has", "the", "most", "number", "of", "businesses", "in", "Madison"], "guid": 7355}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a good restaurant in the yosemite and mono lake area for french food ?", "sql": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good restaurant in the yosemite and mono lake area for french food ?", "question_toks": ["give", "me", "a", "good", "restaurant", "in", "the", "yosemite", "and", "mono", "lake", "area", "for", "french", "food", "?"], "guid": 7356}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What is the apartment number of the apartment with the most beds?", "sql": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1", "query_toks": ["SELECT", "apt_number", "FROM", "Apartments", "ORDER", "BY", "bedroom_count", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "apt_number", "from", "apartments", "order", "by", "bedroom_count", "desc", "limit", "value"], "question": "What is the apartment number of the apartment with the most beds?", "question_toks": ["What", "is", "the", "apartment", "number", "of", "the", "apartment", "with", "the", "most", "beds", "?"], "guid": 7357}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | which business has the most number of checkins", "sql": "SELECT t1.name FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY SUM ( t2.count ) DESC LIMIT 1;", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY SUM ( t2.count ) DESC LIMIT 1;", "query_toks": ["SELECT", "t1.name", "FROM", "checkin", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "GROUP", "BY", "t1.name", "ORDER", "BY", "SUM", "(", "t2.count", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "checkin", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "group", "by", "t1", ".", "name", "order", "by", "sum", "(", "t2", ".", "count", ")", "desc", "limit", "value"], "question": "which business has the most number of checkins", "question_toks": ["which", "business", "has", "the", "most", "number", "of", "checkins"], "guid": 7358}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | What are the average and maximum number of tickets bought in all visits?", "sql": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit", "example": {"db_id": "museum_visit", "query": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit", "query_toks": ["SELECT", "avg", "(", "num_of_ticket", ")", ",", "max", "(", "num_of_ticket", ")", "FROM", "visit"], "query_toks_no_value": ["select", "avg", "(", "num_of_ticket", ")", ",", "max", "(", "num_of_ticket", ")", "from", "visit"], "question": "What are the average and maximum number of tickets bought in all visits?", "question_toks": ["What", "are", "the", "average", "and", "maximum", "number", "of", "tickets", "bought", "in", "all", "visits", "?"], "guid": 7359}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What are the booking start and end dates of the apartments with type code \"Duplex\"?", "sql": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.apt_type_code", "=", "``", "Duplex", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "apt_type_code", "=", "value"], "question": "What are the booking start and end dates of the apartments with type code \"Duplex\"?", "question_toks": ["What", "are", "the", "booking", "start", "and", "end", "dates", "of", "the", "apartments", "with", "type", "code", "``", "Duplex", "''", "?"], "guid": 7360}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the details and star ratings of the three hotels with the lowest price ranges?", "sql": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3", "example": {"db_id": "cre_Theme_park", "query": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3", "query_toks": ["SELECT", "other_hotel_details", ",", "star_rating_code", "FROM", "HOTELS", "ORDER", "BY", "price_range", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "other_hotel_details", ",", "star_rating_code", "from", "hotels", "order", "by", "price_range", "asc", "limit", "value"], "question": "What are the details and star ratings of the three hotels with the lowest price ranges?", "question_toks": ["What", "are", "the", "details", "and", "star", "ratings", "of", "the", "three", "hotels", "with", "the", "lowest", "price", "ranges", "?"], "guid": 7361}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What is the average price range of hotels for each each star rating code?", "sql": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code", "example": {"db_id": "cre_Theme_park", "query": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code", "query_toks": ["SELECT", "star_rating_code", ",", "avg", "(", "price_range", ")", "FROM", "HOTELS", "GROUP", "BY", "star_rating_code"], "query_toks_no_value": ["select", "star_rating_code", ",", "avg", "(", "price_range", ")", "from", "hotels", "group", "by", "star_rating_code"], "question": "What is the average price range of hotels for each each star rating code?", "question_toks": ["What", "is", "the", "average", "price", "range", "of", "hotels", "for", "each", "each", "star", "rating", "code", "?"], "guid": 7362}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where are some good arabics in mountain view ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where are some good arabics in mountain view ?", "question_toks": ["where", "are", "some", "good", "arabics", "in", "mountain", "view", "?"], "guid": 7363}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show all distinct location names.", "sql": "SELECT DISTINCT Location_Name FROM LOCATIONS", "example": {"db_id": "cre_Theme_park", "query": "SELECT DISTINCT Location_Name FROM LOCATIONS", "query_toks": ["SELECT", "DISTINCT", "Location_Name", "FROM", "LOCATIONS"], "query_toks_no_value": ["select", "distinct", "location_name", "from", "locations"], "question": "Show all distinct location names.", "question_toks": ["Show", "all", "distinct", "location", "names", "."], "guid": 7364}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is jamerican cuisine ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.name  =  \"jamerican cuisine\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.name  =  \"jamerican cuisine\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.name", "=", "``", "jamerican", "cuisine", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "name", "=", "value"], "question": "where is jamerican cuisine ?", "question_toks": ["where", "is", "jamerican", "cuisine", "?"], "guid": 7365}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Return the number of kids for the room reserved and checked in by DAMIEN TRACHSEL on  Sep 21, 2010.", "sql": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";", "example": {"db_id": "inn_1", "query": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";", "query_toks": ["SELECT", "Kids", "FROM", "Reservations", "WHERE", "CheckIn", "=", "``", "2010-09-21", "''", "AND", "FirstName", "=", "``", "DAMIEN", "''", "AND", "LastName", "=", "``", "TRACHSEL", "''", ";"], "query_toks_no_value": ["select", "kids", "from", "reservations", "where", "checkin", "=", "value", "and", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "Return the number of kids for the room reserved and checked in by DAMIEN TRACHSEL on  Sep 21, 2010.", "question_toks": ["Return", "the", "number", "of", "kids", "for", "the", "room", "reserved", "and", "checked", "in", "by", "DAMIEN", "TRACHSEL", "on", "Sep", "21", ",", "2010", "."], "guid": 7366}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Which buildings have apartments that have more than two bathrooms? Give me the addresses of the buildings.", "sql": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2", "query_toks": ["SELECT", "T1.building_address", "FROM", "Apartment_Buildings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "WHERE", "T2.bathroom_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "building_address", "from", "apartment_buildings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "where", "t2", ".", "bathroom_count", ">", "value"], "question": "Which buildings have apartments that have more than two bathrooms? Give me the addresses of the buildings.", "question_toks": ["Which", "buildings", "have", "apartments", "that", "have", "more", "than", "two", "bathrooms", "?", "Give", "me", "the", "addresses", "of", "the", "buildings", "."], "guid": 7367}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some restaurants good for arabic food in mountain view ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some restaurants good for arabic food in mountain view ?", "question_toks": ["give", "me", "some", "restaurants", "good", "for", "arabic", "food", "in", "mountain", "view", "?"], "guid": 7368}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | What is the number of escape games in \" Madison \" ?", "sql": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Madison", "''", "AND", "t2.category_name", "=", "``", "escape", "games", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "What is the number of escape games in \" Madison \" ?", "question_toks": ["What", "is", "the", "number", "of", "escape", "games", "in", "``", "Madison", "``", "?"], "guid": 7369}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "sql": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011", "example": {"db_id": "museum_visit", "query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011", "query_toks": ["SELECT", "t1.name", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "JOIN", "museum", "AS", "t3", "ON", "t3.Museum_ID", "=", "t2.Museum_ID", "WHERE", "t3.open_year", "<", "2009", "INTERSECT", "SELECT", "t1.name", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "JOIN", "museum", "AS", "t3", "ON", "t3.Museum_ID", "=", "t2.Museum_ID", "WHERE", "t3.open_year", ">", "2011"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "join", "museum", "as", "t3", "on", "t3", ".", "museum_id", "=", "t2", ".", "museum_id", "where", "t3", ".", "open_year", "<", "value", "intersect", "select", "t1", ".", "name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "join", "museum", "as", "t3", "on", "t3", ".", "museum_id", "=", "t2", ".", "museum_id", "where", "t3", ".", "open_year", ">", "value"], "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "question_toks": ["What", "is", "the", "name", "of", "the", "visitor", "who", "visited", "both", "a", "museum", "opened", "before", "2009", "and", "a", "museum", "opened", "after", "2011", "?"], "guid": 7370}}
{"text": "shop: Shop_ID, Address, Num_of_staff, Score, Open_Year; member: Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address; happy_hour: HH_ID, Shop_ID, Month, Num_of_shaff_in_charge; happy_hour_member: HH_ID, Member_ID, Total_amount | How many members have the black membership card?", "sql": "SELECT count(*) FROM member WHERE Membership_card  =  'Black'", "example": {"db_id": "coffee_shop", "query": "SELECT count(*) FROM member WHERE Membership_card  =  'Black'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "member", "WHERE", "Membership_card", "=", "'Black", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "member", "where", "membership_card", "=", "value"], "question": "How many members have the black membership card?", "question_toks": ["How", "many", "members", "have", "the", "black", "membership", "card", "?"], "guid": 7371}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all restaurant that serve Seafood in \" Los Angeles \"", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Los", "Angeles", "''", "AND", "t2.category_name", "=", "``", "Seafood", "''", "AND", "t3.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "category_name", "=", "value"], "question": "Find all restaurant that serve Seafood in \" Los Angeles \"", "question_toks": ["Find", "all", "restaurant", "that", "serve", "Seafood", "in", "``", "Los", "Angeles", "``"], "guid": 7372}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all Bars reviewed by Patrick with at least 3 stars", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.rating  >=  3 AND t2.category_name  =  \"Bars\" AND t4.name  =  \"Patrick\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.rating  >=  3 AND t2.category_name  =  \"Bars\" AND t4.name  =  \"Patrick\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "review", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t4", "ON", "t4.user_id", "=", "t3.user_id", "WHERE", "t1.rating", ">", "=", "3", "AND", "t2.category_name", "=", "``", "Bars", "''", "AND", "t4.name", "=", "``", "Patrick", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "review", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t4", "on", "t4", ".", "user_id", "=", "t3", ".", "user_id", "where", "t1", ".", "rating", ">", "=", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t4", ".", "name", "=", "value"], "question": "Find all Bars reviewed by Patrick with at least 3 stars", "question_toks": ["Find", "all", "Bars", "reviewed", "by", "Patrick", "with", "at", "least", "3", "stars"], "guid": 7373}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where are some good arabics on buchanan in san francisco ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where are some good arabics on buchanan in san francisco ?", "question_toks": ["where", "are", "some", "good", "arabics", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 7374}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What are the names and year of joining for artists that do not have the country \"United States\"?", "sql": "SELECT name ,  year_join FROM artist WHERE country != 'United States'", "example": {"db_id": "theme_gallery", "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'", "query_toks": ["SELECT", "name", ",", "year_join", "FROM", "artist", "WHERE", "country", "!", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "name", ",", "year_join", "from", "artist", "where", "country", "!", "=", "value"], "question": "What are the names and year of joining for artists that do not have the country \"United States\"?", "question_toks": ["What", "are", "the", "names", "and", "year", "of", "joining", "for", "artists", "that", "do", "not", "have", "the", "country", "``", "United", "States", "''", "?"], "guid": 7375}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the average prices of hotels grouped by their pet policy.", "sql": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn", "example": {"db_id": "cre_Theme_park", "query": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn", "query_toks": ["SELECT", "pets_allowed_yn", ",", "avg", "(", "price_range", ")", "FROM", "HOTELS", "GROUP", "BY", "pets_allowed_yn"], "query_toks_no_value": ["select", "pets_allowed_yn", ",", "avg", "(", "price_range", ")", "from", "hotels", "group", "by", "pets_allowed_yn"], "question": "What are the average prices of hotels grouped by their pet policy.", "question_toks": ["What", "are", "the", "average", "prices", "of", "hotels", "grouped", "by", "their", "pet", "policy", "."], "guid": 7376}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What are the names of artists that have not had any exhibitions?", "sql": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)", "example": {"db_id": "theme_gallery", "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)", "query_toks": ["SELECT", "name", "FROM", "artist", "WHERE", "artist_id", "NOT", "IN", "(", "SELECT", "artist_id", "FROM", "exhibition", ")"], "query_toks_no_value": ["select", "name", "from", "artist", "where", "artist_id", "not", "in", "(", "select", "artist_id", "from", "exhibition", ")"], "question": "What are the names of artists that have not had any exhibitions?", "question_toks": ["What", "are", "the", "names", "of", "artists", "that", "have", "not", "had", "any", "exhibitions", "?"], "guid": 7377}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | List the type of bed and name of all traditional rooms.", "sql": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";", "example": {"db_id": "inn_1", "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";", "query_toks": ["SELECT", "roomName", ",", "bedType", "FROM", "Rooms", "WHERE", "decor", "=", "``", "traditional", "''", ";"], "query_toks_no_value": ["select", "roomname", ",", "bedtype", "from", "rooms", "where", "decor", "=", "value"], "question": "List the type of bed and name of all traditional rooms.", "question_toks": ["List", "the", "type", "of", "bed", "and", "name", "of", "all", "traditional", "rooms", "."], "guid": 7378}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show the names and details of all the staff members.", "sql": "SELECT Name ,  Other_Details FROM Staff", "example": {"db_id": "cre_Theme_park", "query": "SELECT Name ,  Other_Details FROM Staff", "query_toks": ["SELECT", "Name", ",", "Other_Details", "FROM", "Staff"], "query_toks_no_value": ["select", "name", ",", "other_details", "from", "staff"], "question": "Show the names and details of all the staff members.", "question_toks": ["Show", "the", "names", "and", "details", "of", "all", "the", "staff", "members", "."], "guid": 7379}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What are the room name and base price of the room with the lowest base price?", "sql": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;", "example": {"db_id": "inn_1", "query": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;", "query_toks": ["SELECT", "roomName", ",", "basePrice", "FROM", "Rooms", "ORDER", "BY", "basePrice", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "roomname", ",", "baseprice", "from", "rooms", "order", "by", "baseprice", "asc", "limit", "value"], "question": "What are the room name and base price of the room with the lowest base price?", "question_toks": ["What", "are", "the", "room", "name", "and", "base", "price", "of", "the", "room", "with", "the", "lowest", "base", "price", "?"], "guid": 7380}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Which tourist attractions can we get to by bus? Tell me the names of the attractions.", "sql": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"", "query_toks": ["SELECT", "Name", "FROM", "TOURIST_ATTRACTIONS", "WHERE", "How_to_Get_There", "=", "``", "bus", "''"], "query_toks_no_value": ["select", "name", "from", "tourist_attractions", "where", "how_to_get_there", "=", "value"], "question": "Which tourist attractions can we get to by bus? Tell me the names of the attractions.", "question_toks": ["Which", "tourist", "attractions", "can", "we", "get", "to", "by", "bus", "?", "Tell", "me", "the", "names", "of", "the", "attractions", "."], "guid": 7381}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | What is the average speed of roller coasters?", "sql": "SELECT avg(Speed) FROM roller_coaster", "example": {"db_id": "roller_coaster", "query": "SELECT avg(Speed) FROM roller_coaster", "query_toks": ["SELECT", "avg", "(", "Speed", ")", "FROM", "roller_coaster"], "query_toks_no_value": ["select", "avg", "(", "speed", ")", "from", "roller_coaster"], "question": "What is the average speed of roller coasters?", "question_toks": ["What", "is", "the", "average", "speed", "of", "roller", "coasters", "?"], "guid": 7382}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | Give me the best place in san francisco for french food ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "Give me the best place in san francisco for french food ?", "question_toks": ["Give", "me", "the", "best", "place", "in", "san", "francisco", "for", "french", "food", "?"], "guid": 7383}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | Find the number of visitors who did not visit any museum opened after 2010.", "sql": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)", "example": {"db_id": "museum_visit", "query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "visitor", "WHERE", "id", "NOT", "IN", "(", "SELECT", "t2.visitor_id", "FROM", "museum", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.Museum_ID", "=", "t2.Museum_ID", "WHERE", "t1.open_year", ">", "2010", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "visitor", "where", "id", "not", "in", "(", "select", "t2", ".", "visitor_id", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "museum_id", "=", "t2", ".", "museum_id", "where", "t1", ".", "open_year", ">", "value", ")"], "question": "Find the number of visitors who did not visit any museum opened after 2010.", "question_toks": ["Find", "the", "number", "of", "visitors", "who", "did", "not", "visit", "any", "museum", "opened", "after", "2010", "."], "guid": 7384}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Return me the number of cities that has \" Panda Express \" .", "sql": "SELECT COUNT ( DISTINCT city ) FROM business WHERE name  =  \"Panda Express\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT city ) FROM business WHERE name  =  \"Panda Express\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "city", ")", "FROM", "business", "WHERE", "name", "=", "``", "Panda", "Express", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "city", ")", "from", "business", "where", "name", "=", "value"], "question": "Return me the number of cities that has \" Panda Express \" .", "question_toks": ["Return", "me", "the", "number", "of", "cities", "that", "has", "``", "Panda", "Express", "``", "."], "guid": 7385}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the names and descriptions of the photos taken at the tourist attraction \"film festival\"?", "sql": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\"", "query_toks": ["SELECT", "T1.Name", ",", "T1.Description", "FROM", "PHOTOS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.Name", "=", "``", "film", "festival", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "description", "from", "photos", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "name", "=", "value"], "question": "What are the names and descriptions of the photos taken at the tourist attraction \"film festival\"?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "the", "photos", "taken", "at", "the", "tourist", "attraction", "``", "film", "festival", "''", "?"], "guid": 7386}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a restaurant on buchanan in san francisco that serves good arabic food ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a restaurant on buchanan in san francisco that serves good arabic food ?", "question_toks": ["give", "me", "a", "restaurant", "on", "buchanan", "in", "san", "francisco", "that", "serves", "good", "arabic", "food", "?"], "guid": 7387}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many reviews does \" Acacia Cafe \" have ?", "sql": "SELECT review_count FROM business WHERE name  =  \"Acacia Cafe\";", "example": {"db_id": "yelp", "query": "SELECT review_count FROM business WHERE name  =  \"Acacia Cafe\";", "query_toks": ["SELECT", "review_count", "FROM", "business", "WHERE", "name", "=", "``", "Acacia", "Cafe", "''", ";"], "query_toks_no_value": ["select", "review_count", "from", "business", "where", "name", "=", "value"], "question": "How many reviews does \" Acacia Cafe \" have ?", "question_toks": ["How", "many", "reviews", "does", "``", "Acacia", "Cafe", "``", "have", "?"], "guid": 7388}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some good places on buchanan in san francisco for arabic food ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good places on buchanan in san francisco for arabic food ?", "question_toks": ["give", "me", "some", "good", "places", "on", "buchanan", "in", "san", "francisco", "for", "arabic", "food", "?"], "guid": 7389}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Which apartment type code is the most common among apartments with more than one bathroom?", "sql": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "apt_type_code", "FROM", "Apartments", "WHERE", "bathroom_count", ">", "1", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "apt_type_code", "from", "apartments", "where", "bathroom_count", ">", "value", "group", "by", "apt_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which apartment type code is the most common among apartments with more than one bathroom?", "question_toks": ["Which", "apartment", "type", "code", "is", "the", "most", "common", "among", "apartments", "with", "more", "than", "one", "bathroom", "?"], "guid": 7390}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a good restaurant on buchanan in san francisco for arabic food ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good restaurant on buchanan in san francisco for arabic food ?", "question_toks": ["give", "me", "a", "good", "restaurant", "on", "buchanan", "in", "san", "francisco", "for", "arabic", "food", "?"], "guid": 7391}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Find the id and star rating of each hotel and sort them in increasing order of price.", "sql": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC", "example": {"db_id": "cre_Theme_park", "query": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC", "query_toks": ["SELECT", "hotel_id", ",", "star_rating_code", "FROM", "HOTELS", "ORDER", "BY", "price_range", "ASC"], "query_toks_no_value": ["select", "hotel_id", ",", "star_rating_code", "from", "hotels", "order", "by", "price_range", "asc"], "question": "Find the id and star rating of each hotel and sort them in increasing order of price.", "question_toks": ["Find", "the", "id", "and", "star", "rating", "of", "each", "hotel", "and", "sort", "them", "in", "increasing", "order", "of", "price", "."], "guid": 7392}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can we find some restaurants in the bay area ?", "sql": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "LOCATION", "AS", "t2", "JOIN", "restaurant", "AS", "t1", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.city_name", "IN", "(", "SELECT", "city_name", "FROM", "geographic", "WHERE", "region", "=", "``", "bay", "area", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "location", "as", "t2", "join", "restaurant", "as", "t1", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "city_name", "in", "(", "select", "city_name", "from", "geographic", "where", "region", "=", "value", ")"], "question": "where can we find some restaurants in the bay area ?", "question_toks": ["where", "can", "we", "find", "some", "restaurants", "in", "the", "bay", "area", "?"], "guid": 7393}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | find all the restaurant in Pennsylvania", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pennsylvania\" AND t2.category_name  =  \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pennsylvania\" AND t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.state", "=", "``", "Pennsylvania", "''", "AND", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "state", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "find all the restaurant in Pennsylvania", "question_toks": ["find", "all", "the", "restaurant", "in", "Pennsylvania"], "guid": 7394}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | At which restaurant did the students spend the least amount of time? List restaurant and the time students spent on in total.", "sql": "SELECT Restaurant.ResName ,  sum(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum(Visits_Restaurant.Spent) ASC LIMIT 1;", "example": {"db_id": "restaurant_1", "query": "SELECT Restaurant.ResName ,  sum(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum(Visits_Restaurant.Spent) ASC LIMIT 1;", "query_toks": ["SELECT", "Restaurant.ResName", ",", "sum", "(", "Visits_Restaurant.Spent", ")", "FROM", "Visits_Restaurant", "JOIN", "Restaurant", "ON", "Visits_Restaurant.ResID", "=", "Restaurant.ResID", "GROUP", "BY", "Restaurant.ResID", "ORDER", "BY", "sum", "(", "Visits_Restaurant.Spent", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "restaurant.resname", ",", "sum", "(", "visits_restaurant.spent", ")", "from", "visits_restaurant", "join", "restaurant", "on", "visits_restaurant.resid", "=", "restaurant.resid", "group", "by", "restaurant.resid", "order", "by", "sum", "(", "visits_restaurant.spent", ")", "asc", "limit", "value"], "question": "At which restaurant did the students spend the least amount of time? List restaurant and the time students spent on in total.", "question_toks": ["At", "which", "restaurant", "did", "the", "students", "spend", "the", "least", "amount", "of", "time", "?", "List", "restaurant", "and", "the", "time", "students", "spent", "on", "in", "total", "."], "guid": 7395}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what is the best american in the bay area ?", "sql": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "what is the best american in the bay area ?", "question_toks": ["what", "is", "the", "best", "american", "in", "the", "bay", "area", "?"], "guid": 7396}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What is the name of the tourist attraction that is associated with the photo \"game1\"?", "sql": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"", "query_toks": ["SELECT", "T2.Name", "FROM", "PHOTOS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T1.Name", "=", "``", "game1", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "photos", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t1", ".", "name", "=", "value"], "question": "What is the name of the tourist attraction that is associated with the photo \"game1\"?", "question_toks": ["What", "is", "the", "name", "of", "the", "tourist", "attraction", "that", "is", "associated", "with", "the", "photo", "``", "game1", "''", "?"], "guid": 7397}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all restaurant Seafood in Los Angeles", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Los", "Angeles", "''", "AND", "t2.category_name", "=", "``", "Seafood", "''", "AND", "t3.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "category_name", "=", "value"], "question": "Find all restaurant Seafood in Los Angeles", "question_toks": ["Find", "all", "restaurant", "Seafood", "in", "Los", "Angeles"], "guid": 7398}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where are some restaurants good for french food in the yosemite and mono lake area ?", "sql": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where are some restaurants good for french food in the yosemite and mono lake area ?", "question_toks": ["where", "are", "some", "restaurants", "good", "for", "french", "food", "in", "the", "yosemite", "and", "mono", "lake", "area", "?"], "guid": 7399}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | What neighbourhood is restaurant \" Flat Top Grill \" in ?", "sql": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.name  =  \"Flat Top Grill\" AND t3.category_name  =  \"category_category_name0\";", "example": {"db_id": "yelp", "query": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.name  =  \"Flat Top Grill\" AND t3.category_name  =  \"category_category_name0\";", "query_toks": ["SELECT", "t1.neighbourhood_name", "FROM", "category", "AS", "t3", "JOIN", "business", "AS", "t2", "ON", "t3.business_id", "=", "t2.business_id", "JOIN", "neighbourhood", "AS", "t1", "ON", "t1.business_id", "=", "t2.business_id", "WHERE", "t2.name", "=", "``", "Flat", "Top", "Grill", "''", "AND", "t3.category_name", "=", "``", "category_category_name0", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "neighbourhood_name", "from", "category", "as", "t3", "join", "business", "as", "t2", "on", "t3", ".", "business_id", "=", "t2", ".", "business_id", "join", "neighbourhood", "as", "t1", "on", "t1", ".", "business_id", "=", "t2", ".", "business_id", "where", "t2", ".", "name", "=", "value", "and", "t3", ".", "category_name", "=", "value"], "question": "What neighbourhood is restaurant \" Flat Top Grill \" in ?", "question_toks": ["What", "neighbourhood", "is", "restaurant", "``", "Flat", "Top", "Grill", "``", "in", "?"], "guid": 7400}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some good restaurants on buchanan in san francisco for arabic food ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good restaurants on buchanan in san francisco for arabic food ?", "question_toks": ["give", "me", "some", "good", "restaurants", "on", "buchanan", "in", "san", "francisco", "for", "arabic", "food", "?"], "guid": 7401}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Show the theme for exhibitions with both records of an attendance below 100 and above 500.", "sql": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500", "example": {"db_id": "theme_gallery", "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500", "query_toks": ["SELECT", "T2.theme", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T1.attendance", "<", "100", "INTERSECT", "SELECT", "T2.theme", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T1.attendance", ">", "500"], "query_toks_no_value": ["select", "t2", ".", "theme", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t1", ".", "attendance", "<", "value", "intersect", "select", "t2", ".", "theme", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t1", ".", "attendance", ">", "value"], "question": "Show the theme for exhibitions with both records of an attendance below 100 and above 500.", "question_toks": ["Show", "the", "theme", "for", "exhibitions", "with", "both", "records", "of", "an", "attendance", "below", "100", "and", "above", "500", "."], "guid": 7402}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Give me all the Moroccan restaurant in Texas", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.state  =  \"Texas\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.state  =  \"Texas\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "WHERE", "t1.state", "=", "``", "Texas", "''", "AND", "t2.category_name", "=", "``", "Moroccan", "''", "AND", "t3.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "state", "=", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "category_name", "=", "value"], "question": "Give me all the Moroccan restaurant in Texas", "question_toks": ["Give", "me", "all", "the", "Moroccan", "restaurant", "in", "Texas"], "guid": 7403}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | How many tourists did not make any visit?", "sql": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )", "example": {"db_id": "cre_Theme_park", "query": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Visitors", "WHERE", "Tourist_ID", "NOT", "IN", "(", "SELECT", "Tourist_ID", "FROM", "Visits", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "visitors", "where", "tourist_id", "not", "in", "(", "select", "tourist_id", "from", "visits", ")"], "question": "How many tourists did not make any visit?", "question_toks": ["How", "many", "tourists", "did", "not", "make", "any", "visit", "?"], "guid": 7404}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | Show the names of countries and the average speed of roller coasters from each country.", "sql": "SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name", "example": {"db_id": "roller_coaster", "query": "SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name", "query_toks": ["SELECT", "T1.Name", ",", "avg", "(", "T2.Speed", ")", "FROM", "country", "AS", "T1", "JOIN", "roller_coaster", "AS", "T2", "ON", "T1.Country_ID", "=", "T2.Country_ID", "GROUP", "BY", "T1.Name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "avg", "(", "t2", ".", "speed", ")", "from", "country", "as", "t1", "join", "roller_coaster", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country_id", "group", "by", "t1", ".", "name"], "question": "Show the names of countries and the average speed of roller coasters from each country.", "question_toks": ["Show", "the", "names", "of", "countries", "and", "the", "average", "speed", "of", "roller", "coasters", "from", "each", "country", "."], "guid": 7405}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me the best restaurant in the bay area for american food ?", "sql": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "give me the best restaurant in the bay area for american food ?", "question_toks": ["give", "me", "the", "best", "restaurant", "in", "the", "bay", "area", "for", "american", "food", "?"], "guid": 7406}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can i eat french food in mountain view ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"french\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"french\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "french", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "where can i eat french food in mountain view ?", "question_toks": ["where", "can", "i", "eat", "french", "food", "in", "mountain", "view", "?"], "guid": 7407}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | how many users reviewed \" Sushi Too \" in Pittsburgh", "sql": "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Pittsburgh\" AND t1.name  =  \"Sushi Too\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Pittsburgh\" AND t1.name  =  \"Sushi Too\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t3.name", ")", "FROM", "review", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t3", "ON", "t3.user_id", "=", "t2.user_id", "WHERE", "t1.city", "=", "``", "Pittsburgh", "''", "AND", "t1.name", "=", "``", "Sushi", "Too", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t3", ".", "name", ")", "from", "review", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t3", "on", "t3", ".", "user_id", "=", "t2", ".", "user_id", "where", "t1", ".", "city", "=", "value", "and", "t1", ".", "name", "=", "value"], "question": "how many users reviewed \" Sushi Too \" in Pittsburgh", "question_toks": ["how", "many", "users", "reviewed", "``", "Sushi", "Too", "``", "in", "Pittsburgh"], "guid": 7408}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the total number of king beds available.", "sql": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';", "example": {"db_id": "inn_1", "query": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';", "query_toks": ["SELECT", "sum", "(", "beds", ")", "FROM", "Rooms", "WHERE", "bedtype", "=", "'King", "'", ";"], "query_toks_no_value": ["select", "sum", "(", "beds", ")", "from", "rooms", "where", "bedtype", "=", "value"], "question": "Find the total number of king beds available.", "question_toks": ["Find", "the", "total", "number", "of", "king", "beds", "available", "."], "guid": 7409}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a restaurant in alameda ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value"], "question": "give me a restaurant in alameda ?", "question_toks": ["give", "me", "a", "restaurant", "in", "alameda", "?"], "guid": 7410}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find users whose average review rating is below 3", "sql": "SELECT t2.name FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id GROUP BY t2.name HAVING AVG ( t1.rating )  <  3;", "example": {"db_id": "yelp", "query": "SELECT t2.name FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id GROUP BY t2.name HAVING AVG ( t1.rating )  <  3;", "query_toks": ["SELECT", "t2.name", "FROM", "USER", "AS", "t2", "JOIN", "review", "AS", "t1", "ON", "t2.user_id", "=", "t1.user_id", "GROUP", "BY", "t2.name", "HAVING", "AVG", "(", "t1.rating", ")", "<", "3", ";"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "user", "as", "t2", "join", "review", "as", "t1", "on", "t2", ".", "user_id", "=", "t1", ".", "user_id", "group", "by", "t2", ".", "name", "having", "avg", "(", "t1", ".", "rating", ")", "<", "value"], "question": "Find users whose average review rating is below 3", "question_toks": ["Find", "users", "whose", "average", "review", "rating", "is", "below", "3"], "guid": 7411}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can i find a jamerican cuisine in san francisco ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.name", "=", "``", "jamerican", "cuisine", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "name", "=", "value"], "question": "where can i find a jamerican cuisine in san francisco ?", "question_toks": ["where", "can", "i", "find", "a", "jamerican", "cuisine", "in", "san", "francisco", "?"], "guid": 7412}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Which room has the highest rate? List the room's full name, rate, check in and check out date.", "sql": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;", "example": {"db_id": "inn_1", "query": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;", "query_toks": ["SELECT", "T2.roomName", ",", "T1.Rate", ",", "T1.CheckIn", ",", "T1.CheckOut", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "GROUP", "BY", "T1.Room", "ORDER", "BY", "T1.Rate", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "roomname", ",", "t1", ".", "rate", ",", "t1", ".", "checkin", ",", "t1", ".", "checkout", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "group", "by", "t1", ".", "room", "order", "by", "t1", ".", "rate", "desc", "limit", "value"], "question": "Which room has the highest rate? List the room's full name, rate, check in and check out date.", "question_toks": ["Which", "room", "has", "the", "highest", "rate", "?", "List", "the", "room", "'s", "full", "name", ",", "rate", ",", "check", "in", "and", "check", "out", "date", "."], "guid": 7413}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many people reviewed restaurant \" Vintner Grill \" in 2010 ?", "sql": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Vintner Grill\" AND t2.category_name  =  \"category_category_name0\" AND t3.year  =  2010;", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Vintner Grill\" AND t2.category_name  =  \"category_category_name0\" AND t3.year  =  2010;", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t4.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "review", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t4", "ON", "t4.user_id", "=", "t3.user_id", "WHERE", "t1.name", "=", "``", "Vintner", "Grill", "''", "AND", "t2.category_name", "=", "``", "category_category_name0", "''", "AND", "t3.year", "=", "2010", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t4", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "review", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t4", "on", "t4", ".", "user_id", "=", "t3", ".", "user_id", "where", "t1", ".", "name", "=", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "year", "=", "value"], "question": "How many people reviewed restaurant \" Vintner Grill \" in 2010 ?", "question_toks": ["How", "many", "people", "reviewed", "restaurant", "``", "Vintner", "Grill", "``", "in", "2010", "?"], "guid": 7414}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me the best american restaurant in the bay area ?", "sql": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "give me the best american restaurant in the bay area ?", "question_toks": ["give", "me", "the", "best", "american", "restaurant", "in", "the", "bay", "area", "?"], "guid": 7415}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | How many exhibition are there in year 2005 or after?", "sql": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005", "example": {"db_id": "theme_gallery", "query": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "exhibition", "WHERE", "YEAR", ">", "=", "2005"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "exhibition", "where", "year", ">", "=", "value"], "question": "How many exhibition are there in year 2005 or after?", "question_toks": ["How", "many", "exhibition", "are", "there", "in", "year", "2005", "or", "after", "?"], "guid": 7416}}