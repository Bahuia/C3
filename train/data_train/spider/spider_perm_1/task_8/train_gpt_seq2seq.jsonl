{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | Give me the best french restaurant in san francisco ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t1.food_type = \"french\" AND t1.rating = (SELECT MAX(t1.rating) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t1.food_type = \"french\");", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "Give me the best french restaurant in san francisco ?", "question_toks": ["Give", "me", "the", "best", "french", "restaurant", "in", "san", "francisco", "?"], "guid": 6828}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a good arabic on buchanan in san francisco ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t2.street_name = \"buchanan\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good arabic on buchanan in san francisco ?", "question_toks": ["where", "is", "a", "good", "arabic", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 6829}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some restaurants good for french food in the yosemite and mono lake area ?", "sql": "SELECT t3.house_number, t1.name FROM geographic AS t2 JOIN restaurant AS t1 ON t1.city_name = t2.city_name JOIN location AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = 'yosemite and mono lake area' AND t1.food_type = 'french' AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some restaurants good for french food in the yosemite and mono lake area ?", "question_toks": ["give", "me", "some", "restaurants", "good", "for", "french", "food", "in", "the", "yosemite", "and", "mono", "lake", "area", "?"], "guid": 6830}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many tips have been written in 2015", "sql": "SELECT COUNT ( DISTINCT text ) FROM tip WHERE YEAR  =  2015;", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT text ) FROM tip WHERE YEAR  =  2015;", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "text", ")", "FROM", "tip", "WHERE", "YEAR", "=", "2015", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "text", ")", "from", "tip", "where", "year", "=", "value"], "question": "How many tips have been written in 2015", "question_toks": ["How", "many", "tips", "have", "been", "written", "in", "2015"], "guid": 6831}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many Bars in Dallas have a rating above 3.5 ?", "sql": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = \"Dallas\" AND t1.rating > 3.5 AND t2.category_name = \"Bars\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Bars\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Dallas", "''", "AND", "t1.rating", ">", "3.5", "AND", "t2.category_name", "=", "``", "Bars", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t1", ".", "rating", ">", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "How many Bars in Dallas have a rating above 3.5 ?", "question_toks": ["How", "many", "Bars", "in", "Dallas", "have", "a", "rating", "above", "3.5", "?"], "guid": 6832}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | What is the rating of the restaurant Subway?", "sql": "SELECT Rating FROM Restaurant WHERE ResName = 'Subway';", "example": {"db_id": "restaurant_1", "query": "SELECT Rating FROM Restaurant WHERE ResName = \"Subway\";", "query_toks": ["SELECT", "Rating", "FROM", "Restaurant", "WHERE", "ResName", "=", "``", "Subway", "''", ";"], "query_toks_no_value": ["select", "rating", "from", "restaurant", "where", "resname", "=", "value"], "question": "What is the rating of the restaurant Subway?", "question_toks": ["What", "is", "the", "rating", "of", "the", "restaurant", "Subway", "?"], "guid": 6833}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what is a good restaurant in the bay area ?", "sql": "SELECT t2.house_number, t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN (SELECT city_name FROM geographic WHERE region = \"bay area\") AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "LOCATION", "AS", "t2", "JOIN", "restaurant", "AS", "t1", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.city_name", "IN", "(", "SELECT", "city_name", "FROM", "geographic", "WHERE", "region", "=", "``", "region0", "''", ")", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "location", "as", "t2", "join", "restaurant", "as", "t1", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "city_name", "in", "(", "select", "city_name", "from", "geographic", "where", "region", "=", "value", ")", "and", "t1", ".", "rating", ">", "value"], "question": "what is a good restaurant in the bay area ?", "question_toks": ["what", "is", "a", "good", "restaurant", "in", "the", "bay", "area", "?"], "guid": 6834}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Return the themes, dates, and attendance for exhibitions that happened in 2004.", "sql": "SELECT T2.theme , T1.date , T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004", "example": {"db_id": "theme_gallery", "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004", "query_toks": ["SELECT", "T2.theme", ",", "T1.date", ",", "T1.attendance", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T2.year", "=", "2004"], "query_toks_no_value": ["select", "t2", ".", "theme", ",", "t1", ".", "date", ",", "t1", ".", "attendance", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t2", ".", "year", "=", "value"], "question": "Return the themes, dates, and attendance for exhibitions that happened in 2004.", "question_toks": ["Return", "the", "themes", ",", "dates", ",", "and", "attendance", "for", "exhibitions", "that", "happened", "in", "2004", "."], "guid": 6835}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the names and ids of the tourist attractions that are visited at most once?", "sql": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*) <= 1", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1", "query_toks": ["SELECT", "T1.Name", ",", "T1.Tourist_Attraction_ID", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "GROUP", "BY", "T2.Tourist_Attraction_ID", "HAVING", "count", "(", "*", ")", "<", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "tourist_attraction_id", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "group", "by", "t2", ".", "tourist_attraction_id", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "What are the names and ids of the tourist attractions that are visited at most once?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "the", "tourist", "attractions", "that", "are", "visited", "at", "most", "once", "?"], "guid": 6836}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | What is the age of student Linda Smith?", "sql": "SELECT Age FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";", "example": {"db_id": "restaurant_1", "query": "SELECT Age FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";", "query_toks": ["SELECT", "Age", "FROM", "Student", "WHERE", "Fname", "=", "``", "Linda", "''", "AND", "Lname", "=", "``", "Smith", "''", ";"], "query_toks_no_value": ["select", "age", "from", "student", "where", "fname", "=", "value", "and", "lname", "=", "value"], "question": "What is the age of student Linda Smith?", "question_toks": ["What", "is", "the", "age", "of", "student", "Linda", "Smith", "?"], "guid": 6837}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find the number of tips written in each month", "sql": "SELECT COUNT ( DISTINCT text )  ,  MONTH FROM tip GROUP BY MONTH;", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT text )  ,  MONTH FROM tip GROUP BY MONTH;", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "text", ")", ",", "MONTH", "FROM", "tip", "GROUP", "BY", "MONTH", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "text", ")", ",", "month", "from", "tip", "group", "by", "month"], "question": "Find the number of tips written in each month", "question_toks": ["Find", "the", "number", "of", "tips", "written", "in", "each", "month"], "guid": 6838}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | For each tourist attraction, return its name and the date when the tourists named Vincent or Vivian visited there.", "sql": "SELECT T1.Name , T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = \"Vincent\" OR T2.Tourist_Details = \"Vivian\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\"", "query_toks": ["SELECT", "T1.Name", ",", "T3.Visit_Date", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Vincent", "''", "OR", "T2.Tourist_Details", "=", "``", "Vivian", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "visit_date", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value", "or", "t2", ".", "tourist_details", "=", "value"], "question": "For each tourist attraction, return its name and the date when the tourists named Vincent or Vivian visited there.", "question_toks": ["For", "each", "tourist", "attraction", ",", "return", "its", "name", "and", "the", "date", "when", "the", "tourists", "named", "Vincent", "or", "Vivian", "visited", "there", "."], "guid": 6839}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | List all the Seafood restaurant in \" Los Angeles \"", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.city = \"Los Angeles\" AND t2.category_name = \"Seafood\" AND t3.category_name = \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Los", "Angeles", "''", "AND", "t2.category_name", "=", "``", "Seafood", "''", "AND", "t3.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "category_name", "=", "value"], "question": "List all the Seafood restaurant in \" Los Angeles \"", "question_toks": ["List", "all", "the", "Seafood", "restaurant", "in", "``", "Los", "Angeles", "``"], "guid": 6840}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all cities in Texas in which there is a restaurant called \" MGM Grand Buffet \"", "sql": "SELECT t1.city FROM business AS t1 JOIN category AS t2 ON t1.business_id = t2.business_id WHERE t1.name = \"MGM Grand Buffet\" AND t1.state = \"Texas\" AND t2.category_name = \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"MGM Grand Buffet\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.city", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.name", "=", "``", "MGM", "Grand", "Buffet", "''", "AND", "t1.state", "=", "``", "Texas", "''", "AND", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "name", "=", "value", "and", "t1", ".", "state", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "Find all cities in Texas in which there is a restaurant called \" MGM Grand Buffet \"", "question_toks": ["Find", "all", "cities", "in", "Texas", "in", "which", "there", "is", "a", "restaurant", "called", "``", "MGM", "Grand", "Buffet", "``"], "guid": 6841}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | Advisor 1121 has how many students?", "sql": "SELECT COUNT(*) FROM student WHERE advisor = 1121", "example": {"db_id": "restaurant_1", "query": "SELECT count(*) FROM Student WHERE Advisor =  1121;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Student", "WHERE", "Advisor", "=", "1121", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "student", "where", "advisor", "=", "value"], "question": "Advisor 1121 has how many students?", "question_toks": ["Advisor", "1121", "has", "how", "many", "students", "?"], "guid": 6842}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | Show the names of countries that have more than one roller coaster.", "sql": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name HAVING COUNT(*) > 1", "example": {"db_id": "roller_coaster", "query": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "roller_coaster", "AS", "T2", "ON", "T1.Country_ID", "=", "T2.Country_ID", "GROUP", "BY", "T1.Name", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "roller_coaster", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country_id", "group", "by", "t1", ".", "name", "having", "count", "(", "*", ")", ">", "value"], "question": "Show the names of countries that have more than one roller coaster.", "question_toks": ["Show", "the", "names", "of", "countries", "that", "have", "more", "than", "one", "roller", "coaster", "."], "guid": 6843}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all tips about \" Vintner Grill \" that received more than 9 likes", "sql": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = \"Vintner Grill\" AND t2.likes > 9", "example": {"db_id": "yelp", "query": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Vintner Grill\" AND t2.likes  >  9;", "query_toks": ["SELECT", "t2.text", "FROM", "tip", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.name", "=", "``", "Vintner", "Grill", "''", "AND", "t2.likes", ">", "9", ";"], "query_toks_no_value": ["select", "t2", ".", "text", "from", "tip", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "name", "=", "value", "and", "t2", ".", "likes", ">", "value"], "question": "Find all tips about \" Vintner Grill \" that received more than 9 likes", "question_toks": ["Find", "all", "tips", "about", "``", "Vintner", "Grill", "``", "that", "received", "more", "than", "9", "likes"], "guid": 6844}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show details of all visitors.", "sql": "SELECT Tourist_Details FROM Visitors", "example": {"db_id": "cre_Theme_park", "query": "SELECT Tourist_Details FROM VISITORS", "query_toks": ["SELECT", "Tourist_Details", "FROM", "VISITORS"], "query_toks_no_value": ["select", "tourist_details", "from", "visitors"], "question": "Show details of all visitors.", "question_toks": ["Show", "details", "of", "all", "visitors", "."], "guid": 6845}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Which themes have had corresponding exhibitions that have had attendance both below 100 and above 500?", "sql": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500", "example": {"db_id": "theme_gallery", "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500", "query_toks": ["SELECT", "T2.theme", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T1.attendance", "<", "100", "INTERSECT", "SELECT", "T2.theme", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T1.attendance", ">", "500"], "query_toks_no_value": ["select", "t2", ".", "theme", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t1", ".", "attendance", "<", "value", "intersect", "select", "t2", ".", "theme", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t1", ".", "attendance", ">", "value"], "question": "Which themes have had corresponding exhibitions that have had attendance both below 100 and above 500?", "question_toks": ["Which", "themes", "have", "had", "corresponding", "exhibitions", "that", "have", "had", "attendance", "both", "below", "100", "and", "above", "500", "?"], "guid": 6846}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | How many kids stay in the room DAMIEN TRACHSEL checked in on Sep 21, 2010?", "sql": "SELECT Kids FROM Reservations WHERE CheckIn = \"2010-09-21\" AND FirstName = \"DAMIEN\" AND LastName = \"TRACHSEL\";", "example": {"db_id": "inn_1", "query": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";", "query_toks": ["SELECT", "Kids", "FROM", "Reservations", "WHERE", "CheckIn", "=", "``", "2010-09-21", "''", "AND", "FirstName", "=", "``", "DAMIEN", "''", "AND", "LastName", "=", "``", "TRACHSEL", "''", ";"], "query_toks_no_value": ["select", "kids", "from", "reservations", "where", "checkin", "=", "value", "and", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "How many kids stay in the room DAMIEN TRACHSEL checked in on Sep 21, 2010?", "question_toks": ["How", "many", "kids", "stay", "in", "the", "room", "DAMIEN", "TRACHSEL", "checked", "in", "on", "Sep", "21", ",", "2010", "?"], "guid": 6847}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | Which student visited restaurant most often? List student's first name and last name.", "sql": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "restaurant_1", "query": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Student.Fname", ",", "Student.Lname", "FROM", "Student", "JOIN", "Visits_Restaurant", "ON", "Student.StuID", "=", "Visits_Restaurant.StuID", "GROUP", "BY", "Student.StuID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "student.fname", ",", "student.lname", "from", "student", "join", "visits_restaurant", "on", "student.stuid", "=", "visits_restaurant.stuid", "group", "by", "student.stuid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which student visited restaurant most often? List student's first name and last name.", "question_toks": ["Which", "student", "visited", "restaurant", "most", "often", "?", "List", "student", "'s", "first", "name", "and", "last", "name", "."], "guid": 6848}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where are some good arabic restaurants in mountain view ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where are some good arabic restaurants in mountain view ?", "question_toks": ["where", "are", "some", "good", "arabic", "restaurants", "in", "mountain", "view", "?"], "guid": 6849}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some good arabics on buchanan in san francisco ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t2.street_name = \"buchanan\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good arabics on buchanan in san francisco ?", "question_toks": ["give", "me", "some", "good", "arabics", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 6850}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can we find a restaurant in alameda ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN location AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"alameda\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value"], "question": "where can we find a restaurant in alameda ?", "question_toks": ["where", "can", "we", "find", "a", "restaurant", "in", "alameda", "?"], "guid": 6851}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the details and opening hours of the museums?", "sql": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Museum_Details", ",", "T2.Opening_Hours", "FROM", "MUSEUMS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Museum_ID", "=", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "museum_details", ",", "t2", ".", "opening_hours", "from", "museums", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "museum_id", "=", "t2", ".", "tourist_attraction_id"], "question": "What are the details and opening hours of the museums?", "question_toks": ["What", "are", "the", "details", "and", "opening", "hours", "of", "the", "museums", "?"], "guid": 6852}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a good place in the yosemite and mono lake area for french food ?", "sql": "SELECT t3.house_number, t1.name FROM geographic AS t2 JOIN restaurant AS t1 ON t1.city_name = t2.city_name JOIN location AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = 'yosemite and mono lake area' AND t1.food_type = 'french' AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good place in the yosemite and mono lake area for french food ?", "question_toks": ["where", "is", "a", "good", "place", "in", "the", "yosemite", "and", "mono", "lake", "area", "for", "french", "food", "?"], "guid": 6853}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Which room has cheapest base price? List the room's name and the base price.", "sql": "SELECT roomName, basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1", "example": {"db_id": "inn_1", "query": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;", "query_toks": ["SELECT", "roomName", ",", "basePrice", "FROM", "Rooms", "ORDER", "BY", "basePrice", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "roomname", ",", "baseprice", "from", "rooms", "order", "by", "baseprice", "asc", "limit", "value"], "question": "Which room has cheapest base price? List the room's name and the base price.", "question_toks": ["Which", "room", "has", "cheapest", "base", "price", "?", "List", "the", "room", "'s", "name", "and", "the", "base", "price", "."], "guid": 6854}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a good arabic in mountain view ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good arabic in mountain view ?", "question_toks": ["give", "me", "a", "good", "arabic", "in", "mountain", "view", "?"], "guid": 6855}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all breweries in Los Angeles", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = \"Los Angeles\" AND t2.category_name = \"breweries\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Los", "Angeles", "''", "AND", "t2.category_name", "=", "``", "breweries", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "Find all breweries in Los Angeles", "question_toks": ["Find", "all", "breweries", "in", "Los", "Angeles"], "guid": 6856}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show the details and star ratings of the 3 least expensive hotels.", "sql": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3", "example": {"db_id": "cre_Theme_park", "query": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3", "query_toks": ["SELECT", "other_hotel_details", ",", "star_rating_code", "FROM", "HOTELS", "ORDER", "BY", "price_range", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "other_hotel_details", ",", "star_rating_code", "from", "hotels", "order", "by", "price_range", "asc", "limit", "value"], "question": "Show the details and star ratings of the 3 least expensive hotels.", "question_toks": ["Show", "the", "details", "and", "star", "ratings", "of", "the", "3", "least", "expensive", "hotels", "."], "guid": 6857}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What are the name of rooms that cost more than the average.", "sql": "SELECT roomName FROM Rooms WHERE basePrice > ( SELECT avg(basePrice) FROM Rooms );", "example": {"db_id": "inn_1", "query": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "WHERE", "basePrice", ">", "(", "SELECT", "avg", "(", "basePrice", ")", "FROM", "Rooms", ")", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "baseprice", ">", "(", "select", "avg", "(", "baseprice", ")", "from", "rooms", ")"], "question": "What are the name of rooms that cost more than the average.", "question_toks": ["What", "are", "the", "name", "of", "rooms", "that", "cost", "more", "than", "the", "average", "."], "guid": 6858}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Show all artist name, age, and country ordered by the yeared they joined.", "sql": "SELECT name, age, country FROM artist ORDER BY year_join", "example": {"db_id": "theme_gallery", "query": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join", "query_toks": ["SELECT", "name", ",", "age", ",", "country", "FROM", "artist", "ORDER", "BY", "Year_Join"], "query_toks_no_value": ["select", "name", ",", "age", ",", "country", "from", "artist", "order", "by", "year_join"], "question": "Show all artist name, age, and country ordered by the yeared they joined.", "question_toks": ["Show", "all", "artist", "name", ",", "age", ",", "and", "country", "ordered", "by", "the", "yeared", "they", "joined", "."], "guid": 6859}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the name, id and the corresponding number of visits for each  tourist attraction?", "sql": "SELECT T1.Name , T2.Tourist_Attraction_ID , COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Tourist_Attraction_ID", ",", "COUNT", "(", "*", ")", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "GROUP", "BY", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "tourist_attraction_id", ",", "count", "(", "*", ")", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "group", "by", "t2", ".", "tourist_attraction_id"], "question": "What are the name, id and the corresponding number of visits for each  tourist attraction?", "question_toks": ["What", "are", "the", "name", ",", "id", "and", "the", "corresponding", "number", "of", "visits", "for", "each", "tourist", "attraction", "?"], "guid": 6860}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | find all cities which has a \" Taj Mahal \" restaurant", "sql": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = \"Taj Mahal\" AND t2.category_name = \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Taj Mahal\" AND t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.city", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.name", "=", "``", "Taj", "Mahal", "''", "AND", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "name", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "find all cities which has a \" Taj Mahal \" restaurant", "question_toks": ["find", "all", "cities", "which", "has", "a", "``", "Taj", "Mahal", "``", "restaurant"], "guid": 6861}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many reviews has Michelle written in March 2014 ?", "sql": "SELECT COUNT(DISTINCT t1.text) FROM user AS t2 JOIN review AS t1 ON t2.user_id = t1.user_id WHERE t1.month = \"March\" AND t1.year = 2014 AND t2.name = \"Michelle\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"March\" AND t1.year  =  2014 AND t2.name  =  \"Michelle\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.text", ")", "FROM", "USER", "AS", "t2", "JOIN", "review", "AS", "t1", "ON", "t2.user_id", "=", "t1.user_id", "WHERE", "t1.month", "=", "``", "March", "''", "AND", "t1.year", "=", "2014", "AND", "t2.name", "=", "``", "Michelle", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "text", ")", "from", "user", "as", "t2", "join", "review", "as", "t1", "on", "t2", ".", "user_id", "=", "t1", ".", "user_id", "where", "t1", ".", "month", "=", "value", "and", "t1", ".", "year", "=", "value", "and", "t2", ".", "name", "=", "value"], "question": "How many reviews has Michelle written in March 2014 ?", "question_toks": ["How", "many", "reviews", "has", "Michelle", "written", "in", "March", "2014", "?"], "guid": 6862}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some good places for arabic in mountain view ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good places for arabic in mountain view ?", "question_toks": ["give", "me", "some", "good", "places", "for", "arabic", "in", "mountain", "view", "?"], "guid": 6863}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | What is the address of the restaurant Subway?", "sql": "SELECT Address FROM Restaurant WHERE ResName = \"Subway\";", "example": {"db_id": "restaurant_1", "query": "SELECT Address FROM Restaurant WHERE ResName = \"Subway\";", "query_toks": ["SELECT", "Address", "FROM", "Restaurant", "WHERE", "ResName", "=", "``", "Subway", "''", ";"], "query_toks_no_value": ["select", "address", "from", "restaurant", "where", "resname", "=", "value"], "question": "What is the address of the restaurant Subway?", "question_toks": ["What", "is", "the", "address", "of", "the", "restaurant", "Subway", "?"], "guid": 6864}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all breweries in \" Los Angeles \"", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = \"Los Angeles\" AND t2.category_name = \"breweries\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Los", "Angeles", "''", "AND", "t2.category_name", "=", "``", "breweries", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "Find all breweries in \" Los Angeles \"", "question_toks": ["Find", "all", "breweries", "in", "``", "Los", "Angeles", "``"], "guid": 6865}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | how many places for french are there in palo alto ?", "sql": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"palo alto\" AND t1.food_type = \"french\";", "example": {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "palo", "alto", "''", "AND", "t1.food_type", "=", "``", "french", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "how many places for french are there in palo alto ?", "question_toks": ["how", "many", "places", "for", "french", "are", "there", "in", "palo", "alto", "?"], "guid": 6866}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Return the apartment numbers of the apartments with type code \"Flat\".", "sql": "SELECT apt_number FROM Apartments WHERE apt_type_code = \"Flat\"", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"", "query_toks": ["SELECT", "apt_number", "FROM", "Apartments", "WHERE", "apt_type_code", "=", "``", "Flat", "''"], "query_toks_no_value": ["select", "apt_number", "from", "apartments", "where", "apt_type_code", "=", "value"], "question": "Return the apartment numbers of the apartments with type code \"Flat\".", "question_toks": ["Return", "the", "apartment", "numbers", "of", "the", "apartments", "with", "type", "code", "``", "Flat", "''", "."], "guid": 6867}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Which tourist attractions do the tourists Vincent and Marcelle visit? Tell me the names of the attractions.", "sql": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = \"Marcelle\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Marcelle\"", "query_toks": ["SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Vincent", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Marcelle", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value", "intersect", "select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value"], "question": "Which tourist attractions do the tourists Vincent and Marcelle visit? Tell me the names of the attractions.", "question_toks": ["Which", "tourist", "attractions", "do", "the", "tourists", "Vincent", "and", "Marcelle", "visit", "?", "Tell", "me", "the", "names", "of", "the", "attractions", "."], "guid": 6868}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the number of rooms with a king bed.", "sql": "SELECT COUNT(*) FROM rooms WHERE bedtype = 'King';", "example": {"db_id": "inn_1", "query": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Rooms", "WHERE", "bedType", "=", "``", "King", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "rooms", "where", "bedtype", "=", "value"], "question": "Find the number of rooms with a king bed.", "question_toks": ["Find", "the", "number", "of", "rooms", "with", "a", "king", "bed", "."], "guid": 6869}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Count the total number of apartment bookings.", "sql": "SELECT COUNT(*) FROM apartment_bookings", "example": {"db_id": "apartment_rentals", "query": "SELECT count(*) FROM Apartment_Bookings", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Apartment_Bookings"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "apartment_bookings"], "question": "Count the total number of apartment bookings.", "question_toks": ["Count", "the", "total", "number", "of", "apartment", "bookings", "."], "guid": 6870}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Which apartments have bookings with status code \"Confirmed\"? Return their apartment numbers.", "sql": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = \"Confirmed\"", "example": {"db_id": "apartment_rentals", "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\"", "query_toks": ["SELECT", "DISTINCT", "T2.apt_number", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T1.booking_status_code", "=", "``", "Confirmed", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "apt_number", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t1", ".", "booking_status_code", "=", "value"], "question": "Which apartments have bookings with status code \"Confirmed\"? Return their apartment numbers.", "question_toks": ["Which", "apartments", "have", "bookings", "with", "status", "code", "``", "Confirmed", "''", "?", "Return", "their", "apartment", "numbers", "."], "guid": 6871}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Which apartments have type code \"Flat\"? Give me their apartment numbers.", "sql": "SELECT apt_number FROM Apartments WHERE apt_type_code = \"Flat\"", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"", "query_toks": ["SELECT", "apt_number", "FROM", "Apartments", "WHERE", "apt_type_code", "=", "``", "Flat", "''"], "query_toks_no_value": ["select", "apt_number", "from", "apartments", "where", "apt_type_code", "=", "value"], "question": "Which apartments have type code \"Flat\"? Give me their apartment numbers.", "question_toks": ["Which", "apartments", "have", "type", "code", "``", "Flat", "''", "?", "Give", "me", "their", "apartment", "numbers", "."], "guid": 6872}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the addresses of the buildings that have apartments with more than 2 bathrooms.", "sql": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bathroom_count > 2", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2", "query_toks": ["SELECT", "T1.building_address", "FROM", "Apartment_Buildings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "WHERE", "T2.bathroom_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "building_address", "from", "apartment_buildings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "where", "t2", ".", "bathroom_count", ">", "value"], "question": "Show the addresses of the buildings that have apartments with more than 2 bathrooms.", "question_toks": ["Show", "the", "addresses", "of", "the", "buildings", "that", "have", "apartments", "with", "more", "than", "2", "bathrooms", "."], "guid": 6873}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What is the average base price of rooms, for each bed type?", "sql": "SELECT bedType, AVG(basePrice) FROM rooms GROUP BY bedType", "example": {"db_id": "inn_1", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "query_toks": ["SELECT", "bedType", ",", "avg", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "avg", "(", "baseprice", ")", "from", "rooms", "group", "by", "bedtype"], "question": "What is the average base price of rooms, for each bed type?", "question_toks": ["What", "is", "the", "average", "base", "price", "of", "rooms", ",", "for", "each", "bed", "type", "?"], "guid": 6874}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What is the average number of bedrooms of all apartments?", "sql": "SELECT AVG(bedroom_count) FROM Apartments", "example": {"db_id": "apartment_rentals", "query": "SELECT avg(bedroom_count) FROM Apartments", "query_toks": ["SELECT", "avg", "(", "bedroom_count", ")", "FROM", "Apartments"], "query_toks_no_value": ["select", "avg", "(", "bedroom_count", ")", "from", "apartments"], "question": "What is the average number of bedrooms of all apartments?", "question_toks": ["What", "is", "the", "average", "number", "of", "bedrooms", "of", "all", "apartments", "?"], "guid": 6875}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | Where is the best french in san francisco ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "Where is the best french in san francisco ?", "question_toks": ["Where", "is", "the", "best", "french", "in", "san", "francisco", "?"], "guid": 6876}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can i find a restaurant in the bay area ?", "sql": "SELECT t2.house_number, t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN (SELECT city_name FROM geographic WHERE region = \"bay area\");", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "LOCATION", "AS", "t2", "JOIN", "restaurant", "AS", "t1", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.city_name", "IN", "(", "SELECT", "city_name", "FROM", "geographic", "WHERE", "region", "=", "``", "bay", "area", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "location", "as", "t2", "join", "restaurant", "as", "t1", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "city_name", "in", "(", "select", "city_name", "from", "geographic", "where", "region", "=", "value", ")"], "question": "where can i find a restaurant in the bay area ?", "question_toks": ["where", "can", "i", "find", "a", "restaurant", "in", "the", "bay", "area", "?"], "guid": 6877}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Find the address of the location named \"UK Gallery\".", "sql": "SELECT Address FROM Locations WHERE Location_Name = \"UK Gallery\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "query_toks": ["SELECT", "Address", "FROM", "LOCATIONS", "WHERE", "Location_Name", "=", "``", "UK", "Gallery", "''"], "query_toks_no_value": ["select", "address", "from", "locations", "where", "location_name", "=", "value"], "question": "Find the address of the location named \"UK Gallery\".", "question_toks": ["Find", "the", "address", "of", "the", "location", "named", "``", "UK", "Gallery", "''", "."], "guid": 6878}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a good place in mountain view for arabic food ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good place in mountain view for arabic food ?", "question_toks": ["where", "is", "a", "good", "place", "in", "mountain", "view", "for", "arabic", "food", "?"], "guid": 6879}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Return all the apartment numbers sorted by the room count in ascending order.", "sql": "SELECT apt_number FROM apartments ORDER BY room_count ASC", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC", "query_toks": ["SELECT", "apt_number", "FROM", "Apartments", "ORDER", "BY", "room_count", "ASC"], "query_toks_no_value": ["select", "apt_number", "from", "apartments", "order", "by", "room_count", "asc"], "question": "Return all the apartment numbers sorted by the room count in ascending order.", "question_toks": ["Return", "all", "the", "apartment", "numbers", "sorted", "by", "the", "room", "count", "in", "ascending", "order", "."], "guid": 6880}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | Where is the best restaurant in san francisco for french food ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t1.food_type = \"french\" AND t1.rating = (SELECT MAX(t1.rating) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t1.food_type = \"french\");", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "Where is the best restaurant in san francisco for french food ?", "question_toks": ["Where", "is", "the", "best", "restaurant", "in", "san", "francisco", "for", "french", "food", "?"], "guid": 6881}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Sort all the rooms according to the price. Just report the room names.", "sql": "SELECT roomName FROM Rooms ORDER BY basePrice", "example": {"db_id": "inn_1", "query": "SELECT roomName FROM Rooms ORDER BY basePrice;", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "ORDER", "BY", "basePrice", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "order", "by", "baseprice"], "question": "Sort all the rooms according to the price. Just report the room names.", "question_toks": ["Sort", "all", "the", "rooms", "according", "to", "the", "price", ".", "Just", "report", "the", "room", "names", "."], "guid": 6882}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Return the booking start date and end date for the apartments that have type code \"Duplex\".", "sql": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.apt_type_code", "=", "``", "Duplex", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "apt_type_code", "=", "value"], "question": "Return the booking start date and end date for the apartments that have type code \"Duplex\".", "question_toks": ["Return", "the", "booking", "start", "date", "and", "end", "date", "for", "the", "apartments", "that", "have", "type", "code", "``", "Duplex", "''", "."], "guid": 6883}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | how many places for french food are there in palo alto ?", "sql": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"palo alto\" AND t1.food_type = \"french\";", "example": {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "palo", "alto", "''", "AND", "t1.food_type", "=", "``", "french", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "how many places for french food are there in palo alto ?", "question_toks": ["how", "many", "places", "for", "french", "food", "are", "there", "in", "palo", "alto", "?"], "guid": 6884}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all cities in which there is a restaurant called \" MGM Grand Buffet \"", "sql": "SELECT t1.city FROM business AS t1 JOIN category AS t2 ON t1.business_id = t2.business_id WHERE t1.name = \"MGM Grand Buffet\" AND t2.category_name = \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"MGM Grand Buffet\" AND t2.category_name  =  \"category_category_name0\";", "query_toks": ["SELECT", "t1.city", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.name", "=", "``", "MGM", "Grand", "Buffet", "''", "AND", "t2.category_name", "=", "``", "category_category_name0", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "name", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "Find all cities in which there is a restaurant called \" MGM Grand Buffet \"", "question_toks": ["Find", "all", "cities", "in", "which", "there", "is", "a", "restaurant", "called", "``", "MGM", "Grand", "Buffet", "``"], "guid": 6885}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Which tourist attractions are visited at least twice? Give me their names and ids.", "sql": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*) >= 2", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.Name", ",", "T2.Tourist_Attraction_ID", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "GROUP", "BY", "T2.Tourist_Attraction_ID", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "tourist_attraction_id", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "group", "by", "t2", ".", "tourist_attraction_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which tourist attractions are visited at least twice? Give me their names and ids.", "question_toks": ["Which", "tourist", "attractions", "are", "visited", "at", "least", "twice", "?", "Give", "me", "their", "names", "and", "ids", "."], "guid": 6886}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | How many rooms have king beds? Report the number for each decor type.", "sql": "SELECT decor, COUNT(*) FROM rooms WHERE bedType = 'King' GROUP BY decor", "example": {"db_id": "inn_1", "query": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;", "query_toks": ["SELECT", "decor", ",", "count", "(", "*", ")", "FROM", "Rooms", "WHERE", "bedType", "=", "``", "King", "''", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "count", "(", "*", ")", "from", "rooms", "where", "bedtype", "=", "value", "group", "by", "decor"], "question": "How many rooms have king beds? Report the number for each decor type.", "question_toks": ["How", "many", "rooms", "have", "king", "beds", "?", "Report", "the", "number", "for", "each", "decor", "type", "."], "guid": 6887}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | List the names of roller coasters by ascending order of length.", "sql": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC", "example": {"db_id": "roller_coaster", "query": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC", "query_toks": ["SELECT", "Name", "FROM", "roller_coaster", "ORDER", "BY", "LENGTH", "ASC"], "query_toks_no_value": ["select", "name", "from", "roller_coaster", "order", "by", "length", "asc"], "question": "List the names of roller coasters by ascending order of length.", "question_toks": ["List", "the", "names", "of", "roller", "coasters", "by", "ascending", "order", "of", "length", "."], "guid": 6888}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | find the number of restaurant rated more than 3.5", "sql": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.rating > 3.5 AND t2.category_name = \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.rating", ">", "3.5", "AND", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "rating", ">", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "find the number of restaurant rated more than 3.5", "question_toks": ["find", "the", "number", "of", "restaurant", "rated", "more", "than", "3.5"], "guid": 6889}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what is the best restaurant in the bay area for american food ?", "sql": "SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = \"bay area\" AND t1.food_type = \"american\" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = \"bay area\" AND t1.food_type = \"american\" );", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "what is the best restaurant in the bay area for american food ?", "question_toks": ["what", "is", "the", "best", "restaurant", "in", "the", "bay", "area", "for", "american", "food", "?"], "guid": 6890}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What are the facility codes of the apartments with more than four bedrooms?", "sql": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4", "query_toks": ["SELECT", "T1.facility_code", "FROM", "Apartment_Facilities", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.bedroom_count", ">", "4"], "query_toks_no_value": ["select", "t1", ".", "facility_code", "from", "apartment_facilities", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "bedroom_count", ">", "value"], "question": "What are the facility codes of the apartments with more than four bedrooms?", "question_toks": ["What", "are", "the", "facility", "codes", "of", "the", "apartments", "with", "more", "than", "four", "bedrooms", "?"], "guid": 6891}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the names of rooms that have been reserved for more than 60 times.", "sql": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count(*) > 60", "example": {"db_id": "inn_1", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60", "query_toks": ["SELECT", "T2.roomName", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "GROUP", "BY", "T1.Room", "HAVING", "count", "(", "*", ")", ">", "60"], "query_toks_no_value": ["select", "t2", ".", "roomname", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "group", "by", "t1", ".", "room", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the names of rooms that have been reserved for more than 60 times.", "question_toks": ["Find", "the", "names", "of", "rooms", "that", "have", "been", "reserved", "for", "more", "than", "60", "times", "."], "guid": 6892}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all businesses in Texas with a rating below 2", "sql": "SELECT name FROM business WHERE rating < 2 AND state = \"Texas\";", "example": {"db_id": "yelp", "query": "SELECT name FROM business WHERE rating  <  2 AND state  =  \"Texas\";", "query_toks": ["SELECT", "name", "FROM", "business", "WHERE", "rating", "<", "2", "AND", "state", "=", "``", "Texas", "''", ";"], "query_toks_no_value": ["select", "name", "from", "business", "where", "rating", "<", "value", "and", "state", "=", "value"], "question": "Find all businesses in Texas with a rating below 2", "question_toks": ["Find", "all", "businesses", "in", "Texas", "with", "a", "rating", "below", "2"], "guid": 6893}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | What is the best french in san francisco ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t1.food_type = \"french\" AND t1.rating = (SELECT MAX(t1.rating) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t1.food_type = \"french\");", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "What is the best french in san francisco ?", "question_toks": ["What", "is", "the", "best", "french", "in", "san", "francisco", "?"], "guid": 6894}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many tips has Michelle written in 2010", "sql": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id = t1.user_id WHERE t1.year = 2010 AND t2.name = \"Michelle\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"Michelle\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.text", ")", "FROM", "USER", "AS", "t2", "JOIN", "tip", "AS", "t1", "ON", "t2.user_id", "=", "t1.user_id", "WHERE", "t1.year", "=", "2010", "AND", "t2.name", "=", "``", "Michelle", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "text", ")", "from", "user", "as", "t2", "join", "tip", "as", "t1", "on", "t2", ".", "user_id", "=", "t1", ".", "user_id", "where", "t1", ".", "year", "=", "value", "and", "t2", ".", "name", "=", "value"], "question": "How many tips has Michelle written in 2010", "question_toks": ["How", "many", "tips", "has", "Michelle", "written", "in", "2010"], "guid": 6895}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what are some good places in the yosemite and mono lake area for french food ?", "sql": "SELECT t3.house_number, t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = \"yosemite and mono lake area\" AND t1.food_type = \"french\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good places in the yosemite and mono lake area for french food ?", "question_toks": ["what", "are", "some", "good", "places", "in", "the", "yosemite", "and", "mono", "lake", "area", "for", "french", "food", "?"], "guid": 6896}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What are the booking start and end dates of the apartments with more than 2 bedrooms?", "sql": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.bedroom_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "bedroom_count", ">", "value"], "question": "What are the booking start and end dates of the apartments with more than 2 bedrooms?", "question_toks": ["What", "are", "the", "booking", "start", "and", "end", "dates", "of", "the", "apartments", "with", "more", "than", "2", "bedrooms", "?"], "guid": 6897}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Which buildings does \"Emma\" manage? Give me the short names of the buildings.", "sql": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = \"Emma\"", "example": {"db_id": "apartment_rentals", "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\"", "query_toks": ["SELECT", "building_short_name", "FROM", "Apartment_Buildings", "WHERE", "building_manager", "=", "``", "Emma", "''"], "query_toks_no_value": ["select", "building_short_name", "from", "apartment_buildings", "where", "building_manager", "=", "value"], "question": "Which buildings does \"Emma\" manage? Give me the short names of the buildings.", "question_toks": ["Which", "buildings", "does", "``", "Emma", "''", "manage", "?", "Give", "me", "the", "short", "names", "of", "the", "buildings", "."], "guid": 6898}}
{"text": "shop: Shop_ID, Address, Num_of_staff, Score, Open_Year; member: Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address; happy_hour: HH_ID, Shop_ID, Month, Num_of_shaff_in_charge; happy_hour_member: HH_ID, Member_ID, Total_amount | How many members are not living in Hartford?", "sql": "SELECT COUNT(*) FROM member WHERE address != 'Hartford'", "example": {"db_id": "coffee_shop", "query": "SELECT count(*) FROM member WHERE address != 'Hartford'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "member", "WHERE", "address", "!", "=", "'Hartford", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "member", "where", "address", "!", "=", "value"], "question": "How many members are not living in Hartford?", "question_toks": ["How", "many", "members", "are", "not", "living", "in", "Hartford", "?"], "guid": 6899}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all Bars reviewed by Patrick", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t2.category_name = \"Bars\" AND t4.name = \"Patrick\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"Bars\" AND t4.name  =  \"Patrick\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "review", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t4", "ON", "t4.user_id", "=", "t3.user_id", "WHERE", "t2.category_name", "=", "``", "Bars", "''", "AND", "t4.name", "=", "``", "Patrick", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "review", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t4", "on", "t4", ".", "user_id", "=", "t3", ".", "user_id", "where", "t2", ".", "category_name", "=", "value", "and", "t4", ".", "name", "=", "value"], "question": "Find all Bars reviewed by Patrick", "question_toks": ["Find", "all", "Bars", "reviewed", "by", "Patrick"], "guid": 6900}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show the tourist attractions visited by the tourist whose detail is 'Vincent'.", "sql": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID = T3.Tourist_ID WHERE T3.Tourist_Details = \"Vincent\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\"", "query_toks": ["SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "JOIN", "VISITORS", "AS", "T3", "ON", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T3.Tourist_Details", "=", "``", "Vincent", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "join", "visitors", "as", "t3", "on", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t3", ".", "tourist_details", "=", "value"], "question": "Show the tourist attractions visited by the tourist whose detail is 'Vincent'.", "question_toks": ["Show", "the", "tourist", "attractions", "visited", "by", "the", "tourist", "whose", "detail", "is", "'Vincent", "'", "."], "guid": 6901}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show the names and ids of tourist attractions that are visited at least two times.", "sql": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*) >= 2", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.Name", ",", "T2.Tourist_Attraction_ID", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "GROUP", "BY", "T2.Tourist_Attraction_ID", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "tourist_attraction_id", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "group", "by", "t2", ".", "tourist_attraction_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the names and ids of tourist attractions that are visited at least two times.", "question_toks": ["Show", "the", "names", "and", "ids", "of", "tourist", "attractions", "that", "are", "visited", "at", "least", "two", "times", "."], "guid": 6902}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | How many adults stay in the room CONRAD SELBIG checked in on Oct 23, 2010?", "sql": "SELECT Adults FROM Reservations WHERE CheckIn = \"2010-10-23\" AND FirstName = \"CONRAD\" AND LastName = \"SELBIG\";", "example": {"db_id": "inn_1", "query": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";", "query_toks": ["SELECT", "Adults", "FROM", "Reservations", "WHERE", "CheckIn", "=", "``", "2010-10-23", "''", "AND", "FirstName", "=", "``", "CONRAD", "''", "AND", "LastName", "=", "``", "SELBIG", "''", ";"], "query_toks_no_value": ["select", "adults", "from", "reservations", "where", "checkin", "=", "value", "and", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "How many adults stay in the room CONRAD SELBIG checked in on Oct 23, 2010?", "question_toks": ["How", "many", "adults", "stay", "in", "the", "room", "CONRAD", "SELBIG", "checked", "in", "on", "Oct", "23", ",", "2010", "?"], "guid": 6903}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find the users who have given tips on Pet Groomers", "sql": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN tip AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t2.category_name = \"Pet Groomers\";", "example": {"db_id": "yelp", "query": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN tip AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"Pet Groomers\";", "query_toks": ["SELECT", "t4.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "tip", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t4", "ON", "t4.user_id", "=", "t3.user_id", "WHERE", "t2.category_name", "=", "``", "Pet", "Groomers", "''", ";"], "query_toks_no_value": ["select", "t4", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "tip", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t4", "on", "t4", ".", "user_id", "=", "t3", ".", "user_id", "where", "t2", ".", "category_name", "=", "value"], "question": "Find the users who have given tips on Pet Groomers", "question_toks": ["Find", "the", "users", "who", "have", "given", "tips", "on", "Pet", "Groomers"], "guid": 6904}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What is the name and country for the artist with most number of exhibitions?", "sql": "SELECT T2.name, T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "theme_gallery", "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.country", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "GROUP", "BY", "T1.artist_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "country", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "group", "by", "t1", ".", "artist_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and country for the artist with most number of exhibitions?", "question_toks": ["What", "is", "the", "name", "and", "country", "for", "the", "artist", "with", "most", "number", "of", "exhibitions", "?"], "guid": 6905}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show different tourist attractions' names, ids, and the corresponding number of visits.", "sql": "SELECT T1.Name , T2.Tourist_Attraction_ID , COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Tourist_Attraction_ID", ",", "COUNT", "(", "*", ")", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "GROUP", "BY", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "tourist_attraction_id", ",", "count", "(", "*", ")", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "group", "by", "t2", ".", "tourist_attraction_id"], "question": "Show different tourist attractions' names, ids, and the corresponding number of visits.", "question_toks": ["Show", "different", "tourist", "attractions", "'", "names", ",", "ids", ",", "and", "the", "corresponding", "number", "of", "visits", "."], "guid": 6906}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Show theme and year for all exhibitions in an descending order of ticket price.", "sql": "SELECT theme , YEAR FROM exhibition ORDER BY ticket_price DESC", "example": {"db_id": "theme_gallery", "query": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC", "query_toks": ["SELECT", "theme", ",", "YEAR", "FROM", "exhibition", "ORDER", "BY", "ticket_price", "DESC"], "query_toks_no_value": ["select", "theme", ",", "year", "from", "exhibition", "order", "by", "ticket_price", "desc"], "question": "Show theme and year for all exhibitions in an descending order of ticket price.", "question_toks": ["Show", "theme", "and", "year", "for", "all", "exhibitions", "in", "an", "descending", "order", "of", "ticket", "price", "."], "guid": 6907}}
{"text": "shop: Shop_ID, Address, Num_of_staff, Score, Open_Year; member: Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address; happy_hour: HH_ID, Shop_ID, Month, Num_of_shaff_in_charge; happy_hour_member: HH_ID, Member_ID, Total_amount | Show the shop addresses ordered by their opening year.", "sql": "SELECT address FROM shop ORDER BY open_year", "example": {"db_id": "coffee_shop", "query": "SELECT address FROM shop ORDER BY open_year", "query_toks": ["SELECT", "address", "FROM", "shop", "ORDER", "BY", "open_year"], "query_toks_no_value": ["select", "address", "from", "shop", "order", "by", "open_year"], "question": "Show the shop addresses ordered by their opening year.", "question_toks": ["Show", "the", "shop", "addresses", "ordered", "by", "their", "opening", "year", "."], "guid": 6908}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the average and minimum price of the rooms in different decor.", "sql": "SELECT decor, AVG(basePrice), MIN(basePrice) FROM Rooms GROUP BY decor", "example": {"db_id": "inn_1", "query": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;", "query_toks": ["SELECT", "decor", ",", "avg", "(", "basePrice", ")", ",", "min", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "avg", "(", "baseprice", ")", ",", "min", "(", "baseprice", ")", "from", "rooms", "group", "by", "decor"], "question": "Find the average and minimum price of the rooms in different decor.", "question_toks": ["Find", "the", "average", "and", "minimum", "price", "of", "the", "rooms", "in", "different", "decor", "."], "guid": 6909}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | List all users who reviewed businesses that are restaurant .", "sql": "SELECT t4.name FROM business AS t1 JOIN category AS t2 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN user AS t4 ON t4.user_id = t3.user_id WHERE t2.category_name = 'restaurant';", "example": {"db_id": "yelp", "query": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t4.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "review", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t4", "ON", "t4.user_id", "=", "t3.user_id", "WHERE", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t4", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "review", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t4", "on", "t4", ".", "user_id", "=", "t3", ".", "user_id", "where", "t2", ".", "category_name", "=", "value"], "question": "List all users who reviewed businesses that are restaurant .", "question_toks": ["List", "all", "users", "who", "reviewed", "businesses", "that", "are", "restaurant", "."], "guid": 6910}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some good arabics in mountain view ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good arabics in mountain view ?", "question_toks": ["give", "me", "some", "good", "arabics", "in", "mountain", "view", "?"], "guid": 6911}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Find the names of the tourist attractions that is either accessible by bus or at address 254 Ottilie Junction.", "sql": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = \"254 Ottilie Junction\" OR T2.How_to_Get_There = \"bus\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\"", "query_toks": ["SELECT", "T2.Name", "FROM", "Locations", "AS", "T1", "JOIN", "Tourist_Attractions", "AS", "T2", "ON", "T1.Location_ID", "=", "T2.Location_ID", "WHERE", "T1.Address", "=", "``", "254", "Ottilie", "Junction", "''", "OR", "T2.How_to_Get_There", "=", "``", "bus", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "locations", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "location_id", "=", "t2", ".", "location_id", "where", "t1", ".", "address", "=", "value", "or", "t2", ".", "how_to_get_there", "=", "value"], "question": "Find the names of the tourist attractions that is either accessible by bus or at address 254 Ottilie Junction.", "question_toks": ["Find", "the", "names", "of", "the", "tourist", "attractions", "that", "is", "either", "accessible", "by", "bus", "or", "at", "address", "254", "Ottilie", "Junction", "."], "guid": 6912}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | Show the name and population of the country that has the highest roller coaster.", "sql": "SELECT T1.Name , T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID ORDER BY T2.Height DESC LIMIT 1", "example": {"db_id": "roller_coaster", "query": "SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", ",", "T1.population", "FROM", "country", "AS", "T1", "JOIN", "roller_coaster", "AS", "T2", "ON", "T1.Country_ID", "=", "T2.Country_ID", "ORDER", "BY", "T2.Height", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "population", "from", "country", "as", "t1", "join", "roller_coaster", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country_id", "order", "by", "t2", ".", "height", "desc", "limit", "value"], "question": "Show the name and population of the country that has the highest roller coaster.", "question_toks": ["Show", "the", "name", "and", "population", "of", "the", "country", "that", "has", "the", "highest", "roller", "coaster", "."], "guid": 6913}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find the business which has the most number of categories", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.category_name ) DESC LIMIT 1", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.category_name ) DESC LIMIT 1;", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "GROUP", "BY", "t1.name", "ORDER", "BY", "COUNT", "(", "DISTINCT", "t2.category_name", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "distinct", "t2", ".", "category_name", ")", "desc", "limit", "value"], "question": "Find the business which has the most number of categories", "question_toks": ["Find", "the", "business", "which", "has", "the", "most", "number", "of", "categories"], "guid": 6914}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all reviews by Patrick with a rating above 4", "sql": "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id = t1.user_id WHERE t1.rating > 4 AND t2.name = \"Patrick\";", "example": {"db_id": "yelp", "query": "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.rating  >  4 AND t2.name  =  \"Patrick\";", "query_toks": ["SELECT", "t1.text", "FROM", "USER", "AS", "t2", "JOIN", "review", "AS", "t1", "ON", "t2.user_id", "=", "t1.user_id", "WHERE", "t1.rating", ">", "4", "AND", "t2.name", "=", "``", "Patrick", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "text", "from", "user", "as", "t2", "join", "review", "as", "t1", "on", "t2", ".", "user_id", "=", "t1", ".", "user_id", "where", "t1", ".", "rating", ">", "value", "and", "t2", ".", "name", "=", "value"], "question": "Find all reviews by Patrick with a rating above 4", "question_toks": ["Find", "all", "reviews", "by", "Patrick", "with", "a", "rating", "above", "4"], "guid": 6915}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a good restaurant in the yosemite and mono lake area for french food ?", "sql": "SELECT t3.house_number, t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = \"yosemite and mono lake area\" AND t1.food_type = \"french\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good restaurant in the yosemite and mono lake area for french food ?", "question_toks": ["where", "is", "a", "good", "restaurant", "in", "the", "yosemite", "and", "mono", "lake", "area", "for", "french", "food", "?"], "guid": 6916}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the most common apartment type code among apartments with more than 1 bathroom.", "sql": "SELECT apt_type_code FROM Apartments WHERE bathroom_count > 1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "apt_type_code", "FROM", "Apartments", "WHERE", "bathroom_count", ">", "1", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "apt_type_code", "from", "apartments", "where", "bathroom_count", ">", "value", "group", "by", "apt_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the most common apartment type code among apartments with more than 1 bathroom.", "question_toks": ["Show", "the", "most", "common", "apartment", "type", "code", "among", "apartments", "with", "more", "than", "1", "bathroom", "."], "guid": 6917}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the names of tourist attractions that can be reached by walk or is at address 660 Shea Crescent?", "sql": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = \"660 Shea Crescent\" OR T2.How_to_Get_There = \"walk\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "T2.Name", "FROM", "Locations", "AS", "T1", "JOIN", "Tourist_Attractions", "AS", "T2", "ON", "T1.Location_ID", "=", "T2.Location_ID", "WHERE", "T1.Address", "=", "``", "660", "Shea", "Crescent", "''", "OR", "T2.How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "locations", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "location_id", "=", "t2", ".", "location_id", "where", "t1", ".", "address", "=", "value", "or", "t2", ".", "how_to_get_there", "=", "value"], "question": "What are the names of tourist attractions that can be reached by walk or is at address 660 Shea Crescent?", "question_toks": ["What", "are", "the", "names", "of", "tourist", "attractions", "that", "can", "be", "reached", "by", "walk", "or", "is", "at", "address", "660", "Shea", "Crescent", "?"], "guid": 6918}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Show all artist names and the year joined who are not from United States.", "sql": "SELECT name , year_join FROM artist WHERE country != 'United States'", "example": {"db_id": "theme_gallery", "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'", "query_toks": ["SELECT", "name", ",", "year_join", "FROM", "artist", "WHERE", "country", "!", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "name", ",", "year_join", "from", "artist", "where", "country", "!", "=", "value"], "question": "Show all artist names and the year joined who are not from United States.", "question_toks": ["Show", "all", "artist", "names", "and", "the", "year", "joined", "who", "are", "not", "from", "United", "States", "."], "guid": 6919}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | find the total checkins in Moroccan restaurant in \" Los Angeles \"", "sql": "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id JOIN checkin AS t4 ON t4.business_id = t1.business_id WHERE t1.city = \"Los Angeles\" AND t2.category_name = \"restaurant\" AND t3.category_name = \"Moroccan\";", "example": {"db_id": "yelp", "query": "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"restaurant\" AND t3.category_name  =  \"Moroccan\";", "query_toks": ["SELECT", "SUM", "(", "t4.count", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "checkin", "AS", "t4", "ON", "t4.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Los", "Angeles", "''", "AND", "t2.category_name", "=", "``", "restaurant", "''", "AND", "t3.category_name", "=", "``", "Moroccan", "''", ";"], "query_toks_no_value": ["select", "sum", "(", "t4", ".", "count", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "checkin", "as", "t4", "on", "t4", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "category_name", "=", "value"], "question": "find the total checkins in Moroccan restaurant in \" Los Angeles \"", "question_toks": ["find", "the", "total", "checkins", "in", "Moroccan", "restaurant", "in", "``", "Los", "Angeles", "``"], "guid": 6920}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a restaurant in the bay area ?", "sql": "SELECT t2.house_number , t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region = \"bay area\" );", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "LOCATION", "AS", "t2", "JOIN", "restaurant", "AS", "t1", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.city_name", "IN", "(", "SELECT", "city_name", "FROM", "geographic", "WHERE", "region", "=", "``", "bay", "area", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "location", "as", "t2", "join", "restaurant", "as", "t1", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "city_name", "in", "(", "select", "city_name", "from", "geographic", "where", "region", "=", "value", ")"], "question": "give me a restaurant in the bay area ?", "question_toks": ["give", "me", "a", "restaurant", "in", "the", "bay", "area", "?"], "guid": 6921}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Show all artist names and the number of exhibitions for each artist.", "sql": "SELECT T2.name, COUNT(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id", "example": {"db_id": "theme_gallery", "query": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "GROUP", "BY", "T1.artist_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "group", "by", "t1", ".", "artist_id"], "question": "Show all artist names and the number of exhibitions for each artist.", "question_toks": ["Show", "all", "artist", "names", "and", "the", "number", "of", "exhibitions", "for", "each", "artist", "."], "guid": 6922}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a good restaurant in alameda ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good restaurant in alameda ?", "question_toks": ["give", "me", "a", "good", "restaurant", "in", "alameda", "?"], "guid": 6923}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what are some good restaurants in alameda ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN location AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"alameda\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good restaurants in alameda ?", "question_toks": ["what", "are", "some", "good", "restaurants", "in", "alameda", "?"], "guid": 6924}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Give me the detail and opening hour for each museum.", "sql": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Museum_Details", ",", "T2.Opening_Hours", "FROM", "MUSEUMS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Museum_ID", "=", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "museum_details", ",", "t2", ".", "opening_hours", "from", "museums", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "museum_id", "=", "t2", ".", "tourist_attraction_id"], "question": "Give me the detail and opening hour for each museum.", "question_toks": ["Give", "me", "the", "detail", "and", "opening", "hour", "for", "each", "museum", "."], "guid": 6925}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some restaurants in alameda ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN location AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"alameda\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value"], "question": "give me some restaurants in alameda ?", "question_toks": ["give", "me", "some", "restaurants", "in", "alameda", "?"], "guid": 6926}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | How many people in total can stay in the modern rooms of this inn?", "sql": "SELECT SUM(maxOccupancy) FROM Rooms WHERE decor = 'modern';", "example": {"db_id": "inn_1", "query": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';", "query_toks": ["SELECT", "sum", "(", "maxOccupancy", ")", "FROM", "Rooms", "WHERE", "decor", "=", "'modern", "'", ";"], "query_toks_no_value": ["select", "sum", "(", "maxoccupancy", ")", "from", "rooms", "where", "decor", "=", "value"], "question": "How many people in total can stay in the modern rooms of this inn?", "question_toks": ["How", "many", "people", "in", "total", "can", "stay", "in", "the", "modern", "rooms", "of", "this", "inn", "?"], "guid": 6927}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | Show the names of roller coasters and names of country they are in.", "sql": "SELECT T2.Name, T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID", "example": {"db_id": "roller_coaster", "query": "SELECT T2.Name ,  T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "roller_coaster", "AS", "T2", "ON", "T1.Country_ID", "=", "T2.Country_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "name", "from", "country", "as", "t1", "join", "roller_coaster", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country_id"], "question": "Show the names of roller coasters and names of country they are in.", "question_toks": ["Show", "the", "names", "of", "roller", "coasters", "and", "names", "of", "country", "they", "are", "in", "."], "guid": 6928}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all tips for \" Cafe Zinho \" in Texas .", "sql": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = \"Cafe Zinho\" AND t1.state = \"Texas\";", "example": {"db_id": "yelp", "query": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Texas\";", "query_toks": ["SELECT", "t2.text", "FROM", "tip", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.name", "=", "``", "Cafe", "Zinho", "''", "AND", "t1.state", "=", "``", "Texas", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "text", "from", "tip", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "name", "=", "value", "and", "t1", ".", "state", "=", "value"], "question": "Find all tips for \" Cafe Zinho \" in Texas .", "question_toks": ["Find", "all", "tips", "for", "``", "Cafe", "Zinho", "``", "in", "Texas", "."], "guid": 6929}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What is the detail of each visitor?", "sql": "SELECT Tourist_Details FROM VISITORS", "example": {"db_id": "cre_Theme_park", "query": "SELECT Tourist_Details FROM VISITORS", "query_toks": ["SELECT", "Tourist_Details", "FROM", "VISITORS"], "query_toks_no_value": ["select", "tourist_details", "from", "visitors"], "question": "What is the detail of each visitor?", "question_toks": ["What", "is", "the", "detail", "of", "each", "visitor", "?"], "guid": 6930}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Return the decor of the room named \"Recluse and defiance\".", "sql": "SELECT decor FROM rooms WHERE roomname = 'Recluse and defiance';", "example": {"db_id": "inn_1", "query": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";", "query_toks": ["SELECT", "decor", "FROM", "Rooms", "WHERE", "roomName", "=", "``", "Recluse", "and", "defiance", "''", ";"], "query_toks_no_value": ["select", "decor", "from", "rooms", "where", "roomname", "=", "value"], "question": "Return the decor of the room named \"Recluse and defiance\".", "question_toks": ["Return", "the", "decor", "of", "the", "room", "named", "``", "Recluse", "and", "defiance", "''", "."], "guid": 6931}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | how many chinese restaurants are there in the bay area ?", "sql": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = \"bay area\" AND t1.food_type = \"chinese\";", "example": {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "chinese", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "how many chinese restaurants are there in the bay area ?", "question_toks": ["how", "many", "chinese", "restaurants", "are", "there", "in", "the", "bay", "area", "?"], "guid": 6932}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What are the names of rooms whose reservation frequency exceeds 60 times?", "sql": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count(*) > 60", "example": {"db_id": "inn_1", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60", "query_toks": ["SELECT", "T2.roomName", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "GROUP", "BY", "T1.Room", "HAVING", "count", "(", "*", ")", ">", "60"], "query_toks_no_value": ["select", "t2", ".", "roomname", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "group", "by", "t1", ".", "room", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of rooms whose reservation frequency exceeds 60 times?", "question_toks": ["What", "are", "the", "names", "of", "rooms", "whose", "reservation", "frequency", "exceeds", "60", "times", "?"], "guid": 6933}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the price ranges of five star hotels?", "sql": "SELECT price_range FROM HOTELS WHERE star_rating_code = \"5\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\"", "query_toks": ["SELECT", "price_range", "FROM", "HOTELS", "WHERE", "star_rating_code", "=", "``", "5", "''"], "query_toks_no_value": ["select", "price_range", "from", "hotels", "where", "star_rating_code", "=", "value"], "question": "What are the price ranges of five star hotels?", "question_toks": ["What", "are", "the", "price", "ranges", "of", "five", "star", "hotels", "?"], "guid": 6934}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | How many rooms are there?", "sql": "SELECT COUNT(*) FROM rooms", "example": {"db_id": "inn_1", "query": "SELECT count(*) FROM Rooms;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Rooms", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "rooms"], "question": "How many rooms are there?", "question_toks": ["How", "many", "rooms", "are", "there", "?"], "guid": 6935}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | What are the speeds of the longest roller coaster?", "sql": "SELECT Speed FROM roller_coaster ORDER BY Length DESC LIMIT 1", "example": {"db_id": "roller_coaster", "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1", "query_toks": ["SELECT", "Speed", "FROM", "roller_coaster", "ORDER", "BY", "LENGTH", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "speed", "from", "roller_coaster", "order", "by", "length", "desc", "limit", "value"], "question": "What are the speeds of the longest roller coaster?", "question_toks": ["What", "are", "the", "speeds", "of", "the", "longest", "roller", "coaster", "?"], "guid": 6936}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Find the the names of the tourist attractions that the tourist named Alison visited but Rosalind did not visit.", "sql": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = \"Rosalind\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\"", "query_toks": ["SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Alison", "''", "EXCEPT", "SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Rosalind", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value", "except", "select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value"], "question": "Find the the names of the tourist attractions that the tourist named Alison visited but Rosalind did not visit.", "question_toks": ["Find", "the", "the", "names", "of", "the", "tourist", "attractions", "that", "the", "tourist", "named", "Alison", "visited", "but", "Rosalind", "did", "not", "visit", "."], "guid": 6937}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Count the number of artists who are older than 46 and joined after 1990.", "sql": "SELECT COUNT(*) FROM artist WHERE age > 46 AND year_join > 1990", "example": {"db_id": "theme_gallery", "query": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "artist", "WHERE", "age", ">", "46", "AND", "year_join", ">", "1990"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "artist", "where", "age", ">", "value", "and", "year_join", ">", "value"], "question": "Count the number of artists who are older than 46 and joined after 1990.", "question_toks": ["Count", "the", "number", "of", "artists", "who", "are", "older", "than", "46", "and", "joined", "after", "1990", "."], "guid": 6938}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What is the detail of the location UK Gallery?", "sql": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name = \"UK Gallery\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "query_toks": ["SELECT", "Other_Details", "FROM", "LOCATIONS", "WHERE", "Location_Name", "=", "``", "UK", "Gallery", "''"], "query_toks_no_value": ["select", "other_details", "from", "locations", "where", "location_name", "=", "value"], "question": "What is the detail of the location UK Gallery?", "question_toks": ["What", "is", "the", "detail", "of", "the", "location", "UK", "Gallery", "?"], "guid": 6939}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Sort the gender codes in descending order of their corresponding number of guests. Return both the gender codes and counts.", "sql": "SELECT gender_code , COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC", "example": {"db_id": "apartment_rentals", "query": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC", "query_toks": ["SELECT", "gender_code", ",", "COUNT", "(", "*", ")", "FROM", "Guests", "GROUP", "BY", "gender_code", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "gender_code", ",", "count", "(", "*", ")", "from", "guests", "group", "by", "gender_code", "order", "by", "count", "(", "*", ")", "desc"], "question": "Sort the gender codes in descending order of their corresponding number of guests. Return both the gender codes and counts.", "question_toks": ["Sort", "the", "gender", "codes", "in", "descending", "order", "of", "their", "corresponding", "number", "of", "guests", ".", "Return", "both", "the", "gender", "codes", "and", "counts", "."], "guid": 6940}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find the total number of reviews written in March", "sql": "SELECT COUNT ( DISTINCT text ) FROM review WHERE MONTH  =  \"March\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT text ) FROM review WHERE MONTH  =  \"March\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "text", ")", "FROM", "review", "WHERE", "MONTH", "=", "``", "March", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "text", ")", "from", "review", "where", "month", "=", "value"], "question": "Find the total number of reviews written in March", "question_toks": ["Find", "the", "total", "number", "of", "reviews", "written", "in", "March"], "guid": 6941}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | When did Linda Smith visit Subway?", "sql": "SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";", "example": {"db_id": "restaurant_1", "query": "SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";", "query_toks": ["SELECT", "TIME", "FROM", "Student", "JOIN", "Visits_Restaurant", "ON", "Student.StuID", "=", "Visits_Restaurant.StuID", "JOIN", "Restaurant", "ON", "Visits_Restaurant.ResID", "=", "Restaurant.ResID", "WHERE", "Student.Fname", "=", "``", "Linda", "''", "AND", "Student.Lname", "=", "``", "Smith", "''", "AND", "Restaurant.ResName", "=", "``", "Subway", "''", ";"], "query_toks_no_value": ["select", "time", "from", "student", "join", "visits_restaurant", "on", "student.stuid", "=", "visits_restaurant.stuid", "join", "restaurant", "on", "visits_restaurant.resid", "=", "restaurant.resid", "where", "student.fname", "=", "value", "and", "student.lname", "=", "value", "and", "restaurant.resname", "=", "value"], "question": "When did Linda Smith visit Subway?", "question_toks": ["When", "did", "Linda", "Smith", "visit", "Subway", "?"], "guid": 6942}}
{"text": "shop: Shop_ID, Address, Num_of_staff, Score, Open_Year; member: Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address; happy_hour: HH_ID, Shop_ID, Month, Num_of_shaff_in_charge; happy_hour_member: HH_ID, Member_ID, Total_amount | Which months have more than 2 happy hours?", "sql": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*) > 2", "example": {"db_id": "coffee_shop", "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2", "query_toks": ["SELECT", "MONTH", "FROM", "happy_hour", "GROUP", "BY", "MONTH", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "month", "from", "happy_hour", "group", "by", "month", "having", "count", "(", "*", ")", ">", "value"], "question": "Which months have more than 2 happy hours?", "question_toks": ["Which", "months", "have", "more", "than", "2", "happy", "hours", "?"], "guid": 6943}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the details of the markets that can be accessed by walk or bus?", "sql": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = \"walk\" OR T2.How_to_Get_There = \"bus\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\" OR  T2.How_to_Get_There  =  \"bus\"", "query_toks": ["SELECT", "T1.Market_Details", "FROM", "Street_Markets", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Market_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.How_to_Get_There", "=", "``", "walk", "''", "OR", "T2.How_to_Get_There", "=", "``", "bus", "''"], "query_toks_no_value": ["select", "t1", ".", "market_details", "from", "street_markets", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "how_to_get_there", "=", "value", "or", "t2", ".", "how_to_get_there", "=", "value"], "question": "What are the details of the markets that can be accessed by walk or bus?", "question_toks": ["What", "are", "the", "details", "of", "the", "markets", "that", "can", "be", "accessed", "by", "walk", "or", "bus", "?"], "guid": 6944}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | List all 5 star Italian restaurant", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.rating = 5 AND t2.category_name = \"Italian\" AND t3.category_name = \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.rating  =  5 AND t2.category_name  =  \"Italian\" AND t3.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "WHERE", "t1.rating", "=", "5", "AND", "t2.category_name", "=", "``", "Italian", "''", "AND", "t3.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "rating", "=", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "category_name", "=", "value"], "question": "List all 5 star Italian restaurant", "question_toks": ["List", "all", "5", "star", "Italian", "restaurant"], "guid": 6945}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | find the total checkins in Moroccan restaurant in \" Los Angeles \" on Friday", "sql": "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id JOIN checkin AS t4 ON t4.business_id = t1.business_id WHERE t1.city = \"Los Angeles\" AND t2.category_name = \"Moroccan\" AND t3.category_name = \"restaurant\" AND t4.day = \"Friday\";", "example": {"db_id": "yelp", "query": "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\" AND t4.day  =  \"Friday\";", "query_toks": ["SELECT", "SUM", "(", "t4.count", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "checkin", "AS", "t4", "ON", "t4.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Los", "Angeles", "''", "AND", "t2.category_name", "=", "``", "Moroccan", "''", "AND", "t3.category_name", "=", "``", "restaurant", "''", "AND", "t4.day", "=", "``", "Friday", "''", ";"], "query_toks_no_value": ["select", "sum", "(", "t4", ".", "count", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "checkin", "as", "t4", "on", "t4", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "category_name", "=", "value", "and", "t4", ".", "day", "=", "value"], "question": "find the total checkins in Moroccan restaurant in \" Los Angeles \" on Friday", "question_toks": ["find", "the", "total", "checkins", "in", "Moroccan", "restaurant", "in", "``", "Los", "Angeles", "``", "on", "Friday"], "guid": 6946}}
{"text": "shop: Shop_ID, Address, Num_of_staff, Score, Open_Year; member: Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address; happy_hour: HH_ID, Shop_ID, Month, Num_of_shaff_in_charge; happy_hour_member: HH_ID, Member_ID, Total_amount | which shop has happy hour most frequently? List its id and number of happy hours.", "sql": "SELECT shop_id, COUNT(*) FROM happy_hour GROUP BY shop_id ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "coffee_shop", "query": "SELECT shop_id ,  count(*) FROM happy_hour GROUP BY shop_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "shop_id", ",", "count", "(", "*", ")", "FROM", "happy_hour", "GROUP", "BY", "shop_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "shop_id", ",", "count", "(", "*", ")", "from", "happy_hour", "group", "by", "shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "which shop has happy hour most frequently? List its id and number of happy hours.", "question_toks": ["which", "shop", "has", "happy", "hour", "most", "frequently", "?", "List", "its", "id", "and", "number", "of", "happy", "hours", "."], "guid": 6947}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the number of rooms with price higher than 120 for different decor.", "sql": "SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor", "example": {"db_id": "inn_1", "query": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;", "query_toks": ["SELECT", "decor", ",", "count", "(", "*", ")", "FROM", "Rooms", "WHERE", "basePrice", ">", "120", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "count", "(", "*", ")", "from", "rooms", "where", "baseprice", ">", "value", "group", "by", "decor"], "question": "Find the number of rooms with price higher than 120 for different decor.", "question_toks": ["Find", "the", "number", "of", "rooms", "with", "price", "higher", "than", "120", "for", "different", "decor", "."], "guid": 6948}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | how many denny are there in the bay area ?", "sql": "SELECT COUNT(*) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = \"bay area\" AND t1.name = \"denny\";", "example": {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.name  =  \"denny\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.name", "=", "``", "denny", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "name", "=", "value"], "question": "how many denny are there in the bay area ?", "question_toks": ["how", "many", "denny", "are", "there", "in", "the", "bay", "area", "?"], "guid": 6949}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the apartment type codes and apartment numbers in the buildings managed by \"Kyle\".", "sql": "SELECT T2.apt_type_code, T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = \"Kyle\"", "example": {"db_id": "apartment_rentals", "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"", "query_toks": ["SELECT", "T2.apt_type_code", ",", "T2.apt_number", "FROM", "Apartment_Buildings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "WHERE", "T1.building_manager", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "t2", ".", "apt_type_code", ",", "t2", ".", "apt_number", "from", "apartment_buildings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "where", "t1", ".", "building_manager", "=", "value"], "question": "Show the apartment type codes and apartment numbers in the buildings managed by \"Kyle\".", "question_toks": ["Show", "the", "apartment", "type", "codes", "and", "apartment", "numbers", "in", "the", "buildings", "managed", "by", "``", "Kyle", "''", "."], "guid": 6950}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | Which restaurants have highest rating? List the restaurant name and its rating.", "sql": "SELECT ResName, Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1", "example": {"db_id": "restaurant_1", "query": "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1;", "query_toks": ["SELECT", "ResName", ",", "Rating", "FROM", "Restaurant", "ORDER", "BY", "Rating", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "resname", ",", "rating", "from", "restaurant", "order", "by", "rating", "desc", "limit", "value"], "question": "Which restaurants have highest rating? List the restaurant name and its rating.", "question_toks": ["Which", "restaurants", "have", "highest", "rating", "?", "List", "the", "restaurant", "name", "and", "its", "rating", "."], "guid": 6951}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the first and last names of people who payed more than the rooms' base prices.", "sql": "SELECT T1.firstname , T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Rate - T2.basePrice > 0", "example": {"db_id": "inn_1", "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "WHERE", "T1.Rate", "-", "T2.basePrice", ">", "0"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "where", "t1", ".", "rate", "-", "t2", ".", "baseprice", ">", "value"], "question": "Find the first and last names of people who payed more than the rooms' base prices.", "question_toks": ["Find", "the", "first", "and", "last", "names", "of", "people", "who", "payed", "more", "than", "the", "rooms", "'", "base", "prices", "."], "guid": 6952}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Find the total number of available hotels.", "sql": "SELECT COUNT(*) FROM hotels", "example": {"db_id": "cre_Theme_park", "query": "SELECT count(*) FROM HOTELS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "HOTELS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "hotels"], "question": "Find the total number of available hotels.", "question_toks": ["Find", "the", "total", "number", "of", "available", "hotels", "."], "guid": 6953}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the number of distinct bed types available in this inn.", "sql": "SELECT COUNT(DISTINCT bedType) FROM rooms", "example": {"db_id": "inn_1", "query": "SELECT count(DISTINCT bedType) FROM Rooms;", "query_toks": ["SELECT", "count", "(", "DISTINCT", "bedType", ")", "FROM", "Rooms", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "bedtype", ")", "from", "rooms"], "question": "Find the number of distinct bed types available in this inn.", "question_toks": ["Find", "the", "number", "of", "distinct", "bed", "types", "available", "in", "this", "inn", "."], "guid": 6954}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "sql": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC", "example": {"db_id": "museum_visit", "query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC", "query_toks": ["SELECT", "name", ",", "Level_of_membership", "FROM", "visitor", "WHERE", "Level_of_membership", ">", "4", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", ",", "level_of_membership", "from", "visitor", "where", "level_of_membership", ">", "value", "order", "by", "age", "desc"], "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "question_toks": ["Find", "the", "name", "and", "membership", "level", "of", "the", "visitors", "whose", "membership", "level", "is", "higher", "than", "4", ",", "and", "sort", "by", "their", "age", "from", "old", "to", "young", "."], "guid": 6955}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | What are the id and name of the museum visited most times?", "sql": "SELECT t2.Museum_ID , t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "museum_visit", "query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t2.Museum_ID", ",", "t1.name", "FROM", "museum", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.Museum_ID", "=", "t2.Museum_ID", "GROUP", "BY", "t2.Museum_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "museum_id", ",", "t1", ".", "name", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "museum_id", "=", "t2", ".", "museum_id", "group", "by", "t2", ".", "museum_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the id and name of the museum visited most times?", "question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "museum", "visited", "most", "times", "?"], "guid": 6956}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What is the minimum and maximum number of bathrooms of all the apartments?", "sql": "SELECT MIN(bathroom_count), MAX(bathroom_count) FROM Apartments", "example": {"db_id": "apartment_rentals", "query": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments", "query_toks": ["SELECT", "min", "(", "bathroom_count", ")", ",", "max", "(", "bathroom_count", ")", "FROM", "Apartments"], "query_toks_no_value": ["select", "min", "(", "bathroom_count", ")", ",", "max", "(", "bathroom_count", ")", "from", "apartments"], "question": "What is the minimum and maximum number of bathrooms of all the apartments?", "question_toks": ["What", "is", "the", "minimum", "and", "maximum", "number", "of", "bathrooms", "of", "all", "the", "apartments", "?"], "guid": 6957}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | how many buttercup kitchen are there in san francisco ?", "sql": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t1.name = \"buttercup kitchen\";", "example": {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"buttercup kitchen\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.name", "=", "``", "buttercup", "kitchen", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "name", "=", "value"], "question": "how many buttercup kitchen are there in san francisco ?", "question_toks": ["how", "many", "buttercup", "kitchen", "are", "there", "in", "san", "francisco", "?"], "guid": 6958}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | show me a good arabic restaurant in mountain view ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "show me a good arabic restaurant in mountain view ?", "question_toks": ["show", "me", "a", "good", "arabic", "restaurant", "in", "mountain", "view", "?"], "guid": 6959}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | what is the average rating given in Michelle reviews", "sql": "SELECT AVG(t1.rating) FROM USER AS t2 JOIN review AS t1 ON t2.user_id = t1.user_id WHERE t2.name = \"Michelle\";", "example": {"db_id": "yelp", "query": "SELECT AVG ( t1.rating ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Michelle\";", "query_toks": ["SELECT", "AVG", "(", "t1.rating", ")", "FROM", "USER", "AS", "t2", "JOIN", "review", "AS", "t1", "ON", "t2.user_id", "=", "t1.user_id", "WHERE", "t2.name", "=", "``", "Michelle", "''", ";"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "rating", ")", "from", "user", "as", "t2", "join", "review", "as", "t1", "on", "t2", ".", "user_id", "=", "t1", ".", "user_id", "where", "t2", ".", "name", "=", "value"], "question": "what is the average rating given in Michelle reviews", "question_toks": ["what", "is", "the", "average", "rating", "given", "in", "Michelle", "reviews"], "guid": 6960}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a restaurant in mountain view that serves good arabic food ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a restaurant in mountain view that serves good arabic food ?", "question_toks": ["where", "is", "a", "restaurant", "in", "mountain", "view", "that", "serves", "good", "arabic", "food", "?"], "guid": 6961}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what is the best restaurant in bay area for american food ?", "sql": "SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = \"bay area\" AND t1.food_type = \"american\" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = \"bay area\" AND t1.food_type = \"american\" );", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "what is the best restaurant in bay area for american food ?", "question_toks": ["what", "is", "the", "best", "restaurant", "in", "bay", "area", "for", "american", "food", "?"], "guid": 6962}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the names of the tourist attractions that can be accessed by bus?", "sql": "SELECT Name FROM Tourist_Attractions WHERE How_to_Get_There = \"bus\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"", "query_toks": ["SELECT", "Name", "FROM", "TOURIST_ATTRACTIONS", "WHERE", "How_to_Get_There", "=", "``", "bus", "''"], "query_toks_no_value": ["select", "name", "from", "tourist_attractions", "where", "how_to_get_there", "=", "value"], "question": "What are the names of the tourist attractions that can be accessed by bus?", "question_toks": ["What", "are", "the", "names", "of", "the", "tourist", "attractions", "that", "can", "be", "accessed", "by", "bus", "?"], "guid": 6963}}
{"text": "shop: Shop_ID, Address, Num_of_staff, Score, Open_Year; member: Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address; happy_hour: HH_ID, Shop_ID, Month, Num_of_shaff_in_charge; happy_hour_member: HH_ID, Member_ID, Total_amount | Find the purchase time, age and address of each member, and show the results in the order of purchase time.", "sql": "SELECT time_of_purchase, age, address FROM member ORDER BY time_of_purchase", "example": {"db_id": "coffee_shop", "query": "SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase", "query_toks": ["SELECT", "Time_of_purchase", ",", "age", ",", "address", "FROM", "member", "ORDER", "BY", "Time_of_purchase"], "query_toks_no_value": ["select", "time_of_purchase", ",", "age", ",", "address", "from", "member", "order", "by", "time_of_purchase"], "question": "Find the purchase time, age and address of each member, and show the results in the order of purchase time.", "question_toks": ["Find", "the", "purchase", "time", ",", "age", "and", "address", "of", "each", "member", ",", "and", "show", "the", "results", "in", "the", "order", "of", "purchase", "time", "."], "guid": 6964}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | find the number of reviews written for \" Cafe Zinho \" restaurant in Texas", "sql": "SELECT COUNT(DISTINCT t3.text) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id WHERE t1.name = \"Cafe Zinho\" AND t1.state = \"Texas\" AND t2.category_name = \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t3.text ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t3.text", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "review", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "WHERE", "t1.name", "=", "``", "Cafe", "Zinho", "''", "AND", "t1.state", "=", "``", "Texas", "''", "AND", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t3", ".", "text", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "review", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "name", "=", "value", "and", "t1", ".", "state", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "find the number of reviews written for \" Cafe Zinho \" restaurant in Texas", "question_toks": ["find", "the", "number", "of", "reviews", "written", "for", "``", "Cafe", "Zinho", "``", "restaurant", "in", "Texas"], "guid": 6965}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What are the guest first name, start date, and end date of each apartment booking?", "sql": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id", "example": {"db_id": "apartment_rentals", "query": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id", "query_toks": ["SELECT", "T2.guest_first_name", ",", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id"], "query_toks_no_value": ["select", "t2", ".", "guest_first_name", ",", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id"], "question": "What are the guest first name, start date, and end date of each apartment booking?", "question_toks": ["What", "are", "the", "guest", "first", "name", ",", "start", "date", ",", "and", "end", "date", "of", "each", "apartment", "booking", "?"], "guid": 6966}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | How many rooms have a king bed?", "sql": "SELECT COUNT(*) FROM Rooms WHERE bedType = 'King';", "example": {"db_id": "inn_1", "query": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Rooms", "WHERE", "bedType", "=", "``", "King", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "rooms", "where", "bedtype", "=", "value"], "question": "How many rooms have a king bed?", "question_toks": ["How", "many", "rooms", "have", "a", "king", "bed", "?"], "guid": 6967}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the number of rooms that do not have any reservation.", "sql": "SELECT COUNT(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)", "example": {"db_id": "inn_1", "query": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "rooms", "WHERE", "roomid", "NOT", "IN", "(", "SELECT", "DISTINCT", "room", "FROM", "reservations", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "rooms", "where", "roomid", "not", "in", "(", "select", "distinct", "room", "from", "reservations", ")"], "question": "Find the number of rooms that do not have any reservation.", "question_toks": ["Find", "the", "number", "of", "rooms", "that", "do", "not", "have", "any", "reservation", "."], "guid": 6968}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the details of the shops that can be accessed by walk?", "sql": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = \"walk\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "T1.Shop_Details", "FROM", "SHOPS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Shop_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "t1", ".", "shop_details", "from", "shops", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "how_to_get_there", "=", "value"], "question": "What are the details of the shops that can be accessed by walk?", "question_toks": ["What", "are", "the", "details", "of", "the", "shops", "that", "can", "be", "accessed", "by", "walk", "?"], "guid": 6969}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the distinct location names?", "sql": "SELECT DISTINCT Location_Name FROM Locations", "example": {"db_id": "cre_Theme_park", "query": "SELECT DISTINCT Location_Name FROM LOCATIONS", "query_toks": ["SELECT", "DISTINCT", "Location_Name", "FROM", "LOCATIONS"], "query_toks_no_value": ["select", "distinct", "location_name", "from", "locations"], "question": "What are the distinct location names?", "question_toks": ["What", "are", "the", "distinct", "location", "names", "?"], "guid": 6970}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Give me the minimum and maximum bathroom count among all the apartments.", "sql": "SELECT min(bathroom_count) , max(bathroom_count) FROM Apartments", "example": {"db_id": "apartment_rentals", "query": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments", "query_toks": ["SELECT", "min", "(", "bathroom_count", ")", ",", "max", "(", "bathroom_count", ")", "FROM", "Apartments"], "query_toks_no_value": ["select", "min", "(", "bathroom_count", ")", ",", "max", "(", "bathroom_count", ")", "from", "apartments"], "question": "Give me the minimum and maximum bathroom count among all the apartments.", "question_toks": ["Give", "me", "the", "minimum", "and", "maximum", "bathroom", "count", "among", "all", "the", "apartments", "."], "guid": 6971}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What is the average minimum and price of the rooms for each different decor.", "sql": "SELECT decor, AVG(basePrice), MIN(basePrice) FROM Rooms GROUP BY decor", "example": {"db_id": "inn_1", "query": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;", "query_toks": ["SELECT", "decor", ",", "avg", "(", "basePrice", ")", ",", "min", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "avg", "(", "baseprice", ")", ",", "min", "(", "baseprice", ")", "from", "rooms", "group", "by", "decor"], "question": "What is the average minimum and price of the rooms for each different decor.", "question_toks": ["What", "is", "the", "average", "minimum", "and", "price", "of", "the", "rooms", "for", "each", "different", "decor", "."], "guid": 6972}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all Mexican restaurant in Dallas with a rating above 3.5", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.city = \"Dallas\" AND t1.rating > 3.5 AND t2.category_name = \"Mexican\" AND t3.category_name = \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Mexican\" AND t3.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Dallas", "''", "AND", "t1.rating", ">", "3.5", "AND", "t2.category_name", "=", "``", "Mexican", "''", "AND", "t3.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t1", ".", "rating", ">", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "category_name", "=", "value"], "question": "Find all Mexican restaurant in Dallas with a rating above 3.5", "question_toks": ["Find", "all", "Mexican", "restaurant", "in", "Dallas", "with", "a", "rating", "above", "3.5"], "guid": 6973}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "sql": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "example": {"db_id": "museum_visit", "query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "query_toks": ["SELECT", "name", "FROM", "visitor", "WHERE", "Level_of_membership", ">", "4", "ORDER", "BY", "Level_of_membership", "DESC"], "query_toks_no_value": ["select", "name", "from", "visitor", "where", "level_of_membership", ">", "value", "order", "by", "level_of_membership", "desc"], "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "question_toks": ["Find", "the", "names", "of", "the", "visitors", "whose", "membership", "level", "is", "higher", "than", "4", ",", "and", "order", "the", "results", "by", "the", "level", "from", "high", "to", "low", "."], "guid": 6974}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | Which city does student Linda Smith live in?", "sql": "SELECT city_code FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";", "example": {"db_id": "restaurant_1", "query": "SELECT city_code FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";", "query_toks": ["SELECT", "city_code", "FROM", "Student", "WHERE", "Fname", "=", "``", "Linda", "''", "AND", "Lname", "=", "``", "Smith", "''", ";"], "query_toks_no_value": ["select", "city_code", "from", "student", "where", "fname", "=", "value", "and", "lname", "=", "value"], "question": "Which city does student Linda Smith live in?", "question_toks": ["Which", "city", "does", "student", "Linda", "Smith", "live", "in", "?"], "guid": 6975}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | Which student's age is older than 18 and is majoring in 600? List each student's first and last name.", "sql": "SELECT fname, lname FROM student WHERE age > 18 AND major = 600", "example": {"db_id": "restaurant_1", "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "Student", "WHERE", "Age", ">", "18", "AND", "Major", "=", "600", ";"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "age", ">", "value", "and", "major", "=", "value"], "question": "Which student's age is older than 18 and is majoring in 600? List each student's first and last name.", "question_toks": ["Which", "student", "'s", "age", "is", "older", "than", "18", "and", "is", "majoring", "in", "600", "?", "List", "each", "student", "'s", "first", "and", "last", "name", "."], "guid": 6976}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many escape games are there in Madison ?", "sql": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = \"Madison\" AND t2.category_name = \"escape games\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Madison", "''", "AND", "t2.category_name", "=", "``", "escape", "games", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "How many escape games are there in Madison ?", "question_toks": ["How", "many", "escape", "games", "are", "there", "in", "Madison", "?"], "guid": 6977}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | How many bookings does each booking status have? List the booking status code and the number of corresponding bookings.", "sql": "SELECT booking_status_code, COUNT(*) FROM apartment_bookings GROUP BY booking_status_code", "example": {"db_id": "apartment_rentals", "query": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code", "query_toks": ["SELECT", "booking_status_code", ",", "COUNT", "(", "*", ")", "FROM", "Apartment_Bookings", "GROUP", "BY", "booking_status_code"], "query_toks_no_value": ["select", "booking_status_code", ",", "count", "(", "*", ")", "from", "apartment_bookings", "group", "by", "booking_status_code"], "question": "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings.", "question_toks": ["How", "many", "bookings", "does", "each", "booking", "status", "have", "?", "List", "the", "booking", "status", "code", "and", "the", "number", "of", "corresponding", "bookings", "."], "guid": 6978}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | List the status shared by more than two roller coaster.", "sql": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*) > 2", "example": {"db_id": "roller_coaster", "query": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2", "query_toks": ["SELECT", "Status", "FROM", "roller_coaster", "GROUP", "BY", "Status", "HAVING", "COUNT", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "status", "from", "roller_coaster", "group", "by", "status", "having", "count", "(", "*", ")", ">", "value"], "question": "List the status shared by more than two roller coaster.", "question_toks": ["List", "the", "status", "shared", "by", "more", "than", "two", "roller", "coaster", "."], "guid": 6979}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is the best american restaurant in the bay area ?", "sql": "SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = \"bay area\" AND t1.food_type = \"american\" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = \"bay area\" AND t1.food_type = \"american\" );", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "where is the best american restaurant in the bay area ?", "question_toks": ["where", "is", "the", "best", "american", "restaurant", "in", "the", "bay", "area", "?"], "guid": 6980}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What is the name of the room that can accommodate the most people?", "sql": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1", "example": {"db_id": "inn_1", "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "ORDER", "BY", "maxOccupancy", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "order", "by", "maxoccupancy", "desc", "limit", "value"], "question": "What is the name of the room that can accommodate the most people?", "question_toks": ["What", "is", "the", "name", "of", "the", "room", "that", "can", "accommodate", "the", "most", "people", "?"], "guid": 6981}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the price ranges of hotels?", "sql": "SELECT price_range FROM HOTELS", "example": {"db_id": "cre_Theme_park", "query": "SELECT price_range FROM HOTELS", "query_toks": ["SELECT", "price_range", "FROM", "HOTELS"], "query_toks_no_value": ["select", "price_range", "from", "hotels"], "question": "What are the price ranges of hotels?", "question_toks": ["What", "are", "the", "price", "ranges", "of", "hotels", "?"], "guid": 6982}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the name of rooms whose price is higher than the average price.", "sql": "SELECT roomName FROM Rooms WHERE basePrice > ( SELECT avg(basePrice) FROM Rooms );", "example": {"db_id": "inn_1", "query": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "WHERE", "basePrice", ">", "(", "SELECT", "avg", "(", "basePrice", ")", "FROM", "Rooms", ")", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "baseprice", ">", "(", "select", "avg", "(", "baseprice", ")", "from", "rooms", ")"], "question": "Find the name of rooms whose price is higher than the average price.", "question_toks": ["Find", "the", "name", "of", "rooms", "whose", "price", "is", "higher", "than", "the", "average", "price", "."], "guid": 6983}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the apartment numbers of apartments with unit status availability of both 0 and 1.", "sql": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 1", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1", "query_toks": ["SELECT", "T1.apt_number", "FROM", "Apartments", "AS", "T1", "JOIN", "View_Unit_Status", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.available_yn", "=", "0", "INTERSECT", "SELECT", "T1.apt_number", "FROM", "Apartments", "AS", "T1", "JOIN", "View_Unit_Status", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.available_yn", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "apt_number", "from", "apartments", "as", "t1", "join", "view_unit_status", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "available_yn", "=", "value", "intersect", "select", "t1", ".", "apt_number", "from", "apartments", "as", "t1", "join", "view_unit_status", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "available_yn", "=", "value"], "question": "Show the apartment numbers of apartments with unit status availability of both 0 and 1.", "question_toks": ["Show", "the", "apartment", "numbers", "of", "apartments", "with", "unit", "status", "availability", "of", "both", "0", "and", "1", "."], "guid": 6984}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the booking status code and the corresponding number of bookings.", "sql": "SELECT booking_status_code, COUNT(*) FROM apartment_bookings GROUP BY booking_status_code", "example": {"db_id": "apartment_rentals", "query": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code", "query_toks": ["SELECT", "booking_status_code", ",", "COUNT", "(", "*", ")", "FROM", "Apartment_Bookings", "GROUP", "BY", "booking_status_code"], "query_toks_no_value": ["select", "booking_status_code", ",", "count", "(", "*", ")", "from", "apartment_bookings", "group", "by", "booking_status_code"], "question": "Show the booking status code and the corresponding number of bookings.", "question_toks": ["Show", "the", "booking", "status", "code", "and", "the", "corresponding", "number", "of", "bookings", "."], "guid": 6985}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | list all the businesses which Niloofar rated 5", "sql": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.rating  =  5 AND t3.name  =  \"Niloofar\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.rating  =  5 AND t3.name  =  \"Niloofar\";", "query_toks": ["SELECT", "t1.name", "FROM", "review", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t3", "ON", "t3.user_id", "=", "t2.user_id", "WHERE", "t2.rating", "=", "5", "AND", "t3.name", "=", "``", "Niloofar", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "review", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t3", "on", "t3", ".", "user_id", "=", "t2", ".", "user_id", "where", "t2", ".", "rating", "=", "value", "and", "t3", ".", "name", "=", "value"], "question": "list all the businesses which Niloofar rated 5", "question_toks": ["list", "all", "the", "businesses", "which", "Niloofar", "rated", "5"], "guid": 6986}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is denny in the bay area ?", "sql": "SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = \"bay area\" AND t1.name = \"denny\";", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.name  =  \"denny\";", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.name", "=", "``", "denny", "''", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "name", "=", "value"], "question": "where is denny in the bay area ?", "question_toks": ["where", "is", "denny", "in", "the", "bay", "area", "?"], "guid": 6987}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the names of the tourist attractions that have parking or shopping as their feature details?", "sql": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'shopping'", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'", "query_toks": ["SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "Tourist_Attraction_Features", "AS", "T2", "ON", "T1.tourist_attraction_id", "=", "T2.tourist_attraction_id", "JOIN", "Features", "AS", "T3", "ON", "T2.Feature_ID", "=", "T3.Feature_ID", "WHERE", "T3.feature_Details", "=", "'park", "'", "UNION", "SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "Tourist_Attraction_Features", "AS", "T2", "ON", "T1.tourist_attraction_id", "=", "T2.tourist_attraction_id", "JOIN", "Features", "AS", "T3", "ON", "T2.Feature_ID", "=", "T3.Feature_ID", "WHERE", "T3.feature_Details", "=", "'shopping", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "tourist_attraction_features", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "join", "features", "as", "t3", "on", "t2", ".", "feature_id", "=", "t3", ".", "feature_id", "where", "t3", ".", "feature_details", "=", "value", "union", "select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "tourist_attraction_features", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "join", "features", "as", "t3", "on", "t2", ".", "feature_id", "=", "t3", ".", "feature_id", "where", "t3", ".", "feature_details", "=", "value"], "question": "What are the names of the tourist attractions that have parking or shopping as their feature details?", "question_toks": ["What", "are", "the", "names", "of", "the", "tourist", "attractions", "that", "have", "parking", "or", "shopping", "as", "their", "feature", "details", "?"], "guid": 6988}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Return me the number of tips that are written by Michelle .", "sql": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id = t1.user_id WHERE t2.name = \"Michelle\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Michelle\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.text", ")", "FROM", "USER", "AS", "t2", "JOIN", "tip", "AS", "t1", "ON", "t2.user_id", "=", "t1.user_id", "WHERE", "t2.name", "=", "``", "Michelle", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "text", ")", "from", "user", "as", "t2", "join", "tip", "as", "t1", "on", "t2", ".", "user_id", "=", "t1", ".", "user_id", "where", "t2", ".", "name", "=", "value"], "question": "Return me the number of tips that are written by Michelle .", "question_toks": ["Return", "me", "the", "number", "of", "tips", "that", "are", "written", "by", "Michelle", "."], "guid": 6989}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | How many rooms cost more than 120, for each different decor?", "sql": "SELECT decor, COUNT(*) FROM rooms WHERE basePrice > 120 GROUP BY decor", "example": {"db_id": "inn_1", "query": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;", "query_toks": ["SELECT", "decor", ",", "count", "(", "*", ")", "FROM", "Rooms", "WHERE", "basePrice", ">", "120", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "count", "(", "*", ")", "from", "rooms", "where", "baseprice", ">", "value", "group", "by", "decor"], "question": "How many rooms cost more than 120, for each different decor?", "question_toks": ["How", "many", "rooms", "cost", "more", "than", "120", ",", "for", "each", "different", "decor", "?"], "guid": 6990}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the names of the tourist attractions Vincent and Marcelle visit?", "sql": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = \"Marcelle\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Marcelle\"", "query_toks": ["SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Vincent", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Marcelle", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value", "intersect", "select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value"], "question": "What are the names of the tourist attractions Vincent and Marcelle visit?", "question_toks": ["What", "are", "the", "names", "of", "the", "tourist", "attractions", "Vincent", "and", "Marcelle", "visit", "?"], "guid": 6991}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What is the average base price of different bed type? List bed type and average base price.", "sql": "SELECT bedType, AVG(basePrice) FROM Rooms GROUP BY bedType", "example": {"db_id": "inn_1", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "query_toks": ["SELECT", "bedType", ",", "avg", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "avg", "(", "baseprice", ")", "from", "rooms", "group", "by", "bedtype"], "question": "What is the average base price of different bed type? List bed type and average base price.", "question_toks": ["What", "is", "the", "average", "base", "price", "of", "different", "bed", "type", "?", "List", "bed", "type", "and", "average", "base", "price", "."], "guid": 6992}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what is a good restaurant in alameda ?", "sql": "SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"alameda\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what is a good restaurant in alameda ?", "question_toks": ["what", "is", "a", "good", "restaurant", "in", "alameda", "?"], "guid": 6993}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Which apartments have bookings with both status codes \"Provisional\" and \"Confirmed\"? Give me the apartment numbers.", "sql": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = \"Confirmed\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = \"Provisional\"", "example": {"db_id": "apartment_rentals", "query": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"", "query_toks": ["SELECT", "T2.apt_number", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T1.booking_status_code", "=", "``", "Confirmed", "''", "INTERSECT", "SELECT", "T2.apt_number", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T1.booking_status_code", "=", "``", "Provisional", "''"], "query_toks_no_value": ["select", "t2", ".", "apt_number", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t1", ".", "booking_status_code", "=", "value", "intersect", "select", "t2", ".", "apt_number", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t1", ".", "booking_status_code", "=", "value"], "question": "Which apartments have bookings with both status codes \"Provisional\" and \"Confirmed\"? Give me the apartment numbers.", "question_toks": ["Which", "apartments", "have", "bookings", "with", "both", "status", "codes", "``", "Provisional", "''", "and", "``", "Confirmed", "''", "?", "Give", "me", "the", "apartment", "numbers", "."], "guid": 6994}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | how many italian restaurants are in the yolo county ?", "sql": "SELECT COUNT(*) FROM geographic AS t1 JOIN restaurant AS t2 ON t1.city_name = t2.city_name WHERE t1.county = 'yolo county' AND t2.food_type = 'italian';", "example": {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"yolo county\" AND t1.food_type  =  \"italian\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.county", "=", "``", "yolo", "county", "''", "AND", "t1.food_type", "=", "``", "italian", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "county", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "how many italian restaurants are in the yolo county ?", "question_toks": ["how", "many", "italian", "restaurants", "are", "in", "the", "yolo", "county", "?"], "guid": 6995}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What are the name and id of the three highest priced rooms?", "sql": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3", "example": {"db_id": "inn_1", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;", "query_toks": ["SELECT", "RoomId", ",", "roomName", "FROM", "Rooms", "ORDER", "BY", "basePrice", "DESC", "LIMIT", "3", ";"], "query_toks_no_value": ["select", "roomid", ",", "roomname", "from", "rooms", "order", "by", "baseprice", "desc", "limit", "value"], "question": "What are the name and id of the three highest priced rooms?", "question_toks": ["What", "are", "the", "name", "and", "id", "of", "the", "three", "highest", "priced", "rooms", "?"], "guid": 6996}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the start dates and end dates of all the apartment bookings.", "sql": "SELECT booking_start_date, booking_end_date FROM Apartment_Bookings", "example": {"db_id": "apartment_rentals", "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings", "query_toks": ["SELECT", "booking_start_date", ",", "booking_end_date", "FROM", "Apartment_Bookings"], "query_toks_no_value": ["select", "booking_start_date", ",", "booking_end_date", "from", "apartment_bookings"], "question": "Show the start dates and end dates of all the apartment bookings.", "question_toks": ["Show", "the", "start", "dates", "and", "end", "dates", "of", "all", "the", "apartment", "bookings", "."], "guid": 6997}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Tell me the name of the staff in charge of the attraction called \"US museum\".", "sql": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = \"US museum\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\"", "query_toks": ["SELECT", "T1.Name", "FROM", "STAFF", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.Name", "=", "``", "US", "museum", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "staff", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "name", "=", "value"], "question": "Tell me the name of the staff in charge of the attraction called \"US museum\".", "question_toks": ["Tell", "me", "the", "name", "of", "the", "staff", "in", "charge", "of", "the", "attraction", "called", "``", "US", "museum", "''", "."], "guid": 6998}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | List the name of all rooms sorted by their prices.", "sql": "SELECT roomName FROM Rooms ORDER BY basePrice", "example": {"db_id": "inn_1", "query": "SELECT roomName FROM Rooms ORDER BY basePrice;", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "ORDER", "BY", "basePrice", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "order", "by", "baseprice"], "question": "List the name of all rooms sorted by their prices.", "question_toks": ["List", "the", "name", "of", "all", "rooms", "sorted", "by", "their", "prices", "."], "guid": 6999}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | How many king beds are there?", "sql": "SELECT sum(beds) FROM Rooms WHERE bedtype = 'King';", "example": {"db_id": "inn_1", "query": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';", "query_toks": ["SELECT", "sum", "(", "beds", ")", "FROM", "Rooms", "WHERE", "bedtype", "=", "'King", "'", ";"], "query_toks_no_value": ["select", "sum", "(", "beds", ")", "from", "rooms", "where", "bedtype", "=", "value"], "question": "How many king beds are there?", "question_toks": ["How", "many", "king", "beds", "are", "there", "?"], "guid": 7000}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show the average price of hotels for different pet policy.", "sql": "SELECT pets_allowed_yn , AVG(price_range) FROM HOTELS GROUP BY pets_allowed_yn", "example": {"db_id": "cre_Theme_park", "query": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn", "query_toks": ["SELECT", "pets_allowed_yn", ",", "avg", "(", "price_range", ")", "FROM", "HOTELS", "GROUP", "BY", "pets_allowed_yn"], "query_toks_no_value": ["select", "pets_allowed_yn", ",", "avg", "(", "price_range", ")", "from", "hotels", "group", "by", "pets_allowed_yn"], "question": "Show the average price of hotels for different pet policy.", "question_toks": ["Show", "the", "average", "price", "of", "hotels", "for", "different", "pet", "policy", "."], "guid": 7001}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what are some good places in mountain view for arabic food ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good places in mountain view for arabic food ?", "question_toks": ["what", "are", "some", "good", "places", "in", "mountain", "view", "for", "arabic", "food", "?"], "guid": 7002}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What are the first and last names of people who payed more than the rooms' base prices?", "sql": "SELECT T1.firstname , T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Rate - T2.basePrice > 0", "example": {"db_id": "inn_1", "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "WHERE", "T1.Rate", "-", "T2.basePrice", ">", "0"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "where", "t1", ".", "rate", "-", "t2", ".", "baseprice", ">", "value"], "question": "What are the first and last names of people who payed more than the rooms' base prices?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "people", "who", "payed", "more", "than", "the", "rooms", "'", "base", "prices", "?"], "guid": 7003}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | find the total checkins in Moroccan restaurant in \" Los Angeles \" per day", "sql": "SELECT t4.day, SUM(t4.count) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id JOIN checkin AS t4 ON t4.business_id = t1.business_id WHERE t1.city = \"Los Angeles\" AND t2.category_name = \"Moroccan\" AND t3.category_name = \"restaurant\" GROUP BY t4.day", "example": {"db_id": "yelp", "query": "SELECT t4.day  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\" GROUP BY t4.day;", "query_toks": ["SELECT", "t4.day", ",", "SUM", "(", "t4.count", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "checkin", "AS", "t4", "ON", "t4.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Los", "Angeles", "''", "AND", "t2.category_name", "=", "``", "Moroccan", "''", "AND", "t3.category_name", "=", "``", "restaurant", "''", "GROUP", "BY", "t4.day", ";"], "query_toks_no_value": ["select", "t4", ".", "day", ",", "sum", "(", "t4", ".", "count", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "checkin", "as", "t4", "on", "t4", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "category_name", "=", "value", "group", "by", "t4", ".", "day"], "question": "find the total checkins in Moroccan restaurant in \" Los Angeles \" per day", "question_toks": ["find", "the", "total", "checkins", "in", "Moroccan", "restaurant", "in", "``", "Los", "Angeles", "``", "per", "day"], "guid": 7004}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all users who reviewed restaurant \" Mesa Grill \"", "sql": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t1.name = \"Mesa Grill\" AND t2.category_name = \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Mesa Grill\" AND t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t4.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "review", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t4", "ON", "t4.user_id", "=", "t3.user_id", "WHERE", "t1.name", "=", "``", "Mesa", "Grill", "''", "AND", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t4", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "review", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t4", "on", "t4", ".", "user_id", "=", "t3", ".", "user_id", "where", "t1", ".", "name", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "Find all users who reviewed restaurant \" Mesa Grill \"", "question_toks": ["Find", "all", "users", "who", "reviewed", "restaurant", "``", "Mesa", "Grill", "``"], "guid": 7005}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What is the theme and artist name for the exhibition with a ticket price higher than the average?", "sql": "SELECT T1.theme , T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id WHERE T1.ticket_price > (SELECT avg(ticket_price) FROM exhibition)", "example": {"db_id": "theme_gallery", "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)", "query_toks": ["SELECT", "T1.theme", ",", "T2.name", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "WHERE", "T1.ticket_price", ">", "(", "SELECT", "avg", "(", "ticket_price", ")", "FROM", "exhibition", ")"], "query_toks_no_value": ["select", "t1", ".", "theme", ",", "t2", ".", "name", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "ticket_price", ">", "(", "select", "avg", "(", "ticket_price", ")", "from", "exhibition", ")"], "question": "What is the theme and artist name for the exhibition with a ticket price higher than the average?", "question_toks": ["What", "is", "the", "theme", "and", "artist", "name", "for", "the", "exhibition", "with", "a", "ticket", "price", "higher", "than", "the", "average", "?"], "guid": 7006}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what are some good restaurants in mountain view for arabic food ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good restaurants in mountain view for arabic food ?", "question_toks": ["what", "are", "some", "good", "restaurants", "in", "mountain", "view", "for", "arabic", "food", "?"], "guid": 7007}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a restaurant in mountain view that serves good arabic food ?", "sql": "SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a restaurant in mountain view that serves good arabic food ?", "question_toks": ["give", "me", "a", "restaurant", "in", "mountain", "view", "that", "serves", "good", "arabic", "food", "?"], "guid": 7008}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a good french restaurant in the yosemite and mono lake area ?", "sql": "SELECT t3.house_number, t1.name FROM geographic AS t2 JOIN restaurant AS t1 ON t1.city_name = t2.city_name JOIN location AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = \"yosemite and mono lake area\" AND t1.food_type = \"french\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good french restaurant in the yosemite and mono lake area ?", "question_toks": ["give", "me", "a", "good", "french", "restaurant", "in", "the", "yosemite", "and", "mono", "lake", "area", "?"], "guid": 7009}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some restaurants on bethel island rd in bethel island ?", "sql": "SELECT t2.house_number , t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"bethel island\" AND t2.street_name = \"bethel island rd\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "bethel", "island", "''", "AND", "t2.street_name", "=", "``", "bethel", "island", "rd", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value"], "question": "give me some restaurants on bethel island rd in bethel island ?", "question_toks": ["give", "me", "some", "restaurants", "on", "bethel", "island", "rd", "in", "bethel", "island", "?"], "guid": 7010}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the number of rooms for each bed type.", "sql": "SELECT bedType, count(*) FROM Rooms GROUP BY bedType", "example": {"db_id": "inn_1", "query": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;", "query_toks": ["SELECT", "bedType", ",", "count", "(", "*", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "count", "(", "*", ")", "from", "rooms", "group", "by", "bedtype"], "question": "Find the number of rooms for each bed type.", "question_toks": ["Find", "the", "number", "of", "rooms", "for", "each", "bed", "type", "."], "guid": 7011}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What is the booking status code of the apartment with apartment number \"Suite 634\"?", "sql": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = \"Suite 634\"", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\"", "query_toks": ["SELECT", "T1.booking_status_code", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.apt_number", "=", "``", "Suite", "634", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_status_code", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "apt_number", "=", "value"], "question": "What is the booking status code of the apartment with apartment number \"Suite 634\"?", "question_toks": ["What", "is", "the", "booking", "status", "code", "of", "the", "apartment", "with", "apartment", "number", "``", "Suite", "634", "''", "?"], "guid": 7012}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what are some good restaurants in the yosemite and mono lake area for french food ?", "sql": "SELECT t3.house_number, t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = \"yosemite and mono lake area\" AND t1.food_type = \"french\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good restaurants in the yosemite and mono lake area for french food ?", "question_toks": ["what", "are", "some", "good", "restaurants", "in", "the", "yosemite", "and", "mono", "lake", "area", "for", "french", "food", "?"], "guid": 7013}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the apartment type code that has the largest number of total rooms, together with the number of bathrooms and number of bedrooms.", "sql": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1", "query_toks": ["SELECT", "apt_type_code", ",", "bathroom_count", ",", "bedroom_count", "FROM", "Apartments", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "sum", "(", "room_count", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "apt_type_code", ",", "bathroom_count", ",", "bedroom_count", "from", "apartments", "group", "by", "apt_type_code", "order", "by", "sum", "(", "room_count", ")", "desc", "limit", "value"], "question": "Show the apartment type code that has the largest number of total rooms, together with the number of bathrooms and number of bedrooms.", "question_toks": ["Show", "the", "apartment", "type", "code", "that", "has", "the", "largest", "number", "of", "total", "rooms", ",", "together", "with", "the", "number", "of", "bathrooms", "and", "number", "of", "bedrooms", "."], "guid": 7014}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | List all users who reviewed businesses that are restaurant in 2010 .", "sql": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restaurant\" AND t3.year  =  2010;", "example": {"db_id": "yelp", "query": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restaurant\" AND t3.year  =  2010;", "query_toks": ["SELECT", "t4.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "review", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t4", "ON", "t4.user_id", "=", "t3.user_id", "WHERE", "t2.category_name", "=", "``", "restaurant", "''", "AND", "t3.year", "=", "2010", ";"], "query_toks_no_value": ["select", "t4", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "review", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t4", "on", "t4", ".", "user_id", "=", "t3", ".", "user_id", "where", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "year", "=", "value"], "question": "List all users who reviewed businesses that are restaurant in 2010 .", "question_toks": ["List", "all", "users", "who", "reviewed", "businesses", "that", "are", "restaurant", "in", "2010", "."], "guid": 7015}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show the transportation method most people choose to get to tourist attractions.", "sql": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "cre_Theme_park", "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "How_to_Get_There", "FROM", "Tourist_Attractions", "GROUP", "BY", "How_to_Get_There", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "how_to_get_there", "from", "tourist_attractions", "group", "by", "how_to_get_there", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the transportation method most people choose to get to tourist attractions.", "question_toks": ["Show", "the", "transportation", "method", "most", "people", "choose", "to", "get", "to", "tourist", "attractions", "."], "guid": 7016}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the name of the room with the maximum occupancy.", "sql": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1", "example": {"db_id": "inn_1", "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "ORDER", "BY", "maxOccupancy", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "order", "by", "maxoccupancy", "desc", "limit", "value"], "question": "Find the name of the room with the maximum occupancy.", "question_toks": ["Find", "the", "name", "of", "the", "room", "with", "the", "maximum", "occupancy", "."], "guid": 7017}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | What are all the breweries in \" Los Angeles \" ?", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = \"Los Angeles\" AND t2.category_name = \"breweries\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Los", "Angeles", "''", "AND", "t2.category_name", "=", "``", "breweries", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "What are all the breweries in \" Los Angeles \" ?", "question_toks": ["What", "are", "all", "the", "breweries", "in", "``", "Los", "Angeles", "``", "?"], "guid": 7018}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Show all artist names who didn't have an exhibition in 2004.", "sql": "SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id WHERE T1.year = 2004", "example": {"db_id": "theme_gallery", "query": "SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004", "query_toks": ["SELECT", "name", "FROM", "artist", "EXCEPT", "SELECT", "T2.name", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "WHERE", "T1.year", "=", "2004"], "query_toks_no_value": ["select", "name", "from", "artist", "except", "select", "t2", ".", "name", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "year", "=", "value"], "question": "Show all artist names who didn't have an exhibition in 2004.", "question_toks": ["Show", "all", "artist", "names", "who", "did", "n't", "have", "an", "exhibition", "in", "2004", "."], "guid": 7019}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | How many exhibitions have a attendance more than 100 or have a ticket price below 10?", "sql": "SELECT COUNT(*) FROM exhibition AS T1 JOIN exhibition_record AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.attendance > 100 OR T1.ticket_price < 10", "example": {"db_id": "theme_gallery", "query": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T1.attendance", ">", "100", "OR", "T2.ticket_price", "<", "10"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t1", ".", "attendance", ">", "value", "or", "t2", ".", "ticket_price", "<", "value"], "question": "How many exhibitions have a attendance more than 100 or have a ticket price below 10?", "question_toks": ["How", "many", "exhibitions", "have", "a", "attendance", "more", "than", "100", "or", "have", "a", "ticket", "price", "below", "10", "?"], "guid": 7020}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a restaurant on bethel island rd in bethel island ?", "sql": "SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"bethel island\" AND t2.street_name = \"bethel island rd\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "bethel", "island", "''", "AND", "t2.street_name", "=", "``", "bethel", "island", "rd", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value"], "question": "give me a restaurant on bethel island rd in bethel island ?", "question_toks": ["give", "me", "a", "restaurant", "on", "bethel", "island", "rd", "in", "bethel", "island", "?"], "guid": 7021}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a good restaurant in mountain view for arabic food ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good restaurant in mountain view for arabic food ?", "question_toks": ["give", "me", "a", "good", "restaurant", "in", "mountain", "view", "for", "arabic", "food", "?"], "guid": 7022}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | Give me the best french in san francisco ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "Give me the best french in san francisco ?", "question_toks": ["Give", "me", "the", "best", "french", "in", "san", "francisco", "?"], "guid": 7023}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a good arabic on buchanan in san francisco ?", "sql": "SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t2.street_name = \"buchanan\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good arabic on buchanan in san francisco ?", "question_toks": ["give", "me", "a", "good", "arabic", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 7024}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | How many distinct names are associated with all the photos?", "sql": "SELECT COUNT(DISTINCT Name) FROM Photos", "example": {"db_id": "cre_Theme_park", "query": "SELECT count(DISTINCT Name) FROM PHOTOS", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Name", ")", "FROM", "PHOTOS"], "query_toks_no_value": ["select", "count", "(", "distinct", "name", ")", "from", "photos"], "question": "How many distinct names are associated with all the photos?", "question_toks": ["How", "many", "distinct", "names", "are", "associated", "with", "all", "the", "photos", "?"], "guid": 7025}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Which guests have apartment bookings with status code \"Confirmed\"? Return their first names and last names.", "sql": "SELECT T2.guest_first_name , T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T1.booking_status_code = \"Confirmed\"", "example": {"db_id": "apartment_rentals", "query": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"", "query_toks": ["SELECT", "T2.guest_first_name", ",", "T2.guest_last_name", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id", "WHERE", "T1.booking_status_code", "=", "``", "Confirmed", "''"], "query_toks_no_value": ["select", "t2", ".", "guest_first_name", ",", "t2", ".", "guest_last_name", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id", "where", "t1", ".", "booking_status_code", "=", "value"], "question": "Which guests have apartment bookings with status code \"Confirmed\"? Return their first names and last names.", "question_toks": ["Which", "guests", "have", "apartment", "bookings", "with", "status", "code", "``", "Confirmed", "''", "?", "Return", "their", "first", "names", "and", "last", "names", "."], "guid": 7026}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What are the theme and year for all exhibitions that have a ticket price under 15?", "sql": "SELECT theme, year FROM exhibition WHERE ticket_price < 15", "example": {"db_id": "theme_gallery", "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15", "query_toks": ["SELECT", "theme", ",", "YEAR", "FROM", "exhibition", "WHERE", "ticket_price", "<", "15"], "query_toks_no_value": ["select", "theme", ",", "year", "from", "exhibition", "where", "ticket_price", "<", "value"], "question": "What are the theme and year for all exhibitions that have a ticket price under 15?", "question_toks": ["What", "are", "the", "theme", "and", "year", "for", "all", "exhibitions", "that", "have", "a", "ticket", "price", "under", "15", "?"], "guid": 7027}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What are the bed type and name of all the rooms with traditional decor?", "sql": "SELECT roomName, bedType FROM rooms WHERE decor = 'traditional';", "example": {"db_id": "inn_1", "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";", "query_toks": ["SELECT", "roomName", ",", "bedType", "FROM", "Rooms", "WHERE", "decor", "=", "``", "traditional", "''", ";"], "query_toks_no_value": ["select", "roomname", ",", "bedtype", "from", "rooms", "where", "decor", "=", "value"], "question": "What are the bed type and name of all the rooms with traditional decor?", "question_toks": ["What", "are", "the", "bed", "type", "and", "name", "of", "all", "the", "rooms", "with", "traditional", "decor", "?"], "guid": 7028}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the number of rooms with king bed for each decor type.", "sql": "SELECT decor, COUNT(*) FROM Rooms WHERE bedType = 'King' GROUP BY decor", "example": {"db_id": "inn_1", "query": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;", "query_toks": ["SELECT", "decor", ",", "count", "(", "*", ")", "FROM", "Rooms", "WHERE", "bedType", "=", "``", "King", "''", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "count", "(", "*", ")", "from", "rooms", "where", "bedtype", "=", "value", "group", "by", "decor"], "question": "Find the number of rooms with king bed for each decor type.", "question_toks": ["Find", "the", "number", "of", "rooms", "with", "king", "bed", "for", "each", "decor", "type", "."], "guid": 7029}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can i eat some good arabic food in mountain view ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where can i eat some good arabic food in mountain view ?", "question_toks": ["where", "can", "i", "eat", "some", "good", "arabic", "food", "in", "mountain", "view", "?"], "guid": 7030}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Find the names of the tourist attractions that is either accessible by walk or at address 660 Shea Crescent.", "sql": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = \"660 Shea Crescent\" OR T2.How_to_Get_There = \"walk\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "T2.Name", "FROM", "Locations", "AS", "T1", "JOIN", "Tourist_Attractions", "AS", "T2", "ON", "T1.Location_ID", "=", "T2.Location_ID", "WHERE", "T1.Address", "=", "``", "660", "Shea", "Crescent", "''", "OR", "T2.How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "locations", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "location_id", "=", "t2", ".", "location_id", "where", "t1", ".", "address", "=", "value", "or", "t2", ".", "how_to_get_there", "=", "value"], "question": "Find the names of the tourist attractions that is either accessible by walk or at address 660 Shea Crescent.", "question_toks": ["Find", "the", "names", "of", "the", "tourist", "attractions", "that", "is", "either", "accessible", "by", "walk", "or", "at", "address", "660", "Shea", "Crescent", "."], "guid": 7031}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What are the address and phone number of the buildings managed by \"Brenden\"?", "sql": "SELECT building_address, building_phone FROM Apartment_Buildings WHERE building_manager = \"Brenden\"", "example": {"db_id": "apartment_rentals", "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"", "query_toks": ["SELECT", "building_address", ",", "building_phone", "FROM", "Apartment_Buildings", "WHERE", "building_manager", "=", "``", "Brenden", "''"], "query_toks_no_value": ["select", "building_address", ",", "building_phone", "from", "apartment_buildings", "where", "building_manager", "=", "value"], "question": "What are the address and phone number of the buildings managed by \"Brenden\"?", "question_toks": ["What", "are", "the", "address", "and", "phone", "number", "of", "the", "buildings", "managed", "by", "``", "Brenden", "''", "?"], "guid": 7032}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Find the average room count of the apartments that have the \"Studio\" type code.", "sql": "SELECT AVG(room_count) FROM Apartments WHERE apt_type_code = 'Studio'", "example": {"db_id": "apartment_rentals", "query": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\"", "query_toks": ["SELECT", "avg", "(", "room_count", ")", "FROM", "Apartments", "WHERE", "apt_type_code", "=", "``", "Studio", "''"], "query_toks_no_value": ["select", "avg", "(", "room_count", ")", "from", "apartments", "where", "apt_type_code", "=", "value"], "question": "Find the average room count of the apartments that have the \"Studio\" type code.", "question_toks": ["Find", "the", "average", "room", "count", "of", "the", "apartments", "that", "have", "the", "``", "Studio", "''", "type", "code", "."], "guid": 7033}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | List all the possible ways to get to attractions, together with the number of attractions accessible by these methods.", "sql": "SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There", "example": {"db_id": "cre_Theme_park", "query": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There", "query_toks": ["SELECT", "How_to_Get_There", ",", "COUNT", "(", "*", ")", "FROM", "Tourist_Attractions", "GROUP", "BY", "How_to_Get_There"], "query_toks_no_value": ["select", "how_to_get_there", ",", "count", "(", "*", ")", "from", "tourist_attractions", "group", "by", "how_to_get_there"], "question": "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods.", "question_toks": ["List", "all", "the", "possible", "ways", "to", "get", "to", "attractions", ",", "together", "with", "the", "number", "of", "attractions", "accessible", "by", "these", "methods", "."], "guid": 7034}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Find the details of all the markets that are accessible by walk or bus.", "sql": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = \"walk\" OR T2.How_to_Get_There = \"bus\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\" OR  T2.How_to_Get_There  =  \"bus\"", "query_toks": ["SELECT", "T1.Market_Details", "FROM", "Street_Markets", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Market_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.How_to_Get_There", "=", "``", "walk", "''", "OR", "T2.How_to_Get_There", "=", "``", "bus", "''"], "query_toks_no_value": ["select", "t1", ".", "market_details", "from", "street_markets", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "how_to_get_there", "=", "value", "or", "t2", ".", "how_to_get_there", "=", "value"], "question": "Find the details of all the markets that are accessible by walk or bus.", "question_toks": ["Find", "the", "details", "of", "all", "the", "markets", "that", "are", "accessible", "by", "walk", "or", "bus", "."], "guid": 7035}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | how many places for chinese are there in the bay area ?", "sql": "SELECT COUNT(*) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = \"bay area\" AND t1.food_type = \"chinese\";", "example": {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "chinese", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "how many places for chinese are there in the bay area ?", "question_toks": ["how", "many", "places", "for", "chinese", "are", "there", "in", "the", "bay", "area", "?"], "guid": 7036}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | How many times has the student Linda Smith visited Subway?", "sql": "SELECT COUNT(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";", "example": {"db_id": "restaurant_1", "query": "SELECT count(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Student", "JOIN", "Visits_Restaurant", "ON", "Student.StuID", "=", "Visits_Restaurant.StuID", "JOIN", "Restaurant", "ON", "Visits_Restaurant.ResID", "=", "Restaurant.ResID", "WHERE", "Student.Fname", "=", "``", "Linda", "''", "AND", "Student.Lname", "=", "``", "Smith", "''", "AND", "Restaurant.ResName", "=", "``", "Subway", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "student", "join", "visits_restaurant", "on", "student.stuid", "=", "visits_restaurant.stuid", "join", "restaurant", "on", "visits_restaurant.resid", "=", "restaurant.resid", "where", "student.fname", "=", "value", "and", "student.lname", "=", "value", "and", "restaurant.resname", "=", "value"], "question": "How many times has the student Linda Smith visited Subway?", "question_toks": ["How", "many", "times", "has", "the", "student", "Linda", "Smith", "visited", "Subway", "?"], "guid": 7037}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show the names and ids of tourist attractions that are visited at most once.", "sql": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*) <= 1", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1", "query_toks": ["SELECT", "T1.Name", ",", "T1.Tourist_Attraction_ID", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "GROUP", "BY", "T2.Tourist_Attraction_ID", "HAVING", "count", "(", "*", ")", "<", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "tourist_attraction_id", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "group", "by", "t2", ".", "tourist_attraction_id", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "Show the names and ids of tourist attractions that are visited at most once.", "question_toks": ["Show", "the", "names", "and", "ids", "of", "tourist", "attractions", "that", "are", "visited", "at", "most", "once", "."], "guid": 7038}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can i eat some good arabic food on buchanan in san francisco ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t2.street_name = \"buchanan\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where can i eat some good arabic food on buchanan in san francisco ?", "question_toks": ["where", "can", "i", "eat", "some", "good", "arabic", "food", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 7039}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Find the details of the shops that can be reached by walk.", "sql": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = \"walk\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "T1.Shop_Details", "FROM", "SHOPS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Shop_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "t1", ".", "shop_details", "from", "shops", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "how_to_get_there", "=", "value"], "question": "Find the details of the shops that can be reached by walk.", "question_toks": ["Find", "the", "details", "of", "the", "shops", "that", "can", "be", "reached", "by", "walk", "."], "guid": 7040}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way.", "sql": "SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There", "example": {"db_id": "cre_Theme_park", "query": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There", "query_toks": ["SELECT", "How_to_Get_There", ",", "COUNT", "(", "*", ")", "FROM", "Tourist_Attractions", "GROUP", "BY", "How_to_Get_There"], "query_toks_no_value": ["select", "how_to_get_there", ",", "count", "(", "*", ")", "from", "tourist_attractions", "group", "by", "how_to_get_there"], "question": "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way.", "question_toks": ["Show", "different", "ways", "to", "get", "to", "attractions", "and", "the", "number", "of", "attractions", "that", "can", "be", "accessed", "in", "the", "corresponding", "way", "."], "guid": 7041}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | Which Advisor has most of students? List advisor and the number of students.", "sql": "SELECT Advisor ,  count(*) FROM Student GROUP BY Advisor ORDER BY count(Advisor) DESC LIMIT 1;", "example": {"db_id": "restaurant_1", "query": "SELECT Advisor ,  count(*) FROM Student GROUP BY Advisor ORDER BY count(Advisor) DESC LIMIT 1;", "query_toks": ["SELECT", "Advisor", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "Advisor", "ORDER", "BY", "count", "(", "Advisor", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "advisor", ",", "count", "(", "*", ")", "from", "student", "group", "by", "advisor", "order", "by", "count", "(", "advisor", ")", "desc", "limit", "value"], "question": "Which Advisor has most of students? List advisor and the number of students.", "question_toks": ["Which", "Advisor", "has", "most", "of", "students", "?", "List", "advisor", "and", "the", "number", "of", "students", "."], "guid": 7042}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | What is the gender of the student Linda Smith?", "sql": "SELECT Sex FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";", "example": {"db_id": "restaurant_1", "query": "SELECT Sex FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";", "query_toks": ["SELECT", "Sex", "FROM", "Student", "WHERE", "Fname", "=", "``", "Linda", "''", "AND", "Lname", "=", "``", "Smith", "''", ";"], "query_toks_no_value": ["select", "sex", "from", "student", "where", "fname", "=", "value", "and", "lname", "=", "value"], "question": "What is the gender of the student Linda Smith?", "question_toks": ["What", "is", "the", "gender", "of", "the", "student", "Linda", "Smith", "?"], "guid": 7043}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What are the number of rooms for each bed type?", "sql": "SELECT bedType, COUNT(*) FROM rooms GROUP BY bedType", "example": {"db_id": "inn_1", "query": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;", "query_toks": ["SELECT", "bedType", ",", "count", "(", "*", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "count", "(", "*", ")", "from", "rooms", "group", "by", "bedtype"], "question": "What are the number of rooms for each bed type?", "question_toks": ["What", "are", "the", "number", "of", "rooms", "for", "each", "bed", "type", "?"], "guid": 7044}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the number of adults for the room reserved and checked in by CONRAD SELBIG on Oct 23, 2010.", "sql": "SELECT Adults FROM Reservations WHERE CheckIn = \"2010-10-23\" AND FirstName = \"CONRAD\" AND LastName = \"SELBIG\";", "example": {"db_id": "inn_1", "query": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";", "query_toks": ["SELECT", "Adults", "FROM", "Reservations", "WHERE", "CheckIn", "=", "``", "2010-10-23", "''", "AND", "FirstName", "=", "``", "CONRAD", "''", "AND", "LastName", "=", "``", "SELBIG", "''", ";"], "query_toks_no_value": ["select", "adults", "from", "reservations", "where", "checkin", "=", "value", "and", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "Find the number of adults for the room reserved and checked in by CONRAD SELBIG on Oct 23, 2010.", "question_toks": ["Find", "the", "number", "of", "adults", "for", "the", "room", "reserved", "and", "checked", "in", "by", "CONRAD", "SELBIG", "on", "Oct", "23", ",", "2010", "."], "guid": 7045}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | how many jamerican cuisine are there in santa cruz county ?", "sql": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"santa cruz county\" AND t1.name  =  \"jamerican cuisine\";", "example": {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"santa cruz county\" AND t1.name  =  \"jamerican cuisine\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.county", "=", "``", "santa", "cruz", "county", "''", "AND", "t1.name", "=", "``", "jamerican", "cuisine", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "county", "=", "value", "and", "t1", ".", "name", "=", "value"], "question": "how many jamerican cuisine are there in santa cruz county ?", "question_toks": ["how", "many", "jamerican", "cuisine", "are", "there", "in", "santa", "cruz", "county", "?"], "guid": 7046}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | For each room, find its name and the number of times reservations were made for it.", "sql": "SELECT T2.roomName , COUNT(*) , T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room", "example": {"db_id": "inn_1", "query": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room", "query_toks": ["SELECT", "T2.roomName", ",", "count", "(", "*", ")", ",", "T1.Room", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "GROUP", "BY", "T1.Room"], "query_toks_no_value": ["select", "t2", ".", "roomname", ",", "count", "(", "*", ")", ",", "t1", ".", "room", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "group", "by", "t1", ".", "room"], "question": "For each room, find its name and the number of times reservations were made for it.", "question_toks": ["For", "each", "room", ",", "find", "its", "name", "and", "the", "number", "of", "times", "reservations", "were", "made", "for", "it", "."], "guid": 7047}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Return the name, rate, check in and check out date for the room with the highest rate.", "sql": "SELECT T2.roomName , T1.Rate , T1.CheckIn , T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1", "example": {"db_id": "inn_1", "query": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;", "query_toks": ["SELECT", "T2.roomName", ",", "T1.Rate", ",", "T1.CheckIn", ",", "T1.CheckOut", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "GROUP", "BY", "T1.Room", "ORDER", "BY", "T1.Rate", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "roomname", ",", "t1", ".", "rate", ",", "t1", ".", "checkin", ",", "t1", ".", "checkout", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "group", "by", "t1", ".", "room", "order", "by", "t1", ".", "rate", "desc", "limit", "value"], "question": "Return the name, rate, check in and check out date for the room with the highest rate.", "question_toks": ["Return", "the", "name", ",", "rate", ",", "check", "in", "and", "check", "out", "date", "for", "the", "room", "with", "the", "highest", "rate", "."], "guid": 7048}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order.", "sql": "SELECT apt_type_code, COUNT(*) FROM apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC", "query_toks": ["SELECT", "apt_type_code", ",", "COUNT", "(", "*", ")", "FROM", "Apartments", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "COUNT", "(", "*", ")", "ASC"], "query_toks_no_value": ["select", "apt_type_code", ",", "count", "(", "*", ")", "from", "apartments", "group", "by", "apt_type_code", "order", "by", "count", "(", "*", ")", "asc"], "question": "Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order.", "question_toks": ["Show", "the", "apartment", "type", "codes", "and", "the", "corresponding", "number", "of", "apartments", "sorted", "by", "the", "number", "of", "apartments", "in", "ascending", "order", "."], "guid": 7049}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can we find some restaurants in alameda ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"alameda\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value"], "question": "where can we find some restaurants in alameda ?", "question_toks": ["where", "can", "we", "find", "some", "restaurants", "in", "alameda", "?"], "guid": 7050}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find the number of users called Michelle", "sql": "SELECT COUNT ( DISTINCT name ) FROM USER WHERE name = \"Michelle\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT name ) FROM USER WHERE name  =  \"Michelle\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "name", ")", "FROM", "USER", "WHERE", "name", "=", "``", "Michelle", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "name", ")", "from", "user", "where", "name", "=", "value"], "question": "Find the number of users called Michelle", "question_toks": ["Find", "the", "number", "of", "users", "called", "Michelle"], "guid": 7051}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What is the theme, date, and attendance for the exhibition in year 2004?", "sql": "SELECT T2.theme , T1.date , T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004", "example": {"db_id": "theme_gallery", "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004", "query_toks": ["SELECT", "T2.theme", ",", "T1.date", ",", "T1.attendance", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T2.year", "=", "2004"], "query_toks_no_value": ["select", "t2", ".", "theme", ",", "t1", ".", "date", ",", "t1", ".", "attendance", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t2", ".", "year", "=", "value"], "question": "What is the theme, date, and attendance for the exhibition in year 2004?", "question_toks": ["What", "is", "the", "theme", ",", "date", ",", "and", "attendance", "for", "the", "exhibition", "in", "year", "2004", "?"], "guid": 7052}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | List the names of countries whose language is not \"German\".", "sql": "SELECT Name FROM country WHERE Languages != \"German\"", "example": {"db_id": "roller_coaster", "query": "SELECT Name FROM country WHERE Languages != \"German\"", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Languages", "!", "=", "``", "German", "''"], "query_toks_no_value": ["select", "name", "from", "country", "where", "languages", "!", "=", "value"], "question": "List the names of countries whose language is not \"German\".", "question_toks": ["List", "the", "names", "of", "countries", "whose", "language", "is", "not", "``", "German", "''", "."], "guid": 7053}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many reviews has Niloofar written in 2015", "sql": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id = t1.user_id WHERE t1.year = 2015 AND t2.name = \"Niloofar\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2015 AND t2.name  =  \"Niloofar\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.text", ")", "FROM", "USER", "AS", "t2", "JOIN", "review", "AS", "t1", "ON", "t2.user_id", "=", "t1.user_id", "WHERE", "t1.year", "=", "2015", "AND", "t2.name", "=", "``", "Niloofar", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "text", ")", "from", "user", "as", "t2", "join", "review", "as", "t1", "on", "t2", ".", "user_id", "=", "t1", ".", "user_id", "where", "t1", ".", "year", "=", "value", "and", "t2", ".", "name", "=", "value"], "question": "How many reviews has Niloofar written in 2015", "question_toks": ["How", "many", "reviews", "has", "Niloofar", "written", "in", "2015"], "guid": 7054}}
{"text": "shop: Shop_ID, Address, Num_of_staff, Score, Open_Year; member: Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address; happy_hour: HH_ID, Shop_ID, Month, Num_of_shaff_in_charge; happy_hour_member: HH_ID, Member_ID, Total_amount | Find the number of members living in each address.", "sql": "SELECT address, COUNT(*) FROM member GROUP BY address", "example": {"db_id": "coffee_shop", "query": "SELECT count(*) ,  address FROM member GROUP BY address", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "address", "FROM", "member", "GROUP", "BY", "address"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "address", "from", "member", "group", "by", "address"], "question": "Find the number of members living in each address.", "question_toks": ["Find", "the", "number", "of", "members", "living", "in", "each", "address", "."], "guid": 7055}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a good place on buchanan in san francisco for arabic food ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t2.street_name = \"buchanan\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good place on buchanan in san francisco for arabic food ?", "question_toks": ["give", "me", "a", "good", "place", "on", "buchanan", "in", "san", "francisco", "for", "arabic", "food", "?"], "guid": 7056}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a good french restaurant in the yosemite and mono lake area ?", "sql": "SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = \"yosemite and mono lake area\" AND t1.food_type = \"french\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good french restaurant in the yosemite and mono lake area ?", "question_toks": ["where", "is", "a", "good", "french", "restaurant", "in", "the", "yosemite", "and", "mono", "lake", "area", "?"], "guid": 7057}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | How many artists do we have?", "sql": "SELECT COUNT(*) FROM artist", "example": {"db_id": "theme_gallery", "query": "SELECT count(*) FROM artist", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "artist"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "artist"], "question": "How many artists do we have?", "question_toks": ["How", "many", "artists", "do", "we", "have", "?"], "guid": 7058}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Return the date of birth for all the guests with gender code \"Male\".", "sql": "SELECT date_of_birth FROM Guests WHERE gender_code = \"Male\"", "example": {"db_id": "apartment_rentals", "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\"", "query_toks": ["SELECT", "date_of_birth", "FROM", "Guests", "WHERE", "gender_code", "=", "``", "Male", "''"], "query_toks_no_value": ["select", "date_of_birth", "from", "guests", "where", "gender_code", "=", "value"], "question": "Return the date of birth for all the guests with gender code \"Male\".", "question_toks": ["Return", "the", "date", "of", "birth", "for", "all", "the", "guests", "with", "gender", "code", "``", "Male", "''", "."], "guid": 7059}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a good arabic restaurant in mountain view ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good arabic restaurant in mountain view ?", "question_toks": ["give", "me", "a", "good", "arabic", "restaurant", "in", "mountain", "view", "?"], "guid": 7060}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the details of the three most expensive hotels?", "sql": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3", "example": {"db_id": "cre_Theme_park", "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3", "query_toks": ["SELECT", "other_hotel_details", "FROM", "HOTELS", "ORDER", "BY", "price_range", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "other_hotel_details", "from", "hotels", "order", "by", "price_range", "desc", "limit", "value"], "question": "What are the details of the three most expensive hotels?", "question_toks": ["What", "are", "the", "details", "of", "the", "three", "most", "expensive", "hotels", "?"], "guid": 7061}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | List all the reviews by Michelle for Italian restaurant", "sql": "SELECT t4.text FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id JOIN review AS t4 ON t4.business_id = t1.business_id JOIN USER AS t5 ON t5.user_id = t4.user_id WHERE t2.category_name = \"Italian\" AND t3.category_name = \"restaurant\" AND t5.name = \"Michelle\";", "example": {"db_id": "yelp", "query": "SELECT t4.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN review AS t4 ON t4.business_id  =  t1.business_id JOIN USER AS t5 ON t5.user_id  =  t4.user_id WHERE t2.category_name  =  \"Italian\" AND t3.category_name  =  \"category_category_name1\" AND t5.name  =  \"Michelle\";", "query_toks": ["SELECT", "t4.text", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "review", "AS", "t4", "ON", "t4.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t5", "ON", "t5.user_id", "=", "t4.user_id", "WHERE", "t2.category_name", "=", "``", "Italian", "''", "AND", "t3.category_name", "=", "``", "category_category_name1", "''", "AND", "t5.name", "=", "``", "Michelle", "''", ";"], "query_toks_no_value": ["select", "t4", ".", "text", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "review", "as", "t4", "on", "t4", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t5", "on", "t5", ".", "user_id", "=", "t4", ".", "user_id", "where", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "category_name", "=", "value", "and", "t5", ".", "name", "=", "value"], "question": "List all the reviews by Michelle for Italian restaurant", "question_toks": ["List", "all", "the", "reviews", "by", "Michelle", "for", "Italian", "restaurant"], "guid": 7062}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find the total checkins in \" Brighton Heights \" neighbourhood", "sql": "SELECT SUM ( t3.count ) FROM checkin AS t3 JOIN business AS t1 ON t3.business_id = t1.business_id JOIN neighbourhood AS t2 ON t2.business_id = t1.business_id WHERE t2.neighbourhood_name = \"Brighton Heights\";", "example": {"db_id": "yelp", "query": "SELECT SUM ( t3.count ) FROM checkin AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t2.neighbourhood_name  =  \"Brighton Heights\";", "query_toks": ["SELECT", "SUM", "(", "t3.count", ")", "FROM", "checkin", "AS", "t3", "JOIN", "business", "AS", "t1", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "neighbourhood", "AS", "t2", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t2.neighbourhood_name", "=", "``", "Brighton", "Heights", "''", ";"], "query_toks_no_value": ["select", "sum", "(", "t3", ".", "count", ")", "from", "checkin", "as", "t3", "join", "business", "as", "t1", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "neighbourhood", "as", "t2", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t2", ".", "neighbourhood_name", "=", "value"], "question": "Find the total checkins in \" Brighton Heights \" neighbourhood", "question_toks": ["Find", "the", "total", "checkins", "in", "``", "Brighton", "Heights", "``", "neighbourhood"], "guid": 7063}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | list all the reviews by Niloofar", "sql": "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id = t1.user_id WHERE t2.name = \"Niloofar\";", "example": {"db_id": "yelp", "query": "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";", "query_toks": ["SELECT", "t1.text", "FROM", "USER", "AS", "t2", "JOIN", "review", "AS", "t1", "ON", "t2.user_id", "=", "t1.user_id", "WHERE", "t2.name", "=", "``", "Niloofar", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "text", "from", "user", "as", "t2", "join", "review", "as", "t1", "on", "t2", ".", "user_id", "=", "t1", ".", "user_id", "where", "t2", ".", "name", "=", "value"], "question": "list all the reviews by Niloofar", "question_toks": ["list", "all", "the", "reviews", "by", "Niloofar"], "guid": 7064}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | List the names and decor of rooms that have a king bed. Sort the list by their price.", "sql": "SELECT roomName, decor FROM Rooms WHERE bedType = \"King\" ORDER BY basePrice", "example": {"db_id": "inn_1", "query": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;", "query_toks": ["SELECT", "roomName", ",", "decor", "FROM", "Rooms", "WHERE", "bedtype", "=", "'King", "'", "ORDER", "BY", "basePrice", ";"], "query_toks_no_value": ["select", "roomname", ",", "decor", "from", "rooms", "where", "bedtype", "=", "value", "order", "by", "baseprice"], "question": "List the names and decor of rooms that have a king bed. Sort the list by their price.", "question_toks": ["List", "the", "names", "and", "decor", "of", "rooms", "that", "have", "a", "king", "bed", ".", "Sort", "the", "list", "by", "their", "price", "."], "guid": 7065}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Count the number of tourists who did not visit any place.", "sql": "SELECT COUNT(*) FROM Visitors WHERE Tourist_ID NOT IN (SELECT Tourist_ID FROM Visits)", "example": {"db_id": "cre_Theme_park", "query": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Visitors", "WHERE", "Tourist_ID", "NOT", "IN", "(", "SELECT", "Tourist_ID", "FROM", "Visits", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "visitors", "where", "tourist_id", "not", "in", "(", "select", "tourist_id", "from", "visits", ")"], "question": "Count the number of tourists who did not visit any place.", "question_toks": ["Count", "the", "number", "of", "tourists", "who", "did", "not", "visit", "any", "place", "."], "guid": 7066}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What are all distinct country for artists?", "sql": "SELECT DISTINCT country FROM artist", "example": {"db_id": "theme_gallery", "query": "SELECT DISTINCT country FROM artist", "query_toks": ["SELECT", "DISTINCT", "country", "FROM", "artist"], "query_toks_no_value": ["select", "distinct", "country", "from", "artist"], "question": "What are all distinct country for artists?", "question_toks": ["What", "are", "all", "distinct", "country", "for", "artists", "?"], "guid": 7067}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show the average price range of hotels that have 5 star ratings and allow pets.", "sql": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code = \"5\" AND pets_allowed_yn = 1", "example": {"db_id": "cre_Theme_park", "query": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1", "query_toks": ["SELECT", "avg", "(", "price_range", ")", "FROM", "HOTELS", "WHERE", "star_rating_code", "=", "``", "5", "''", "AND", "pets_allowed_yn", "=", "1"], "query_toks_no_value": ["select", "avg", "(", "price_range", ")", "from", "hotels", "where", "star_rating_code", "=", "value", "and", "pets_allowed_yn", "=", "value"], "question": "Show the average price range of hotels that have 5 star ratings and allow pets.", "question_toks": ["Show", "the", "average", "price", "range", "of", "hotels", "that", "have", "5", "star", "ratings", "and", "allow", "pets", "."], "guid": 7068}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | List the name of rooms with king or queen bed.", "sql": "SELECT roomName FROM Rooms WHERE bedType = \"King\" OR bedType = \"Queen\";", "example": {"db_id": "inn_1", "query": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "WHERE", "bedType", "=", "``", "King", "''", "OR", "bedType", "=", "``", "Queen", "''", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "bedtype", "=", "value", "or", "bedtype", "=", "value"], "question": "List the name of rooms with king or queen bed.", "question_toks": ["List", "the", "name", "of", "rooms", "with", "king", "or", "queen", "bed", "."], "guid": 7069}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | List all the neighbourhoods with Italian restaurant rated less than 2.5 in Madison", "sql": "SELECT t1.neighbourhood_name FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id = t2.business_id JOIN category AS t3 ON t3.business_id = t2.business_id JOIN category AS t4 ON t4.business_id = t2.business_id WHERE t2.city = \"Madison\" AND t2.rating < 2.5 AND t3.category_name = \"Italian\" AND t4.category_name = \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t2.rating  <  2.5 AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.neighbourhood_name", "FROM", "category", "AS", "t3", "JOIN", "business", "AS", "t2", "ON", "t3.business_id", "=", "t2.business_id", "JOIN", "category", "AS", "t4", "ON", "t4.business_id", "=", "t2.business_id", "JOIN", "neighbourhood", "AS", "t1", "ON", "t1.business_id", "=", "t2.business_id", "WHERE", "t2.city", "=", "``", "Madison", "''", "AND", "t2.rating", "<", "2.5", "AND", "t3.category_name", "=", "``", "Italian", "''", "AND", "t4.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "neighbourhood_name", "from", "category", "as", "t3", "join", "business", "as", "t2", "on", "t3", ".", "business_id", "=", "t2", ".", "business_id", "join", "category", "as", "t4", "on", "t4", ".", "business_id", "=", "t2", ".", "business_id", "join", "neighbourhood", "as", "t1", "on", "t1", ".", "business_id", "=", "t2", ".", "business_id", "where", "t2", ".", "city", "=", "value", "and", "t2", ".", "rating", "<", "value", "and", "t3", ".", "category_name", "=", "value", "and", "t4", ".", "category_name", "=", "value"], "question": "List all the neighbourhoods with Italian restaurant rated less than 2.5 in Madison", "question_toks": ["List", "all", "the", "neighbourhoods", "with", "Italian", "restaurant", "rated", "less", "than", "2.5", "in", "Madison"], "guid": 7070}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can we find some restaurants on bethel island rd in bethel island ?", "sql": "SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"bethel island\" AND t2.street_name = \"bethel island rd\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "bethel", "island", "''", "AND", "t2.street_name", "=", "``", "bethel", "island", "rd", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value"], "question": "where can we find some restaurants on bethel island rd in bethel island ?", "question_toks": ["where", "can", "we", "find", "some", "restaurants", "on", "bethel", "island", "rd", "in", "bethel", "island", "?"], "guid": 7071}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | What is the best place in san francisco for french food ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t1.food_type = \"french\" AND t1.rating = (SELECT MAX(t1.rating) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t1.food_type = \"french\");", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "What is the best place in san francisco for french food ?", "question_toks": ["What", "is", "the", "best", "place", "in", "san", "francisco", "for", "french", "food", "?"], "guid": 7072}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | How many artists are above age 46 and joined after 1990?", "sql": "SELECT count(*) FROM artist WHERE age > 46 AND year_join > 1990", "example": {"db_id": "theme_gallery", "query": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "artist", "WHERE", "age", ">", "46", "AND", "year_join", ">", "1990"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "artist", "where", "age", ">", "value", "and", "year_join", ">", "value"], "question": "How many artists are above age 46 and joined after 1990?", "question_toks": ["How", "many", "artists", "are", "above", "age", "46", "and", "joined", "after", "1990", "?"], "guid": 7073}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Show names for artists without any exhibition.", "sql": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)", "example": {"db_id": "theme_gallery", "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)", "query_toks": ["SELECT", "name", "FROM", "artist", "WHERE", "artist_id", "NOT", "IN", "(", "SELECT", "artist_id", "FROM", "exhibition", ")"], "query_toks_no_value": ["select", "name", "from", "artist", "where", "artist_id", "not", "in", "(", "select", "artist_id", "from", "exhibition", ")"], "question": "Show names for artists without any exhibition.", "question_toks": ["Show", "names", "for", "artists", "without", "any", "exhibition", "."], "guid": 7074}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Return the name of the artist who has the latest join year.", "sql": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1", "example": {"db_id": "theme_gallery", "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1", "query_toks": ["SELECT", "name", "FROM", "artist", "ORDER", "BY", "year_join", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "artist", "order", "by", "year_join", "desc", "limit", "value"], "question": "Return the name of the artist who has the latest join year.", "question_toks": ["Return", "the", "name", "of", "the", "artist", "who", "has", "the", "latest", "join", "year", "."], "guid": 7075}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the apartment numbers of apartments with bookings that have status code both \"Provisional\" and \"Confirmed\"", "sql": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = \"Confirmed\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = \"Provisional\"", "example": {"db_id": "apartment_rentals", "query": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"", "query_toks": ["SELECT", "T2.apt_number", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T1.booking_status_code", "=", "``", "Confirmed", "''", "INTERSECT", "SELECT", "T2.apt_number", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T1.booking_status_code", "=", "``", "Provisional", "''"], "query_toks_no_value": ["select", "t2", ".", "apt_number", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t1", ".", "booking_status_code", "=", "value", "intersect", "select", "t2", ".", "apt_number", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t1", ".", "booking_status_code", "=", "value"], "question": "Show the apartment numbers of apartments with bookings that have status code both \"Provisional\" and \"Confirmed\"", "question_toks": ["Show", "the", "apartment", "numbers", "of", "apartments", "with", "bookings", "that", "have", "status", "code", "both", "``", "Provisional", "''", "and", "``", "Confirmed", "''"], "guid": 7076}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Find the average number of bedrooms of all the apartments.", "sql": "SELECT AVG(bedroom_count) FROM apartments", "example": {"db_id": "apartment_rentals", "query": "SELECT avg(bedroom_count) FROM Apartments", "query_toks": ["SELECT", "avg", "(", "bedroom_count", ")", "FROM", "Apartments"], "query_toks_no_value": ["select", "avg", "(", "bedroom_count", ")", "from", "apartments"], "question": "Find the average number of bedrooms of all the apartments.", "question_toks": ["Find", "the", "average", "number", "of", "bedrooms", "of", "all", "the", "apartments", "."], "guid": 7077}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Sort the apartment numbers in ascending order of room count.", "sql": "SELECT apt_number FROM Apartments ORDER BY room_count ASC", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC", "query_toks": ["SELECT", "apt_number", "FROM", "Apartments", "ORDER", "BY", "room_count", "ASC"], "query_toks_no_value": ["select", "apt_number", "from", "apartments", "order", "by", "room_count", "asc"], "question": "Sort the apartment numbers in ascending order of room count.", "question_toks": ["Sort", "the", "apartment", "numbers", "in", "ascending", "order", "of", "room", "count", "."], "guid": 7078}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Which tourist attractions does the visitor with detail 'Vincent' visit?", "sql": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID = T3.Tourist_ID WHERE T3.Tourist_Details = \"Vincent\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\"", "query_toks": ["SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "JOIN", "VISITORS", "AS", "T3", "ON", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T3.Tourist_Details", "=", "``", "Vincent", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "join", "visitors", "as", "t3", "on", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t3", ".", "tourist_details", "=", "value"], "question": "Which tourist attractions does the visitor with detail 'Vincent' visit?", "question_toks": ["Which", "tourist", "attractions", "does", "the", "visitor", "with", "detail", "'Vincent", "'", "visit", "?"], "guid": 7079}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can i eat arabic food on buchanan in san francisco ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t2.street_name = \"buchanan\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where can i eat arabic food on buchanan in san francisco ?", "question_toks": ["where", "can", "i", "eat", "arabic", "food", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 7080}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | List all restaurant types.", "sql": "SELECT restypename FROM restaurant_type", "example": {"db_id": "restaurant_1", "query": "SELECT ResTypeName FROM Restaurant_Type;", "query_toks": ["SELECT", "ResTypeName", "FROM", "Restaurant_Type", ";"], "query_toks_no_value": ["select", "restypename", "from", "restaurant_type"], "question": "List all restaurant types.", "question_toks": ["List", "all", "restaurant", "types", "."], "guid": 7081}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What are the apartment number, start date, and end date of each apartment booking?", "sql": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id", "example": {"db_id": "apartment_rentals", "query": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id", "query_toks": ["SELECT", "T2.apt_number", ",", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id"], "query_toks_no_value": ["select", "t2", ".", "apt_number", ",", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id"], "question": "What are the apartment number, start date, and end date of each apartment booking?", "question_toks": ["What", "are", "the", "apartment", "number", ",", "start", "date", ",", "and", "end", "date", "of", "each", "apartment", "booking", "?"], "guid": 7082}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Return the apartment number and the number of rooms for each apartment.", "sql": "SELECT apt_number, room_count FROM Apartments", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_number ,  room_count FROM Apartments", "query_toks": ["SELECT", "apt_number", ",", "room_count", "FROM", "Apartments"], "query_toks_no_value": ["select", "apt_number", ",", "room_count", "from", "apartments"], "question": "Return the apartment number and the number of rooms for each apartment.", "question_toks": ["Return", "the", "apartment", "number", "and", "the", "number", "of", "rooms", "for", "each", "apartment", "."], "guid": 7083}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a good arabic restaurant on buchanan in san francisco ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t2.street_name = \"buchanan\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good arabic restaurant on buchanan in san francisco ?", "question_toks": ["give", "me", "a", "good", "arabic", "restaurant", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 7084}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What are the names, ages, and countries of artists, sorted by the year they joined?", "sql": "SELECT name, age, country FROM artist ORDER BY year_join", "example": {"db_id": "theme_gallery", "query": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join", "query_toks": ["SELECT", "name", ",", "age", ",", "country", "FROM", "artist", "ORDER", "BY", "Year_Join"], "query_toks_no_value": ["select", "name", ",", "age", ",", "country", "from", "artist", "order", "by", "year_join"], "question": "What are the names, ages, and countries of artists, sorted by the year they joined?", "question_toks": ["What", "are", "the", "names", ",", "ages", ",", "and", "countries", "of", "artists", ",", "sorted", "by", "the", "year", "they", "joined", "?"], "guid": 7085}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What are the names of artist whose exhibitions draw over 200 attendees on average?", "sql": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id JOIN artist AS T3 ON T3.artist_id = T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance) > 200", "example": {"db_id": "theme_gallery", "query": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200", "query_toks": ["SELECT", "T3.name", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "JOIN", "artist", "AS", "T3", "ON", "T3.artist_id", "=", "T2.artist_id", "GROUP", "BY", "T3.artist_id", "HAVING", "avg", "(", "T1.attendance", ")", ">", "200"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "join", "artist", "as", "t3", "on", "t3", ".", "artist_id", "=", "t2", ".", "artist_id", "group", "by", "t3", ".", "artist_id", "having", "avg", "(", "t1", ".", "attendance", ")", ">", "value"], "question": "What are the names of artist whose exhibitions draw over 200 attendees on average?", "question_toks": ["What", "are", "the", "names", "of", "artist", "whose", "exhibitions", "draw", "over", "200", "attendees", "on", "average", "?"], "guid": 7086}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | List all the businesses with more than 4.5 stars", "sql": "SELECT name FROM business WHERE rating > 4.5", "example": {"db_id": "yelp", "query": "SELECT name FROM business WHERE rating  >  4.5;", "query_toks": ["SELECT", "name", "FROM", "business", "WHERE", "rating", ">", "4.5", ";"], "query_toks_no_value": ["select", "name", "from", "business", "where", "rating", ">", "value"], "question": "List all the businesses with more than 4.5 stars", "question_toks": ["List", "all", "the", "businesses", "with", "more", "than", "4.5", "stars"], "guid": 7087}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | List all businesses with rating 3.5", "sql": "SELECT name FROM business WHERE rating = 3.5", "example": {"db_id": "yelp", "query": "SELECT name FROM business WHERE rating  =  3.5;", "query_toks": ["SELECT", "name", "FROM", "business", "WHERE", "rating", "=", "3.5", ";"], "query_toks_no_value": ["select", "name", "from", "business", "where", "rating", "=", "value"], "question": "List all businesses with rating 3.5", "question_toks": ["List", "all", "businesses", "with", "rating", "3.5"], "guid": 7088}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | how many chinese places are there in the bay area ?", "sql": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = \"bay area\" AND t1.food_type = \"chinese\";", "example": {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "chinese", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "how many chinese places are there in the bay area ?", "question_toks": ["how", "many", "chinese", "places", "are", "there", "in", "the", "bay", "area", "?"], "guid": 7089}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Which apartment type code appears the most often?", "sql": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "apt_type_code", "FROM", "Apartments", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "apt_type_code", "from", "apartments", "group", "by", "apt_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which apartment type code appears the most often?", "question_toks": ["Which", "apartment", "type", "code", "appears", "the", "most", "often", "?"], "guid": 7090}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Tell me the booking status code for the apartment with number \"Suite 634\".", "sql": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = \"Suite 634\"", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\"", "query_toks": ["SELECT", "T1.booking_status_code", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.apt_number", "=", "``", "Suite", "634", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_status_code", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "apt_number", "=", "value"], "question": "Tell me the booking status code for the apartment with number \"Suite 634\".", "question_toks": ["Tell", "me", "the", "booking", "status", "code", "for", "the", "apartment", "with", "number", "``", "Suite", "634", "''", "."], "guid": 7091}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Return the name and country corresponding to the artist who has had the most exhibitions.", "sql": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "theme_gallery", "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.country", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "GROUP", "BY", "T1.artist_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "country", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "group", "by", "t1", ".", "artist_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the name and country corresponding to the artist who has had the most exhibitions.", "question_toks": ["Return", "the", "name", "and", "country", "corresponding", "to", "the", "artist", "who", "has", "had", "the", "most", "exhibitions", "."], "guid": 7092}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find the average number of checkins in restaurant \" Barrio Cafe \" per day", "sql": "SELECT AVG(t3.count), t3.day FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN checkin AS t3 ON t3.business_id = t1.business_id WHERE t1.name = \"Barrio Cafe\" AND t2.category_name = \"restaurant\" GROUP BY t3.day", "example": {"db_id": "yelp", "query": "SELECT AVG ( t3.count )  ,  t3.day FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN checkin AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"Barrio Cafe\" AND t2.category_name  =  \"restaurant\" GROUP BY t3.day;", "query_toks": ["SELECT", "AVG", "(", "t3.count", ")", ",", "t3.day", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "checkin", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "WHERE", "t1.name", "=", "``", "Barrio", "Cafe", "''", "AND", "t2.category_name", "=", "``", "restaurant", "''", "GROUP", "BY", "t3.day", ";"], "query_toks_no_value": ["select", "avg", "(", "t3", ".", "count", ")", ",", "t3", ".", "day", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "checkin", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "name", "=", "value", "and", "t2", ".", "category_name", "=", "value", "group", "by", "t3", ".", "day"], "question": "Find the average number of checkins in restaurant \" Barrio Cafe \" per day", "question_toks": ["Find", "the", "average", "number", "of", "checkins", "in", "restaurant", "``", "Barrio", "Cafe", "``", "per", "day"], "guid": 7093}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what is a good restaurant on bethel island rd in bethel island ?", "sql": "SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"bethel island\" AND t2.street_name = \"bethel island rd\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "bethel", "island", "''", "AND", "t2.street_name", "=", "``", "bethel", "island", "rd", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what is a good restaurant on bethel island rd in bethel island ?", "question_toks": ["what", "is", "a", "good", "restaurant", "on", "bethel", "island", "rd", "in", "bethel", "island", "?"], "guid": 7094}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Return the name and number of reservations made for each of the rooms.", "sql": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room", "example": {"db_id": "inn_1", "query": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room", "query_toks": ["SELECT", "T2.roomName", ",", "count", "(", "*", ")", ",", "T1.Room", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "GROUP", "BY", "T1.Room"], "query_toks_no_value": ["select", "t2", ".", "roomname", ",", "count", "(", "*", ")", ",", "t1", ".", "room", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "group", "by", "t1", ".", "room"], "question": "Return the name and number of reservations made for each of the rooms.", "question_toks": ["Return", "the", "name", "and", "number", "of", "reservations", "made", "for", "each", "of", "the", "rooms", "."], "guid": 7095}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some restaurants in the bay area ?", "sql": "SELECT t2.house_number, t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN (SELECT city_name FROM geographic WHERE region = \"bay area\");", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "LOCATION", "AS", "t2", "JOIN", "restaurant", "AS", "t1", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.city_name", "IN", "(", "SELECT", "city_name", "FROM", "geographic", "WHERE", "region", "=", "``", "bay", "area", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "location", "as", "t2", "join", "restaurant", "as", "t1", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "city_name", "in", "(", "select", "city_name", "from", "geographic", "where", "region", "=", "value", ")"], "question": "give me some restaurants in the bay area ?", "question_toks": ["give", "me", "some", "restaurants", "in", "the", "bay", "area", "?"], "guid": 7096}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | What is the average rating of reviews written in year 2014 ?", "sql": "SELECT AVG ( rating ) FROM review WHERE YEAR = 2014", "example": {"db_id": "yelp", "query": "SELECT AVG ( rating ) FROM review WHERE YEAR  =  2014;", "query_toks": ["SELECT", "AVG", "(", "rating", ")", "FROM", "review", "WHERE", "YEAR", "=", "2014", ";"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", "from", "review", "where", "year", "=", "value"], "question": "What is the average rating of reviews written in year 2014 ?", "question_toks": ["What", "is", "the", "average", "rating", "of", "reviews", "written", "in", "year", "2014", "?"], "guid": 7097}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a arabic restaurant on buchanan in san francisco ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t2.street_name = \"buchanan\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a arabic restaurant on buchanan in san francisco ?", "question_toks": ["where", "is", "a", "arabic", "restaurant", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 7098}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Which location names contain the word \"film\"?", "sql": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"", "query_toks": ["SELECT", "Location_Name", "FROM", "LOCATIONS", "WHERE", "Location_Name", "LIKE", "``", "%", "film", "%", "''"], "query_toks_no_value": ["select", "location_name", "from", "locations", "where", "location_name", "like", "value"], "question": "Which location names contain the word \"film\"?", "question_toks": ["Which", "location", "names", "contain", "the", "word", "``", "film", "''", "?"], "guid": 7099}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all the reviews for all Pet Groomers with more than 100 reviews", "sql": "SELECT t3.text FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id WHERE t1.review_count > 100 AND t2.category_name = \"Pet Groomers\";", "example": {"db_id": "yelp", "query": "SELECT t3.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.review_count  >  100 AND t2.category_name  =  \"Pet Groomers\";", "query_toks": ["SELECT", "t3.text", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "review", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "WHERE", "t1.review_count", ">", "100", "AND", "t2.category_name", "=", "``", "Pet", "Groomers", "''", ";"], "query_toks_no_value": ["select", "t3", ".", "text", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "review", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "review_count", ">", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "Find all the reviews for all Pet Groomers with more than 100 reviews", "question_toks": ["Find", "all", "the", "reviews", "for", "all", "Pet", "Groomers", "with", "more", "than", "100", "reviews"], "guid": 7100}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all Mexican restaurant in Dallas with at least 3.5 stars", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.city = \"Dallas\" AND t1.rating > 3.5 AND t2.category_name = \"Mexican\" AND t3.category_name = \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Mexican\" AND t3.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Dallas", "''", "AND", "t1.rating", ">", "3.5", "AND", "t2.category_name", "=", "``", "Mexican", "''", "AND", "t3.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t1", ".", "rating", ">", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "category_name", "=", "value"], "question": "Find all Mexican restaurant in Dallas with at least 3.5 stars", "question_toks": ["Find", "all", "Mexican", "restaurant", "in", "Dallas", "with", "at", "least", "3.5", "stars"], "guid": 7101}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Show the average, minimum, and maximum ticket prices for exhibitions for all years before 2009.", "sql": "SELECT avg(ticket_price) , min(ticket_price) , max(ticket_price) FROM exhibition WHERE YEAR < 2009", "example": {"db_id": "theme_gallery", "query": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009", "query_toks": ["SELECT", "avg", "(", "ticket_price", ")", ",", "min", "(", "ticket_price", ")", ",", "max", "(", "ticket_price", ")", "FROM", "exhibition", "WHERE", "YEAR", "<", "2009"], "query_toks_no_value": ["select", "avg", "(", "ticket_price", ")", ",", "min", "(", "ticket_price", ")", ",", "max", "(", "ticket_price", ")", "from", "exhibition", "where", "year", "<", "value"], "question": "Show the average, minimum, and maximum ticket prices for exhibitions for all years before 2009.", "question_toks": ["Show", "the", "average", ",", "minimum", ",", "and", "maximum", "ticket", "prices", "for", "exhibitions", "for", "all", "years", "before", "2009", "."], "guid": 7102}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what are some good places for arabic in mountain view ?", "sql": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good places for arabic in mountain view ?", "question_toks": ["what", "are", "some", "good", "places", "for", "arabic", "in", "mountain", "view", "?"], "guid": 7103}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Show all artist names with an average exhibition attendance over 200.", "sql": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id JOIN artist AS T3 ON T3.artist_id = T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance) > 200", "example": {"db_id": "theme_gallery", "query": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200", "query_toks": ["SELECT", "T3.name", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "JOIN", "artist", "AS", "T3", "ON", "T3.artist_id", "=", "T2.artist_id", "GROUP", "BY", "T3.artist_id", "HAVING", "avg", "(", "T1.attendance", ")", ">", "200"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "join", "artist", "as", "t3", "on", "t3", ".", "artist_id", "=", "t2", ".", "artist_id", "group", "by", "t3", ".", "artist_id", "having", "avg", "(", "t1", ".", "attendance", ")", ">", "value"], "question": "Show all artist names with an average exhibition attendance over 200.", "question_toks": ["Show", "all", "artist", "names", "with", "an", "average", "exhibition", "attendance", "over", "200", "."], "guid": 7104}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me a good place in mountain view for arabic food ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good place in mountain view for arabic food ?", "question_toks": ["give", "me", "a", "good", "place", "in", "mountain", "view", "for", "arabic", "food", "?"], "guid": 7105}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | What is the description of the restaurant type Sandwich?", "sql": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = 'Sandwich';", "example": {"db_id": "restaurant_1", "query": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = \"Sandwich\";", "query_toks": ["SELECT", "ResTypeDescription", "FROM", "Restaurant_Type", "WHERE", "ResTypeName", "=", "``", "Sandwich", "''", ";"], "query_toks_no_value": ["select", "restypedescription", "from", "restaurant_type", "where", "restypename", "=", "value"], "question": "What is the description of the restaurant type Sandwich?", "question_toks": ["What", "is", "the", "description", "of", "the", "restaurant", "type", "Sandwich", "?"], "guid": 7106}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all cities which has a \" Taj Mahal \" .", "sql": "SELECT city FROM business WHERE name = \"Taj Mahal\";", "example": {"db_id": "yelp", "query": "SELECT city FROM business WHERE name  =  \"Taj Mahal\";", "query_toks": ["SELECT", "city", "FROM", "business", "WHERE", "name", "=", "``", "Taj", "Mahal", "''", ";"], "query_toks_no_value": ["select", "city", "from", "business", "where", "name", "=", "value"], "question": "Find all cities which has a \" Taj Mahal \" .", "question_toks": ["Find", "all", "cities", "which", "has", "a", "``", "Taj", "Mahal", "``", "."], "guid": 7107}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | Show me all the restaurants.", "sql": "SELECT ResName FROM Restaurant", "example": {"db_id": "restaurant_1", "query": "SELECT ResName FROM Restaurant;", "query_toks": ["SELECT", "ResName", "FROM", "Restaurant", ";"], "query_toks_no_value": ["select", "resname", "from", "restaurant"], "question": "Show me all the restaurants.", "question_toks": ["Show", "me", "all", "the", "restaurants", "."], "guid": 7108}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Give me the star rating descriptions of the hotels that cost more than 10000.", "sql": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code = T2.star_rating_code WHERE T1.price_range > 10000", "example": {"db_id": "cre_Theme_park", "query": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000", "query_toks": ["SELECT", "T2.star_rating_description", "FROM", "HOTELS", "AS", "T1", "JOIN", "Ref_Hotel_Star_Ratings", "AS", "T2", "ON", "T1.star_rating_code", "=", "T2.star_rating_code", "WHERE", "T1.price_range", ">", "10000"], "query_toks_no_value": ["select", "t2", ".", "star_rating_description", "from", "hotels", "as", "t1", "join", "ref_hotel_star_ratings", "as", "t2", "on", "t1", ".", "star_rating_code", "=", "t2", ".", "star_rating_code", "where", "t1", ".", "price_range", ">", "value"], "question": "Give me the star rating descriptions of the hotels that cost more than 10000.", "question_toks": ["Give", "me", "the", "star", "rating", "descriptions", "of", "the", "hotels", "that", "cost", "more", "than", "10000", "."], "guid": 7109}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Return me the number of businesses that are restaurant .", "sql": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.category_name  =  \"restaurant\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.category_name  =  \"restaurant\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t2.category_name", "=", "``", "restaurant", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t2", ".", "category_name", "=", "value"], "question": "Return me the number of businesses that are restaurant .", "question_toks": ["Return", "me", "the", "number", "of", "businesses", "that", "are", "restaurant", "."], "guid": 7110}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | find the number of escape games in Madison", "sql": "SELECT COUNT(DISTINCT t1.name) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = \"Madison\" AND t2.category_name = \"escape games\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Madison", "''", "AND", "t2.category_name", "=", "``", "escape", "games", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "find the number of escape games in Madison", "question_toks": ["find", "the", "number", "of", "escape", "games", "in", "Madison"], "guid": 7111}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the short names of the buildings managed by \"Emma\".", "sql": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = \"Emma\"", "example": {"db_id": "apartment_rentals", "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\"", "query_toks": ["SELECT", "building_short_name", "FROM", "Apartment_Buildings", "WHERE", "building_manager", "=", "``", "Emma", "''"], "query_toks_no_value": ["select", "building_short_name", "from", "apartment_buildings", "where", "building_manager", "=", "value"], "question": "Show the short names of the buildings managed by \"Emma\".", "question_toks": ["Show", "the", "short", "names", "of", "the", "buildings", "managed", "by", "``", "Emma", "''", "."], "guid": 7112}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What are the first names and last names of all the guests?", "sql": "SELECT guest_first_name , guest_last_name FROM Guests", "example": {"db_id": "apartment_rentals", "query": "SELECT guest_first_name ,  guest_last_name FROM Guests", "query_toks": ["SELECT", "guest_first_name", ",", "guest_last_name", "FROM", "Guests"], "query_toks_no_value": ["select", "guest_first_name", ",", "guest_last_name", "from", "guests"], "question": "What are the first names and last names of all the guests?", "question_toks": ["What", "are", "the", "first", "names", "and", "last", "names", "of", "all", "the", "guests", "?"], "guid": 7113}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Find all the distinct visit dates.", "sql": "SELECT DISTINCT Visit_Date FROM VISITS", "example": {"db_id": "cre_Theme_park", "query": "SELECT DISTINCT Visit_Date FROM VISITS", "query_toks": ["SELECT", "DISTINCT", "Visit_Date", "FROM", "VISITS"], "query_toks_no_value": ["select", "distinct", "visit_date", "from", "visits"], "question": "Find all the distinct visit dates.", "question_toks": ["Find", "all", "the", "distinct", "visit", "dates", "."], "guid": 7114}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where can i eat french food in the bay area ?", "sql": "SELECT t3.house_number, t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = \"bay area\" AND t1.food_type = \"french\";", "example": {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"french\";", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "where can i eat french food in the bay area ?", "question_toks": ["where", "can", "i", "eat", "french", "food", "in", "the", "bay", "area", "?"], "guid": 7115}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | What are the apartment number and the room count of each apartment?", "sql": "SELECT apt_number ,  room_count FROM Apartments", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_number ,  room_count FROM Apartments", "query_toks": ["SELECT", "apt_number", ",", "room_count", "FROM", "Apartments"], "query_toks_no_value": ["select", "apt_number", ",", "room_count", "from", "apartments"], "question": "What are the apartment number and the room count of each apartment?", "question_toks": ["What", "are", "the", "apartment", "number", "and", "the", "room", "count", "of", "each", "apartment", "?"], "guid": 7116}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | Find the name and age of the visitor who bought the most tickets at once.", "sql": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "example": {"db_id": "museum_visit", "query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.age", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "ORDER", "BY", "t2.num_of_ticket", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "order", "by", "t2", ".", "num_of_ticket", "desc", "limit", "value"], "question": "Find the name and age of the visitor who bought the most tickets at once.", "question_toks": ["Find", "the", "name", "and", "age", "of", "the", "visitor", "who", "bought", "the", "most", "tickets", "at", "once", "."], "guid": 7117}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.", "sql": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Attraction_Type_Description", ",", "T2.Attraction_Type_Code", "FROM", "Ref_Attraction_Types", "AS", "T1", "JOIN", "Tourist_Attractions", "AS", "T2", "ON", "T1.Attraction_Type_Code", "=", "T2.Attraction_Type_Code", "GROUP", "BY", "T2.Attraction_Type_Code", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "attraction_type_description", ",", "t2", ".", "attraction_type_code", "from", "ref_attraction_types", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "attraction_type_code", "=", "t2", ".", "attraction_type_code", "group", "by", "t2", ".", "attraction_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.", "question_toks": ["Which", "attraction", "type", "does", "the", "most", "tourist", "attractions", "belong", "to", "?", "Tell", "me", "its", "attraction", "type", "description", "and", "code", "."], "guid": 7118}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all users who have written tips for \" Barrio Cafe \" in 2015", "sql": "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN USER AS t3 ON t3.user_id = t2.user_id WHERE t1.name = \"Barrio Cafe\" AND t2.year = 2015", "example": {"db_id": "yelp", "query": "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Barrio Cafe\" AND t2.year  =  2015;", "query_toks": ["SELECT", "t3.name", "FROM", "tip", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t3", "ON", "t3.user_id", "=", "t2.user_id", "WHERE", "t1.name", "=", "``", "Barrio", "Cafe", "''", "AND", "t2.year", "=", "2015", ";"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "tip", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t3", "on", "t3", ".", "user_id", "=", "t2", ".", "user_id", "where", "t1", ".", "name", "=", "value", "and", "t2", ".", "year", "=", "value"], "question": "Find all users who have written tips for \" Barrio Cafe \" in 2015", "question_toks": ["Find", "all", "users", "who", "have", "written", "tips", "for", "``", "Barrio", "Cafe", "``", "in", "2015"], "guid": 7119}}
{"text": "shop: Shop_ID, Address, Num_of_staff, Score, Open_Year; member: Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address; happy_hour: HH_ID, Shop_ID, Month, Num_of_shaff_in_charge; happy_hour_member: HH_ID, Member_ID, Total_amount | Which address has both members younger than 30 and members older than 40?", "sql": "SELECT address FROM member WHERE age < 30 INTERSECT SELECT address FROM member WHERE age > 40", "example": {"db_id": "coffee_shop", "query": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40", "query_toks": ["SELECT", "address", "FROM", "member", "WHERE", "age", "<", "30", "INTERSECT", "SELECT", "address", "FROM", "member", "WHERE", "age", ">", "40"], "query_toks_no_value": ["select", "address", "from", "member", "where", "age", "<", "value", "intersect", "select", "address", "from", "member", "where", "age", ">", "value"], "question": "Which address has both members younger than 30 and members older than 40?", "question_toks": ["Which", "address", "has", "both", "members", "younger", "than", "30", "and", "members", "older", "than", "40", "?"], "guid": 7120}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Find the names and descriptions of the photos taken at the tourist attraction called \"film festival\".", "sql": "SELECT T1.Name , T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = \"film festival\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\"", "query_toks": ["SELECT", "T1.Name", ",", "T1.Description", "FROM", "PHOTOS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.Name", "=", "``", "film", "festival", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "description", "from", "photos", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "name", "=", "value"], "question": "Find the names and descriptions of the photos taken at the tourist attraction called \"film festival\".", "question_toks": ["Find", "the", "names", "and", "descriptions", "of", "the", "photos", "taken", "at", "the", "tourist", "attraction", "called", "``", "film", "festival", "''", "."], "guid": 7121}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all reviews for businesses rated 2.5", "sql": "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.rating = 2.5", "example": {"db_id": "yelp", "query": "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  =  2.5;", "query_toks": ["SELECT", "t2.text", "FROM", "review", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.rating", "=", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "text", "from", "review", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "rating", "=", "value"], "question": "Find all reviews for businesses rated 2.5", "question_toks": ["Find", "all", "reviews", "for", "businesses", "rated", "2.5"], "guid": 7122}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some good places for arabic on buchanan in san francisco ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t2.street_name = \"buchanan\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good places for arabic on buchanan in san francisco ?", "question_toks": ["give", "me", "some", "good", "places", "for", "arabic", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 7123}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a good arabic restaurant in mountain view ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good arabic restaurant in mountain view ?", "question_toks": ["where", "is", "a", "good", "arabic", "restaurant", "in", "mountain", "view", "?"], "guid": 7124}}
{"text": "shop: Shop_ID, Address, Num_of_staff, Score, Open_Year; member: Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address; happy_hour: HH_ID, Shop_ID, Month, Num_of_shaff_in_charge; happy_hour_member: HH_ID, Member_ID, Total_amount | Give me the names of members whose address is in Harford or Waterbury.", "sql": "SELECT name FROM member WHERE address = 'Harford' OR address = 'Waterbury'", "example": {"db_id": "coffee_shop", "query": "SELECT name FROM member WHERE address  =  'Harford' OR address  =  'Waterbury'", "query_toks": ["SELECT", "name", "FROM", "member", "WHERE", "address", "=", "'Harford", "'", "OR", "address", "=", "'Waterbury", "'"], "query_toks_no_value": ["select", "name", "from", "member", "where", "address", "=", "value", "or", "address", "=", "value"], "question": "Give me the names of members whose address is in Harford or Waterbury.", "question_toks": ["Give", "me", "the", "names", "of", "members", "whose", "address", "is", "in", "Harford", "or", "Waterbury", "."], "guid": 7125}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a restaurant on buchanan in san francisco that serves good arabic food ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t2.street_name = \"buchanan\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a restaurant on buchanan in san francisco that serves good arabic food ?", "question_toks": ["where", "is", "a", "restaurant", "on", "buchanan", "in", "san", "francisco", "that", "serves", "good", "arabic", "food", "?"], "guid": 7126}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What are the themes and years for exhibitions, sorted by ticket price descending?", "sql": "SELECT theme , YEAR FROM exhibition ORDER BY ticket_price DESC", "example": {"db_id": "theme_gallery", "query": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC", "query_toks": ["SELECT", "theme", ",", "YEAR", "FROM", "exhibition", "ORDER", "BY", "ticket_price", "DESC"], "query_toks_no_value": ["select", "theme", ",", "year", "from", "exhibition", "order", "by", "ticket_price", "desc"], "question": "What are the themes and years for exhibitions, sorted by ticket price descending?", "question_toks": ["What", "are", "the", "themes", "and", "years", "for", "exhibitions", ",", "sorted", "by", "ticket", "price", "descending", "?"], "guid": 7127}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What is the address of the location \"UK Gallery\"?", "sql": "SELECT Address FROM LOCATIONS WHERE Location_Name = \"UK Gallery\"", "example": {"db_id": "cre_Theme_park", "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "query_toks": ["SELECT", "Address", "FROM", "LOCATIONS", "WHERE", "Location_Name", "=", "``", "UK", "Gallery", "''"], "query_toks_no_value": ["select", "address", "from", "locations", "where", "location_name", "=", "value"], "question": "What is the address of the location \"UK Gallery\"?", "question_toks": ["What", "is", "the", "address", "of", "the", "location", "``", "UK", "Gallery", "''", "?"], "guid": 7128}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a good restaurant in mountain view for arabic food ?", "sql": "SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"mountain view\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good restaurant in mountain view for arabic food ?", "question_toks": ["where", "is", "a", "good", "restaurant", "in", "mountain", "view", "for", "arabic", "food", "?"], "guid": 7129}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a restaurant in alameda ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"alameda\";", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value"], "question": "where is a restaurant in alameda ?", "question_toks": ["where", "is", "a", "restaurant", "in", "alameda", "?"], "guid": 7130}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What is the average price range of five star hotels that allow pets?", "sql": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code = \"5\" AND pets_allowed_yn = 1", "example": {"db_id": "cre_Theme_park", "query": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1", "query_toks": ["SELECT", "avg", "(", "price_range", ")", "FROM", "HOTELS", "WHERE", "star_rating_code", "=", "``", "5", "''", "AND", "pets_allowed_yn", "=", "1"], "query_toks_no_value": ["select", "avg", "(", "price_range", ")", "from", "hotels", "where", "star_rating_code", "=", "value", "and", "pets_allowed_yn", "=", "value"], "question": "What is the average price range of five star hotels that allow pets?", "question_toks": ["What", "is", "the", "average", "price", "range", "of", "five", "star", "hotels", "that", "allow", "pets", "?"], "guid": 7131}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | What is the average and minimum age of all artists from United States.", "sql": "SELECT avg(age) , min(age) FROM artist WHERE country = 'United States'", "example": {"db_id": "theme_gallery", "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "FROM", "artist", "WHERE", "country", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "from", "artist", "where", "country", "=", "value"], "question": "What is the average and minimum age of all artists from United States.", "question_toks": ["What", "is", "the", "average", "and", "minimum", "age", "of", "all", "artists", "from", "United", "States", "."], "guid": 7132}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all Italian restaurant in the Meadowood neighbourhood of Madison", "sql": "SELECT t1.name FROM category AS t3 JOIN business AS t1 ON t3.business_id = t1.business_id JOIN category AS t4 ON t4.business_id = t1.business_id JOIN neighbourhood AS t2 ON t2.business_id = t1.business_id WHERE t1.city = \"Madison\" AND t3.category_name = \"Italian\" AND t4.category_name = \"restaurant\" AND t2.neighbourhood_name = \"Meadowood\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN category AS t4 ON t4.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\" AND t2.neighbourhood_name  =  \"Meadowood\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t3", "JOIN", "business", "AS", "t1", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t4", "ON", "t4.business_id", "=", "t1.business_id", "JOIN", "neighbourhood", "AS", "t2", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Madison", "''", "AND", "t3.category_name", "=", "``", "Italian", "''", "AND", "t4.category_name", "=", "``", "restaurant", "''", "AND", "t2.neighbourhood_name", "=", "``", "Meadowood", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t3", "join", "business", "as", "t1", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t4", "on", "t4", ".", "business_id", "=", "t1", ".", "business_id", "join", "neighbourhood", "as", "t2", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t3", ".", "category_name", "=", "value", "and", "t4", ".", "category_name", "=", "value", "and", "t2", ".", "neighbourhood_name", "=", "value"], "question": "Find all Italian restaurant in the Meadowood neighbourhood of Madison", "question_toks": ["Find", "all", "Italian", "restaurant", "in", "the", "Meadowood", "neighbourhood", "of", "Madison"], "guid": 7133}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | Find the number of times ROY SWEAZY has reserved a room.", "sql": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName = \"SWEAZY\";", "example": {"db_id": "inn_1", "query": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Reservations", "WHERE", "FirstName", "=", "``", "ROY", "''", "AND", "LastName", "=", "``", "SWEAZY", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "reservations", "where", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "Find the number of times ROY SWEAZY has reserved a room.", "question_toks": ["Find", "the", "number", "of", "times", "ROY", "SWEAZY", "has", "reserved", "a", "room", "."], "guid": 7134}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a good place on buchanan in san francisco for arabic food ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t2.street_name = \"buchanan\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good place on buchanan in san francisco for arabic food ?", "question_toks": ["where", "is", "a", "good", "place", "on", "buchanan", "in", "san", "francisco", "for", "arabic", "food", "?"], "guid": 7135}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the most common apartment type code.", "sql": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "apt_type_code", "FROM", "Apartments", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "apt_type_code", "from", "apartments", "group", "by", "apt_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the most common apartment type code.", "question_toks": ["Show", "the", "most", "common", "apartment", "type", "code", "."], "guid": 7136}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find all Bars in \" Los Angeles \" with at least 30 reviews and average rating above 3 stars", "sql": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = \"Los Angeles\" AND t1.rating > 3 AND t1.review_count > 30 AND t2.category_name = \"Bars\";", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t1.rating  >  3 AND t1.review_count  >  30 AND t2.category_name  =  \"Bars\";", "query_toks": ["SELECT", "t1.name", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Los", "Angeles", "''", "AND", "t1.rating", ">", "3", "AND", "t1.review_count", ">", "30", "AND", "t2.category_name", "=", "``", "Bars", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t1", ".", "rating", ">", "value", "and", "t1", ".", "review_count", ">", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "Find all Bars in \" Los Angeles \" with at least 30 reviews and average rating above 3 stars", "question_toks": ["Find", "all", "Bars", "in", "``", "Los", "Angeles", "``", "with", "at", "least", "30", "reviews", "and", "average", "rating", "above", "3", "stars"], "guid": 7137}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Find the tourist attractions that have parking or shopping as their feature details. What are the names of the attractions?", "sql": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'shopping'", "example": {"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'", "query_toks": ["SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "Tourist_Attraction_Features", "AS", "T2", "ON", "T1.tourist_attraction_id", "=", "T2.tourist_attraction_id", "JOIN", "Features", "AS", "T3", "ON", "T2.Feature_ID", "=", "T3.Feature_ID", "WHERE", "T3.feature_Details", "=", "'park", "'", "UNION", "SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "Tourist_Attraction_Features", "AS", "T2", "ON", "T1.tourist_attraction_id", "=", "T2.tourist_attraction_id", "JOIN", "Features", "AS", "T3", "ON", "T2.Feature_ID", "=", "T3.Feature_ID", "WHERE", "T3.feature_Details", "=", "'shopping", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "tourist_attraction_features", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "join", "features", "as", "t3", "on", "t2", ".", "feature_id", "=", "t3", ".", "feature_id", "where", "t3", ".", "feature_details", "=", "value", "union", "select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "tourist_attraction_features", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "join", "features", "as", "t3", "on", "t2", ".", "feature_id", "=", "t3", ".", "feature_id", "where", "t3", ".", "feature_details", "=", "value"], "question": "Find the tourist attractions that have parking or shopping as their feature details. What are the names of the attractions?", "question_toks": ["Find", "the", "tourist", "attractions", "that", "have", "parking", "or", "shopping", "as", "their", "feature", "details", ".", "What", "are", "the", "names", "of", "the", "attractions", "?"], "guid": 7138}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | what are some good restaurants in the bay area ?", "sql": "SELECT t2.house_number , t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region = \"bay area\" ) AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "LOCATION", "AS", "t2", "JOIN", "restaurant", "AS", "t1", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.city_name", "IN", "(", "SELECT", "city_name", "FROM", "geographic", "WHERE", "region", "=", "``", "region0", "''", ")", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "location", "as", "t2", "join", "restaurant", "as", "t1", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "city_name", "in", "(", "select", "city_name", "from", "geographic", "where", "region", "=", "value", ")", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good restaurants in the bay area ?", "question_toks": ["what", "are", "some", "good", "restaurants", "in", "the", "bay", "area", "?"], "guid": 7139}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many users have reviewed Irish Pub in Dallas ?", "sql": "SELECT COUNT(DISTINCT t4.name) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t1.city = \"Dallas\" AND t2.category_name = \"Irish Pub\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"Irish Pub\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t4.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "review", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "JOIN", "USER", "AS", "t4", "ON", "t4.user_id", "=", "t3.user_id", "WHERE", "t1.city", "=", "``", "Dallas", "''", "AND", "t2.category_name", "=", "``", "Irish", "Pub", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t4", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "review", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "join", "user", "as", "t4", "on", "t4", ".", "user_id", "=", "t3", ".", "user_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value"], "question": "How many users have reviewed Irish Pub in Dallas ?", "question_toks": ["How", "many", "users", "have", "reviewed", "Irish", "Pub", "in", "Dallas", "?"], "guid": 7140}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Find the booking start date and end date for the apartments that have more than two bedrooms.", "sql": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2", "example": {"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.bedroom_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "bedroom_count", ">", "value"], "question": "Find the booking start date and end date for the apartments that have more than two bedrooms.", "question_toks": ["Find", "the", "booking", "start", "date", "and", "end", "date", "for", "the", "apartments", "that", "have", "more", "than", "two", "bedrooms", "."], "guid": 7141}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | give me some good restaurants in the bay area ?", "sql": "SELECT t2.house_number , t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region = \"bay area\" ) AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "LOCATION", "AS", "t2", "JOIN", "restaurant", "AS", "t1", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.city_name", "IN", "(", "SELECT", "city_name", "FROM", "geographic", "WHERE", "region", "=", "``", "region0", "''", ")", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "location", "as", "t2", "join", "restaurant", "as", "t1", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "city_name", "in", "(", "select", "city_name", "from", "geographic", "where", "region", "=", "value", ")", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good restaurants in the bay area ?", "question_toks": ["give", "me", "some", "good", "restaurants", "in", "the", "bay", "area", "?"], "guid": 7142}}
{"text": "Rooms: RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor; Reservations: Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids | What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people.", "sql": "SELECT roomName, RoomId FROM Rooms WHERE basePrice > 160 AND maxOccupancy > 2", "example": {"db_id": "inn_1", "query": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;", "query_toks": ["SELECT", "roomName", ",", "RoomId", "FROM", "Rooms", "WHERE", "basePrice", ">", "160", "AND", "maxOccupancy", ">", "2", ";"], "query_toks_no_value": ["select", "roomname", ",", "roomid", "from", "rooms", "where", "baseprice", ">", "value", "and", "maxoccupancy", ">", "value"], "question": "What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people.", "question_toks": ["What", "are", "the", "room", "names", "and", "ids", "of", "all", "the", "rooms", "that", "cost", "more", "than", "160", "and", "can", "accommodate", "more", "than", "two", "people", "."], "guid": 7143}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | What are the distinct visit dates?", "sql": "SELECT DISTINCT Visit_Date FROM VISITS", "example": {"db_id": "cre_Theme_park", "query": "SELECT DISTINCT Visit_Date FROM VISITS", "query_toks": ["SELECT", "DISTINCT", "Visit_Date", "FROM", "VISITS"], "query_toks_no_value": ["select", "distinct", "visit_date", "from", "visits"], "question": "What are the distinct visit dates?", "question_toks": ["What", "are", "the", "distinct", "visit", "dates", "?"], "guid": 7144}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | How many countries do not have an roller coaster longer than 3000?", "sql": "SELECT COUNT(*) FROM country WHERE country_id NOT IN (SELECT country_id FROM roller_coaster WHERE length > 3000)", "example": {"db_id": "roller_coaster", "query": "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "country", "WHERE", "country_id", "NOT", "IN", "(", "SELECT", "country_id", "FROM", "roller_coaster", "WHERE", "LENGTH", ">", "3000", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "where", "country_id", "not", "in", "(", "select", "country_id", "from", "roller_coaster", "where", "length", ">", "value", ")"], "question": "How many countries do not have an roller coaster longer than 3000?", "question_toks": ["How", "many", "countries", "do", "not", "have", "an", "roller", "coaster", "longer", "than", "3000", "?"], "guid": 7145}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Return me the number of tips that are written by Michelle in 2010 .", "sql": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id = t1.user_id WHERE t1.year = 2010 AND t2.name = \"Michelle\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"Michelle\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.text", ")", "FROM", "USER", "AS", "t2", "JOIN", "tip", "AS", "t1", "ON", "t2.user_id", "=", "t1.user_id", "WHERE", "t1.year", "=", "2010", "AND", "t2.name", "=", "``", "Michelle", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "text", ")", "from", "user", "as", "t2", "join", "tip", "as", "t1", "on", "t2", ".", "user_id", "=", "t1", ".", "user_id", "where", "t1", ".", "year", "=", "value", "and", "t2", ".", "name", "=", "value"], "question": "Return me the number of tips that are written by Michelle in 2010 .", "question_toks": ["Return", "me", "the", "number", "of", "tips", "that", "are", "written", "by", "Michelle", "in", "2010", "."], "guid": 7146}}
{"text": "shop: Shop_ID, Address, Num_of_staff, Score, Open_Year; member: Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address; happy_hour: HH_ID, Shop_ID, Month, Num_of_shaff_in_charge; happy_hour_member: HH_ID, Member_ID, Total_amount | Find the ids and names of members who are under age 30 or with black membership card.", "sql": "SELECT member_id, name FROM member WHERE age < 30 OR membership_card = 'Black'", "example": {"db_id": "coffee_shop", "query": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30", "query_toks": ["SELECT", "name", ",", "member_id", "FROM", "member", "WHERE", "Membership_card", "=", "'Black", "'", "OR", "age", "<", "30"], "query_toks_no_value": ["select", "name", ",", "member_id", "from", "member", "where", "membership_card", "=", "value", "or", "age", "<", "value"], "question": "Find the ids and names of members who are under age 30 or with black membership card.", "question_toks": ["Find", "the", "ids", "and", "names", "of", "members", "who", "are", "under", "age", "30", "or", "with", "black", "membership", "card", "."], "guid": 7147}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Return the first names and last names of all guests", "sql": "SELECT guest_first_name , guest_last_name FROM Guests", "example": {"db_id": "apartment_rentals", "query": "SELECT guest_first_name ,  guest_last_name FROM Guests", "query_toks": ["SELECT", "guest_first_name", ",", "guest_last_name", "FROM", "Guests"], "query_toks_no_value": ["select", "guest_first_name", ",", "guest_last_name", "from", "guests"], "question": "Return the first names and last names of all guests", "question_toks": ["Return", "the", "first", "names", "and", "last", "names", "of", "all", "guests"], "guid": 7148}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | Find the business with the most number of reviews in April", "sql": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t2.month = \"April\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.text ) DESC LIMIT 1", "example": {"db_id": "yelp", "query": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.month  =  \"April\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.text ) DESC LIMIT 1;", "query_toks": ["SELECT", "t1.name", "FROM", "review", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t2.month", "=", "``", "April", "''", "GROUP", "BY", "t1.name", "ORDER", "BY", "COUNT", "(", "DISTINCT", "t2.text", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "review", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t2", ".", "month", "=", "value", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "distinct", "t2", ".", "text", ")", "desc", "limit", "value"], "question": "Find the business with the most number of reviews in April", "question_toks": ["Find", "the", "business", "with", "the", "most", "number", "of", "reviews", "in", "April"], "guid": 7149}}
{"text": "museum: Museum_ID, Name, Num_of_Staff, Open_Year; visitor: ID, Name, Level_of_membership, Age; visit: Museum_ID, visitor_ID, Num_of_Ticket, Total_spent | find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "sql": "SELECT name FROM museum WHERE num_of_staff > (SELECT min(num_of_staff) FROM museum WHERE open_year > 2010);", "example": {"db_id": "museum_visit", "query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)", "query_toks": ["SELECT", "name", "FROM", "museum", "WHERE", "num_of_staff", ">", "(", "SELECT", "min", "(", "num_of_staff", ")", "FROM", "museum", "WHERE", "open_year", ">", "2010", ")"], "query_toks_no_value": ["select", "name", "from", "museum", "where", "num_of_staff", ">", "(", "select", "min", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", ">", "value", ")"], "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "question_toks": ["find", "the", "names", "of", "museums", "which", "have", "more", "staff", "than", "the", "minimum", "staff", "number", "of", "all", "museums", "opened", "after", "2010", "."], "guid": 7150}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Restaurant: ResID, ResName, Address, Rating; Type_Of_Restaurant: ResID, ResTypeID; Restaurant_Type: ResTypeID, ResTypeName, ResTypeDescription; Visits_Restaurant: StuID, ResID, Time, Spent | How long does student Linda Smith spend on the restaurant in total?", "sql": "SELECT SUM(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\";", "example": {"db_id": "restaurant_1", "query": "SELECT sum(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\";", "query_toks": ["SELECT", "sum", "(", "Spent", ")", "FROM", "Student", "JOIN", "Visits_Restaurant", "ON", "Student.StuID", "=", "Visits_Restaurant.StuID", "WHERE", "Student.Fname", "=", "``", "Linda", "''", "AND", "Student.Lname", "=", "``", "Smith", "''", ";"], "query_toks_no_value": ["select", "sum", "(", "spent", ")", "from", "student", "join", "visits_restaurant", "on", "student.stuid", "=", "visits_restaurant.stuid", "where", "student.fname", "=", "value", "and", "student.lname", "=", "value"], "question": "How long does student Linda Smith spend on the restaurant in total?", "question_toks": ["How", "long", "does", "student", "Linda", "Smith", "spend", "on", "the", "restaurant", "in", "total", "?"], "guid": 7151}}
{"text": "Ref_Hotel_Star_Ratings: star_rating_code, star_rating_description; Locations: Location_ID, Location_Name, Address, Other_Details; Ref_Attraction_Types: Attraction_Type_Code, Attraction_Type_Description; Visitors: Tourist_ID, Tourist_Details; Features: Feature_ID, Feature_Details; Hotels: hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details; Tourist_Attractions: Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description, Opening_Hours, Other_Details; Street_Markets: Market_ID, Market_Details; Shops: Shop_ID, Shop_Details; Museums: Museum_ID, Museum_Details | Show the average price of hotels for each star rating code.", "sql": "SELECT star_rating_code, AVG(price_range) FROM hotels GROUP BY star_rating_code", "example": {"db_id": "cre_Theme_park", "query": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code", "query_toks": ["SELECT", "star_rating_code", ",", "avg", "(", "price_range", ")", "FROM", "HOTELS", "GROUP", "BY", "star_rating_code"], "query_toks_no_value": ["select", "star_rating_code", ",", "avg", "(", "price_range", ")", "from", "hotels", "group", "by", "star_rating_code"], "question": "Show the average price of hotels for each star rating code.", "question_toks": ["Show", "the", "average", "price", "of", "hotels", "for", "each", "star", "rating", "code", "."], "guid": 7152}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many Egyptian restaurant are there in Edinburgh ?", "sql": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Edinburgh\" AND t2.category_name  =  \"restaurant\" AND t3.category_name  =  \"Egyptian\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Edinburgh\" AND t2.category_name  =  \"restaurant\" AND t3.category_name  =  \"Egyptian\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.name", ")", "FROM", "category", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "JOIN", "category", "AS", "t3", "ON", "t3.business_id", "=", "t1.business_id", "WHERE", "t1.city", "=", "``", "Edinburgh", "''", "AND", "t2.category_name", "=", "``", "restaurant", "''", "AND", "t3.category_name", "=", "``", "Egyptian", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", "from", "category", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "join", "category", "as", "t3", "on", "t3", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "city", "=", "value", "and", "t2", ".", "category_name", "=", "value", "and", "t3", ".", "category_name", "=", "value"], "question": "How many Egyptian restaurant are there in Edinburgh ?", "question_toks": ["How", "many", "Egyptian", "restaurant", "are", "there", "in", "Edinburgh", "?"], "guid": 7153}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | How many reviews has Adrienne written ?", "sql": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Adrienne\";", "example": {"db_id": "yelp", "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Adrienne\";", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.text", ")", "FROM", "USER", "AS", "t2", "JOIN", "review", "AS", "t1", "ON", "t2.user_id", "=", "t1.user_id", "WHERE", "t2.name", "=", "``", "Adrienne", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "text", ")", "from", "user", "as", "t2", "join", "review", "as", "t1", "on", "t2", ".", "user_id", "=", "t1", ".", "user_id", "where", "t2", ".", "name", "=", "value"], "question": "How many reviews has Adrienne written ?", "question_toks": ["How", "many", "reviews", "has", "Adrienne", "written", "?"], "guid": 7154}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Show theme and year for all exhibitions with ticket prices lower than 15.", "sql": "SELECT theme , YEAR FROM exhibition WHERE ticket_price < 15", "example": {"db_id": "theme_gallery", "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15", "query_toks": ["SELECT", "theme", ",", "YEAR", "FROM", "exhibition", "WHERE", "ticket_price", "<", "15"], "query_toks_no_value": ["select", "theme", ",", "year", "from", "exhibition", "where", "ticket_price", "<", "value"], "question": "Show theme and year for all exhibitions with ticket prices lower than 15.", "question_toks": ["Show", "theme", "and", "year", "for", "all", "exhibitions", "with", "ticket", "prices", "lower", "than", "15", "."], "guid": 7155}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Return the different countries for artists.", "sql": "SELECT DISTINCT country FROM artist", "example": {"db_id": "theme_gallery", "query": "SELECT DISTINCT country FROM artist", "query_toks": ["SELECT", "DISTINCT", "country", "FROM", "artist"], "query_toks_no_value": ["select", "distinct", "country", "from", "artist"], "question": "Return the different countries for artists.", "question_toks": ["Return", "the", "different", "countries", "for", "artists", "."], "guid": 7156}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | where is a good arabic restaurant on buchanan in san francisco ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t2.street_name = \"buchanan\" AND t1.food_type = \"arabic\" AND t1.rating > 2.5", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good arabic restaurant on buchanan in san francisco ?", "question_toks": ["where", "is", "a", "good", "arabic", "restaurant", "on", "buchanan", "in", "san", "francisco", "?"], "guid": 7157}}
{"text": "business: bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating; category: id, business_id, category_name; user: uid, user_id, name; checkin: cid, business_id, count, day; neighbourhood: id, business_id, neighbourhood_name; review: rid, business_id, user_id, rating, text, year, month; tip: tip_id, business_id, text, user_id, likes, year, month | List all tips for \" Cafe Zinho \" in Pennsylvania in 2010 .", "sql": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = \"Cafe Zinho\" AND t1.state = \"Pennsylvania\" AND t2.year = 2010", "example": {"db_id": "yelp", "query": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Pennsylvania\" AND t2.year  =  2010;", "query_toks": ["SELECT", "t2.text", "FROM", "tip", "AS", "t2", "JOIN", "business", "AS", "t1", "ON", "t2.business_id", "=", "t1.business_id", "WHERE", "t1.name", "=", "``", "Cafe", "Zinho", "''", "AND", "t1.state", "=", "``", "Pennsylvania", "''", "AND", "t2.year", "=", "2010", ";"], "query_toks_no_value": ["select", "t2", ".", "text", "from", "tip", "as", "t2", "join", "business", "as", "t1", "on", "t2", ".", "business_id", "=", "t1", ".", "business_id", "where", "t1", ".", "name", "=", "value", "and", "t1", ".", "state", "=", "value", "and", "t2", ".", "year", "=", "value"], "question": "List all tips for \" Cafe Zinho \" in Pennsylvania in 2010 .", "question_toks": ["List", "all", "tips", "for", "``", "Cafe", "Zinho", "``", "in", "Pennsylvania", "in", "2010", "."], "guid": 7158}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Show the addresses and phones of all the buildings managed by \"Brenden\".", "sql": "SELECT building_address, building_phone FROM Apartment_Buildings WHERE building_manager = \"Brenden\"", "example": {"db_id": "apartment_rentals", "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"", "query_toks": ["SELECT", "building_address", ",", "building_phone", "FROM", "Apartment_Buildings", "WHERE", "building_manager", "=", "``", "Brenden", "''"], "query_toks_no_value": ["select", "building_address", ",", "building_phone", "from", "apartment_buildings", "where", "building_manager", "=", "value"], "question": "Show the addresses and phones of all the buildings managed by \"Brenden\".", "question_toks": ["Show", "the", "addresses", "and", "phones", "of", "all", "the", "buildings", "managed", "by", "``", "Brenden", "''", "."], "guid": 7159}}
{"text": "Apartment_Buildings: building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone; Apartments: apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count; Apartment_Facilities: apt_id, facility_code; Guests: guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth; Apartment_Bookings: apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date; View_Unit_Status: apt_id, apt_booking_id, status_date, available_yn | Return each apartment type code with the number of apartments having that apartment type, in ascending order of the number of apartments.", "sql": "SELECT apt_type_code , COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC", "example": {"db_id": "apartment_rentals", "query": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC", "query_toks": ["SELECT", "apt_type_code", ",", "COUNT", "(", "*", ")", "FROM", "Apartments", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "COUNT", "(", "*", ")", "ASC"], "query_toks_no_value": ["select", "apt_type_code", ",", "count", "(", "*", ")", "from", "apartments", "group", "by", "apt_type_code", "order", "by", "count", "(", "*", ")", "asc"], "question": "Return each apartment type code with the number of apartments having that apartment type, in ascending order of the number of apartments.", "question_toks": ["Return", "each", "apartment", "type", "code", "with", "the", "number", "of", "apartments", "having", "that", "apartment", "type", ",", "in", "ascending", "order", "of", "the", "number", "of", "apartments", "."], "guid": 7160}}
{"text": "roller_coaster: Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status; country: Country_ID, Name, Population, Area, Languages | Show the statuses of roller coasters longer than 3300 or higher than 100.", "sql": "SELECT Status FROM roller_coaster WHERE LENGTH > 3300 OR Height > 100", "example": {"db_id": "roller_coaster", "query": "SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100", "query_toks": ["SELECT", "Status", "FROM", "roller_coaster", "WHERE", "LENGTH", ">", "3300", "OR", "Height", ">", "100"], "query_toks_no_value": ["select", "status", "from", "roller_coaster", "where", "length", ">", "value", "or", "height", ">", "value"], "question": "Show the statuses of roller coasters longer than 3300 or higher than 100.", "question_toks": ["Show", "the", "statuses", "of", "roller", "coasters", "longer", "than", "3300", "or", "higher", "than", "100", "."], "guid": 7161}}
{"text": "GEOGRAPHIC: CITY_NAME, COUNTY, REGION; RESTAURANT: ID, NAME, FOOD_TYPE, CITY_NAME, RATING; LOCATION: RESTAURANT_ID, HOUSE_NUMBER, STREET_NAME, CITY_NAME | What is the best restaurant in san francisco for french food ?", "sql": "SELECT t2.house_number, t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t1.food_type = \"french\" AND t1.rating = (SELECT MAX(t1.rating) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = \"san francisco\" AND t1.food_type = \"french\");", "example": {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "What is the best restaurant in san francisco for french food ?", "question_toks": ["What", "is", "the", "best", "restaurant", "in", "san", "francisco", "for", "french", "food", "?"], "guid": 7162}}
{"text": "artist: Artist_ID, Name, Country, Year_Join, Age; exhibition: Exhibition_ID, Year, Theme, Artist_ID, Ticket_Price; exhibition_record: Exhibition_ID, Date, Attendance | Count the number of exhibitions that happened in or after 2005.", "sql": "SELECT COUNT(*) FROM exhibition WHERE year >= 2005", "example": {"db_id": "theme_gallery", "query": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "exhibition", "WHERE", "YEAR", ">", "=", "2005"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "exhibition", "where", "year", ">", "=", "value"], "question": "Count the number of exhibitions that happened in or after 2005.", "question_toks": ["Count", "the", "number", "of", "exhibitions", "that", "happened", "in", "or", "after", "2005", "."], "guid": 7163}}