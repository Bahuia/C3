{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | List all the name of organizations in order of the date formed.", "sql": "SELECT organization_name FROM organizations ORDER BY date_formed ASC", "example": {"db_id": "e_government", "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC", "query_toks": ["SELECT", "organization_name", "FROM", "organizations", "ORDER", "BY", "date_formed", "ASC"], "query_toks_no_value": ["select", "organization_name", "from", "organizations", "order", "by", "date_formed", "asc"], "question": "List all the name of organizations in order of the date formed.", "question_toks": ["List", "all", "the", "name", "of", "organizations", "in", "order", "of", "the", "date", "formed", "."], "guid": 3783}}
{"text": "department: Department_ID, Name, Creation, Ranking, Budget_in_Billions, Num_Employees; head: head_ID, name, born_state, age; management: department_ID, head_ID, temporary_acting | In which year were most departments established?", "sql": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "department_management", "query": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "creation", "FROM", "department", "GROUP", "BY", "creation", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "creation", "from", "department", "group", "by", "creation", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "In which year were most departments established?", "question_toks": ["In", "which", "year", "were", "most", "departments", "established", "?"], "guid": 3784}}
{"text": "Customers: customer_id, customer_details; Properties: property_id, property_type_code, property_address, other_details; Residents: resident_id, property_id, date_moved_in, date_moved_out, other_details; Organizations: organization_id, parent_organization_id, organization_details; Services: service_id, organization_id, service_type_code, service_details; Residents_Services: resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details; Things: thing_id, organization_id, Type_of_Thing_Code, service_type_code, service_details; Customer_Events: Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id; Customer_Event_Notes: Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in; Timed_Status_of_Things: thing_id, Date_and_Date, Status_of_Thing_Code | What is each customer's move in date, and the corresponding customer id and details?", "sql": "SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id", "example": {"db_id": "local_govt_and_lot", "query": "SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "T2.date_moved_in", ",", "T1.customer_id", ",", "T1.customer_details", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Events", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "t2", ".", "date_moved_in", ",", "t1", ".", "customer_id", ",", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customer_events", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "What is each customer's move in date, and the corresponding customer id and details?", "question_toks": ["What", "is", "each", "customer", "'s", "move", "in", "date", ",", "and", "the", "corresponding", "customer", "id", "and", "details", "?"], "guid": 3785}}
{"text": "election: Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place; representative: Representative_ID, Name, State, Party, Lifespan | What are the names of representatives with more than 10000 votes in election?", "sql": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE Votes  >  10000", "example": {"db_id": "election_representative", "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE Votes  >  10000", "query_toks": ["SELECT", "T2.Name", "FROM", "election", "AS", "T1", "JOIN", "representative", "AS", "T2", "ON", "T1.Representative_ID", "=", "T2.Representative_ID", "WHERE", "Votes", ">", "10000"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "election", "as", "t1", "join", "representative", "as", "t2", "on", "t1", ".", "representative_id", "=", "t2", ".", "representative_id", "where", "votes", ">", "value"], "question": "What are the names of representatives with more than 10000 votes in election?", "question_toks": ["What", "are", "the", "names", "of", "representatives", "with", "more", "than", "10000", "votes", "in", "election", "?"], "guid": 3786}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | Find name of the services that has never been used.", "sql": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id", "example": {"db_id": "e_government", "query": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id", "query_toks": ["SELECT", "service_name", "FROM", "services", "EXCEPT", "SELECT", "t1.service_name", "FROM", "services", "AS", "t1", "JOIN", "party_services", "AS", "t2", "ON", "t1.service_id", "=", "t2.service_id"], "query_toks_no_value": ["select", "service_name", "from", "services", "except", "select", "t1", ".", "service_name", "from", "services", "as", "t1", "join", "party_services", "as", "t2", "on", "t1", ".", "service_id", "=", "t2", ".", "service_id"], "question": "Find name of the services that has never been used.", "question_toks": ["Find", "name", "of", "the", "services", "that", "has", "never", "been", "used", "."], "guid": 3787}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Who served as an advisor for students who have treasurer votes in the spring election cycle?", "sql": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\"", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\"", "query_toks": ["SELECT", "DISTINCT", "T1.Advisor", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.Treasurer_Vote", "WHERE", "T2.Election_Cycle", "=", "``", "Spring", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "advisor", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "treasurer_vote", "where", "t2", ".", "election_cycle", "=", "value"], "question": "Who served as an advisor for students who have treasurer votes in the spring election cycle?", "question_toks": ["Who", "served", "as", "an", "advisor", "for", "students", "who", "have", "treasurer", "votes", "in", "the", "spring", "election", "cycle", "?"], "guid": 3788}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Which delegates are from counties with population smaller than 100000?", "sql": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000", "example": {"db_id": "election", "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000", "query_toks": ["SELECT", "T2.Delegate", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District", "WHERE", "T1.Population", "<", "100000"], "query_toks_no_value": ["select", "t2", ".", "delegate", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district", "where", "t1", ".", "population", "<", "value"], "question": "Which delegates are from counties with population smaller than 100000?", "question_toks": ["Which", "delegates", "are", "from", "counties", "with", "population", "smaller", "than", "100000", "?"], "guid": 3789}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | Which minister left office the latest?", "sql": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1", "example": {"db_id": "party_people", "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1", "query_toks": ["SELECT", "minister", "FROM", "party", "ORDER", "BY", "left_office", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "minister", "from", "party", "order", "by", "left_office", "desc", "limit", "value"], "question": "Which minister left office the latest?", "question_toks": ["Which", "minister", "left", "office", "the", "latest", "?"], "guid": 3790}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | Return the name of the organization which has the most contact individuals.", "sql": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "e_government", "query": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.organization_name", "FROM", "organizations", "AS", "t1", "JOIN", "organization_contact_individuals", "AS", "t2", "ON", "t1.organization_id", "=", "t2.organization_id", "GROUP", "BY", "t1.organization_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "organization_name", "from", "organizations", "as", "t1", "join", "organization_contact_individuals", "as", "t2", "on", "t1", ".", "organization_id", "=", "t2", ".", "organization_id", "group", "by", "t1", ".", "organization_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the name of the organization which has the most contact individuals.", "question_toks": ["Return", "the", "name", "of", "the", "organization", "which", "has", "the", "most", "contact", "individuals", "."], "guid": 3791}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Tell me the ages of the oldest and youngest students studying major 600.", "sql": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600", "example": {"db_id": "voter_2", "query": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600", "query_toks": ["SELECT", "max", "(", "Age", ")", ",", "min", "(", "Age", ")", "FROM", "STUDENT", "WHERE", "Major", "=", "600"], "query_toks_no_value": ["select", "max", "(", "age", ")", ",", "min", "(", "age", ")", "from", "student", "where", "major", "=", "value"], "question": "Tell me the ages of the oldest and youngest students studying major 600.", "question_toks": ["Tell", "me", "the", "ages", "of", "the", "oldest", "and", "youngest", "students", "studying", "major", "600", "."], "guid": 3792}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | How many regions do we have?", "sql": "SELECT count(*) FROM region", "example": {"db_id": "party_people", "query": "SELECT count(*) FROM region", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "region"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "region"], "question": "How many regions do we have?", "question_toks": ["How", "many", "regions", "do", "we", "have", "?"], "guid": 3793}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | Find the last name of the latest contact individual of the organization \"Labour Party\".", "sql": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1", "example": {"db_id": "e_government", "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1", "query_toks": ["SELECT", "t3.individual_last_name", "FROM", "organizations", "AS", "t1", "JOIN", "organization_contact_individuals", "AS", "t2", "ON", "t1.organization_id", "=", "t2.organization_id", "JOIN", "individuals", "AS", "t3", "ON", "t2.individual_id", "=", "t3.individual_id", "WHERE", "t1.organization_name", "=", "``", "Labour", "Party", "''", "ORDER", "BY", "t2.date_contact_to", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t3", ".", "individual_last_name", "from", "organizations", "as", "t1", "join", "organization_contact_individuals", "as", "t2", "on", "t1", ".", "organization_id", "=", "t2", ".", "organization_id", "join", "individuals", "as", "t3", "on", "t2", ".", "individual_id", "=", "t3", ".", "individual_id", "where", "t1", ".", "organization_name", "=", "value", "order", "by", "t2", ".", "date_contact_to", "desc", "limit", "value"], "question": "Find the last name of the latest contact individual of the organization \"Labour Party\".", "question_toks": ["Find", "the", "last", "name", "of", "the", "latest", "contact", "individual", "of", "the", "organization", "``", "Labour", "Party", "''", "."], "guid": 3794}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Count the number of distinct governors.", "sql": "SELECT count(DISTINCT Governor) FROM party", "example": {"db_id": "election", "query": "SELECT count(DISTINCT Governor) FROM party", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Governor", ")", "FROM", "party"], "query_toks_no_value": ["select", "count", "(", "distinct", "governor", ")", "from", "party"], "question": "Count the number of distinct governors.", "question_toks": ["Count", "the", "number", "of", "distinct", "governors", "."], "guid": 3795}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | Count the number of services.", "sql": "SELECT count(*) FROM services", "example": {"db_id": "e_government", "query": "SELECT count(*) FROM services", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "services"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "services"], "question": "Count the number of services.", "question_toks": ["Count", "the", "number", "of", "services", "."], "guid": 3796}}
{"text": "election: Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place; representative: Representative_ID, Name, State, Party, Lifespan | What are the life spans of representatives from New York state or Indiana state?", "sql": "SELECT Lifespan FROM representative WHERE State  =  \"New York\" OR State  =  \"Indiana\"", "example": {"db_id": "election_representative", "query": "SELECT Lifespan FROM representative WHERE State  =  \"New York\" OR State  =  \"Indiana\"", "query_toks": ["SELECT", "Lifespan", "FROM", "representative", "WHERE", "State", "=", "``", "New", "York", "''", "OR", "State", "=", "``", "Indiana", "''"], "query_toks_no_value": ["select", "lifespan", "from", "representative", "where", "state", "=", "value", "or", "state", "=", "value"], "question": "What are the life spans of representatives from New York state or Indiana state?", "question_toks": ["What", "are", "the", "life", "spans", "of", "representatives", "from", "New", "York", "state", "or", "Indiana", "state", "?"], "guid": 3797}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | What are the distinct majors that students with treasurer votes are studying?", "sql": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote", "query_toks": ["SELECT", "DISTINCT", "T1.Major", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.Treasurer_Vote"], "query_toks_no_value": ["select", "distinct", "t1", ".", "major", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "treasurer_vote"], "question": "What are the distinct majors that students with treasurer votes are studying?", "question_toks": ["What", "are", "the", "distinct", "majors", "that", "students", "with", "treasurer", "votes", "are", "studying", "?"], "guid": 3798}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | What is the city_code of the city that the most students live in?", "sql": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "voter_2", "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "city_code", "FROM", "STUDENT", "GROUP", "BY", "city_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "city_code", "from", "student", "group", "by", "city_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the city_code of the city that the most students live in?", "question_toks": ["What", "is", "the", "city_code", "of", "the", "city", "that", "the", "most", "students", "live", "in", "?"], "guid": 3799}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | What are the names of members who are not in charge of any events?", "sql": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id", "example": {"db_id": "party_people", "query": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id", "query_toks": ["SELECT", "member_name", "FROM", "member", "EXCEPT", "SELECT", "T1.member_name", "FROM", "member", "AS", "T1", "JOIN", "party_events", "AS", "T2", "ON", "T1.member_id", "=", "T2.member_in_charge_id"], "query_toks_no_value": ["select", "member_name", "from", "member", "except", "select", "t1", ".", "member_name", "from", "member", "as", "t1", "join", "party_events", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_in_charge_id"], "question": "What are the names of members who are not in charge of any events?", "question_toks": ["What", "are", "the", "names", "of", "members", "who", "are", "not", "in", "charge", "of", "any", "events", "?"], "guid": 3800}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Find the average age of students who live in the city with code \"NYC\" and have secretary votes in the spring election cycle.", "sql": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"", "example": {"db_id": "voter_2", "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"", "query_toks": ["SELECT", "avg", "(", "T1.Age", ")", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "SECRETARY_Vote", "WHERE", "T1.city_code", "=", "``", "NYC", "''", "AND", "T2.Election_Cycle", "=", "``", "Spring", "''"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "age", ")", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "secretary_vote", "where", "t1", ".", "city_code", "=", "value", "and", "t2", ".", "election_cycle", "=", "value"], "question": "Find the average age of students who live in the city with code \"NYC\" and have secretary votes in the spring election cycle.", "question_toks": ["Find", "the", "average", "age", "of", "students", "who", "live", "in", "the", "city", "with", "code", "``", "NYC", "''", "and", "have", "secretary", "votes", "in", "the", "spring", "election", "cycle", "."], "guid": 3801}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | Count the number of party events.", "sql": "SELECT count(*) FROM party_events", "example": {"db_id": "party_people", "query": "SELECT count(*) FROM party_events", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "party_events"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "party_events"], "question": "Count the number of party events.", "question_toks": ["Count", "the", "number", "of", "party", "events", "."], "guid": 3802}}
{"text": "election: Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place; representative: Representative_ID, Name, State, Party, Lifespan | List the names of representatives that have not participated in elections listed here.", "sql": "SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election)", "example": {"db_id": "election_representative", "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election)", "query_toks": ["SELECT", "Name", "FROM", "representative", "WHERE", "Representative_ID", "NOT", "IN", "(", "SELECT", "Representative_ID", "FROM", "election", ")"], "query_toks_no_value": ["select", "name", "from", "representative", "where", "representative_id", "not", "in", "(", "select", "representative_id", "from", "election", ")"], "question": "List the names of representatives that have not participated in elections listed here.", "question_toks": ["List", "the", "names", "of", "representatives", "that", "have", "not", "participated", "in", "elections", "listed", "here", "."], "guid": 3803}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Count the number of distinct delegates who are from counties with population above 50000.", "sql": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000", "example": {"db_id": "election", "query": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T2.Delegate", ")", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District", "WHERE", "T1.Population", ">", "50000"], "query_toks_no_value": ["select", "count", "(", "distinct", "t2", ".", "delegate", ")", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district", "where", "t1", ".", "population", ">", "value"], "question": "Count the number of distinct delegates who are from counties with population above 50000.", "question_toks": ["Count", "the", "number", "of", "distinct", "delegates", "who", "are", "from", "counties", "with", "population", "above", "50000", "."], "guid": 3804}}
{"text": "Customers: customer_id, customer_details; Properties: property_id, property_type_code, property_address, other_details; Residents: resident_id, property_id, date_moved_in, date_moved_out, other_details; Organizations: organization_id, parent_organization_id, organization_details; Services: service_id, organization_id, service_type_code, service_details; Residents_Services: resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details; Things: thing_id, organization_id, Type_of_Thing_Code, service_type_code, service_details; Customer_Events: Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id; Customer_Event_Notes: Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in; Timed_Status_of_Things: thing_id, Date_and_Date, Status_of_Thing_Code | How many distinct locations have the things with service detail 'Unsatisfied' been located in?", "sql": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied'", "example": {"db_id": "local_govt_and_lot", "query": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied'", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T2.Location_Code", ")", "FROM", "Things", "AS", "T1", "JOIN", "Timed_Locations_of_Things", "AS", "T2", "ON", "T1.thing_id", "=", "T2.thing_id", "WHERE", "T1.service_details", "=", "'Unsatisfied", "'"], "query_toks_no_value": ["select", "count", "(", "distinct", "t2", ".", "location_code", ")", "from", "things", "as", "t1", "join", "timed_locations_of_things", "as", "t2", "on", "t1", ".", "thing_id", "=", "t2", ".", "thing_id", "where", "t1", ".", "service_details", "=", "value"], "question": "How many distinct locations have the things with service detail 'Unsatisfied' been located in?", "question_toks": ["How", "many", "distinct", "locations", "have", "the", "things", "with", "service", "detail", "'Unsatisfied", "'", "been", "located", "in", "?"], "guid": 3805}}
{"text": "election: Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place; representative: Representative_ID, Name, State, Party, Lifespan | What are the minimum and maximum vote percents of elections?", "sql": "SELECT min(Vote_Percent) ,  max(Vote_Percent) FROM election", "example": {"db_id": "election_representative", "query": "SELECT min(Vote_Percent) ,  max(Vote_Percent) FROM election", "query_toks": ["SELECT", "min", "(", "Vote_Percent", ")", ",", "max", "(", "Vote_Percent", ")", "FROM", "election"], "query_toks_no_value": ["select", "min", "(", "vote_percent", ")", ",", "max", "(", "vote_percent", ")", "from", "election"], "question": "What are the minimum and maximum vote percents of elections?", "question_toks": ["What", "are", "the", "minimum", "and", "maximum", "vote", "percents", "of", "elections", "?"], "guid": 3806}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | What are the names of members and their corresponding parties?", "sql": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id", "example": {"db_id": "party_people", "query": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id", "query_toks": ["SELECT", "T1.member_name", ",", "T2.party_name", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id"], "query_toks_no_value": ["select", "t1", ".", "member_name", ",", "t2", ".", "party_name", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id"], "question": "What are the names of members and their corresponding parties?", "question_toks": ["What", "are", "the", "names", "of", "members", "and", "their", "corresponding", "parties", "?"], "guid": 3807}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Find the first and last name of all the students of age 18 who have vice president votes.", "sql": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", ",", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.VICE_President_VOTE", "WHERE", "T1.age", "=", "18"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "vice_president_vote", "where", "t1", ".", "age", "=", "value"], "question": "Find the first and last name of all the students of age 18 who have vice president votes.", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "all", "the", "students", "of", "age", "18", "who", "have", "vice", "president", "votes", "."], "guid": 3808}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | How many party events do we have?", "sql": "SELECT count(*) FROM party_events", "example": {"db_id": "party_people", "query": "SELECT count(*) FROM party_events", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "party_events"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "party_events"], "question": "How many party events do we have?", "question_toks": ["How", "many", "party", "events", "do", "we", "have", "?"], "guid": 3809}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | What are the delegate and committee information for each election record?", "sql": "SELECT Delegate ,  Committee FROM election", "example": {"db_id": "election", "query": "SELECT Delegate ,  Committee FROM election", "query_toks": ["SELECT", "Delegate", ",", "Committee", "FROM", "election"], "query_toks_no_value": ["select", "delegate", ",", "committee", "from", "election"], "question": "What are the delegate and committee information for each election record?", "question_toks": ["What", "are", "the", "delegate", "and", "committee", "information", "for", "each", "election", "record", "?"], "guid": 3810}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | Who are the ministers who took office after 1961 or before 1959?", "sql": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959", "example": {"db_id": "party_people", "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959", "query_toks": ["SELECT", "minister", "FROM", "party", "WHERE", "took_office", ">", "1961", "OR", "took_office", "<", "1959"], "query_toks_no_value": ["select", "minister", "from", "party", "where", "took_office", ">", "value", "or", "took_office", "<", "value"], "question": "Who are the ministers who took office after 1961 or before 1959?", "question_toks": ["Who", "are", "the", "ministers", "who", "took", "office", "after", "1961", "or", "before", "1959", "?"], "guid": 3811}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Which county do the delegates on \"Appropriations\" committee belong to? Give me the county names.", "sql": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\"", "example": {"db_id": "election", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\"", "query_toks": ["SELECT", "T1.County_name", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District", "WHERE", "T2.Committee", "=", "``", "Appropriations", "''"], "query_toks_no_value": ["select", "t1", ".", "county_name", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district", "where", "t2", ".", "committee", "=", "value"], "question": "Which county do the delegates on \"Appropriations\" committee belong to? Give me the county names.", "question_toks": ["Which", "county", "do", "the", "delegates", "on", "``", "Appropriations", "''", "committee", "belong", "to", "?", "Give", "me", "the", "county", "names", "."], "guid": 3812}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Return the names of all counties sorted by county name in descending alphabetical order.", "sql": "SELECT County_name FROM county ORDER BY County_name DESC", "example": {"db_id": "election", "query": "SELECT County_name FROM county ORDER BY County_name DESC", "query_toks": ["SELECT", "County_name", "FROM", "county", "ORDER", "BY", "County_name", "DESC"], "query_toks_no_value": ["select", "county_name", "from", "county", "order", "by", "county_name", "desc"], "question": "Return the names of all counties sorted by county name in descending alphabetical order.", "question_toks": ["Return", "the", "names", "of", "all", "counties", "sorted", "by", "county", "name", "in", "descending", "alphabetical", "order", "."], "guid": 3813}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | What are the distinct secretary votes in the fall election cycle?", "sql": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"", "query_toks": ["SELECT", "DISTINCT", "Secretary_Vote", "FROM", "VOTING_RECORD", "WHERE", "ELECTION_CYCLE", "=", "``", "Fall", "''"], "query_toks_no_value": ["select", "distinct", "secretary_vote", "from", "voting_record", "where", "election_cycle", "=", "value"], "question": "What are the distinct secretary votes in the fall election cycle?", "question_toks": ["What", "are", "the", "distinct", "secretary", "votes", "in", "the", "fall", "election", "cycle", "?"], "guid": 3814}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | Show the first year and last year of parties with theme \"Spring\" or \"Teqnology\".", "sql": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"", "example": {"db_id": "party_host", "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"", "query_toks": ["SELECT", "First_year", ",", "Last_year", "FROM", "party", "WHERE", "Party_Theme", "=", "``", "Spring", "''", "OR", "Party_Theme", "=", "``", "Teqnology", "''"], "query_toks_no_value": ["select", "first_year", ",", "last_year", "from", "party", "where", "party_theme", "=", "value", "or", "party_theme", "=", "value"], "question": "Show the first year and last year of parties with theme \"Spring\" or \"Teqnology\".", "question_toks": ["Show", "the", "first", "year", "and", "last", "year", "of", "parties", "with", "theme", "``", "Spring", "''", "or", "``", "Teqnology", "''", "."], "guid": 3815}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | What is the name of the organization that was formed most recently?", "sql": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1", "example": {"db_id": "e_government", "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1", "query_toks": ["SELECT", "organization_name", "FROM", "organizations", "ORDER", "BY", "date_formed", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "organization_name", "from", "organizations", "order", "by", "date_formed", "desc", "limit", "value"], "question": "What is the name of the organization that was formed most recently?", "question_toks": ["What", "is", "the", "name", "of", "the", "organization", "that", "was", "formed", "most", "recently", "?"], "guid": 3816}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | What are the name and population of each county?", "sql": "SELECT County_name ,  Population FROM county", "example": {"db_id": "election", "query": "SELECT County_name ,  Population FROM county", "query_toks": ["SELECT", "County_name", ",", "Population", "FROM", "county"], "query_toks_no_value": ["select", "county_name", ",", "population", "from", "county"], "question": "What are the name and population of each county?", "question_toks": ["What", "are", "the", "name", "and", "population", "of", "each", "county", "?"], "guid": 3817}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | What are the distinct president votes on 08/30/2015?", "sql": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\"", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\"", "query_toks": ["SELECT", "DISTINCT", "PRESIDENT_Vote", "FROM", "VOTING_RECORD", "WHERE", "Registration_Date", "=", "``", "08/30/2015", "''"], "query_toks_no_value": ["select", "distinct", "president_vote", "from", "voting_record", "where", "registration_date", "=", "value"], "question": "What are the distinct president votes on 08/30/2015?", "question_toks": ["What", "are", "the", "distinct", "president", "votes", "on", "08/30/2015", "?"], "guid": 3818}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | Show all distinct region names ordered by their labels.", "sql": "SELECT DISTINCT region_name FROM region ORDER BY Label", "example": {"db_id": "party_people", "query": "SELECT DISTINCT region_name FROM region ORDER BY Label", "query_toks": ["SELECT", "DISTINCT", "region_name", "FROM", "region", "ORDER", "BY", "Label"], "query_toks_no_value": ["select", "distinct", "region_name", "from", "region", "order", "by", "label"], "question": "Show all distinct region names ordered by their labels.", "question_toks": ["Show", "all", "distinct", "region", "names", "ordered", "by", "their", "labels", "."], "guid": 3819}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | What is the location of the party with the most hosts?", "sql": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1", "example": {"db_id": "party_host", "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1", "query_toks": ["SELECT", "LOCATION", "FROM", "party", "ORDER", "BY", "Number_of_hosts", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "location", "from", "party", "order", "by", "number_of_hosts", "desc", "limit", "value"], "question": "What is the location of the party with the most hosts?", "question_toks": ["What", "is", "the", "location", "of", "the", "party", "with", "the", "most", "hosts", "?"], "guid": 3820}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | What are the last names of students studying major 50?", "sql": "SELECT LName FROM STUDENT WHERE Major  =  50", "example": {"db_id": "voter_2", "query": "SELECT LName FROM STUDENT WHERE Major  =  50", "query_toks": ["SELECT", "LName", "FROM", "STUDENT", "WHERE", "Major", "=", "50"], "query_toks_no_value": ["select", "lname", "from", "student", "where", "major", "=", "value"], "question": "What are the last names of students studying major 50?", "question_toks": ["What", "are", "the", "last", "names", "of", "students", "studying", "major", "50", "?"], "guid": 3821}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Find the distinct first names of the students who have class senator votes.", "sql": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.CLASS_Senator_VOTE"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "class_senator_vote"], "question": "Find the distinct first names of the students who have class senator votes.", "question_toks": ["Find", "the", "distinct", "first", "names", "of", "the", "students", "who", "have", "class", "senator", "votes", "."], "guid": 3822}}
{"text": "AREA_CODE_STATE: area_code, state; CONTESTANTS: contestant_number, contestant_name; VOTES: vote_id, phone_number, state, contestant_number, created | Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?", "sql": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1", "example": {"db_id": "voter_1", "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T1.contestant_number", ",", "T1.contestant_name", "FROM", "contestants", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.contestant_number", "=", "T2.contestant_number", "GROUP", "BY", "T1.contestant_number", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "contestant_number", ",", "t1", ".", "contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "contestant_number", "=", "t2", ".", "contestant_number", "group", "by", "t1", ".", "contestant_number", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?", "question_toks": ["Of", "all", "the", "contestants", "who", "got", "voted", ",", "what", "is", "the", "contestant", "number", "and", "name", "of", "the", "contestant", "who", "got", "least", "votes", "?"], "guid": 3823}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Show the lieutenant governor and comptroller from the democratic party.", "sql": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"", "example": {"db_id": "election", "query": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"", "query_toks": ["SELECT", "Lieutenant_Governor", ",", "Comptroller", "FROM", "party", "WHERE", "Party", "=", "``", "Democratic", "''"], "query_toks_no_value": ["select", "lieutenant_governor", ",", "comptroller", "from", "party", "where", "party", "=", "value"], "question": "Show the lieutenant governor and comptroller from the democratic party.", "question_toks": ["Show", "the", "lieutenant", "governor", "and", "comptroller", "from", "the", "democratic", "party", "."], "guid": 3824}}
{"text": "Customer_Master_Index: master_customer_id, cmi_details; CMI_Cross_References: cmi_cross_ref_id, master_customer_id, source_system_code; Council_Tax: council_tax_id, cmi_cross_ref_id; Business_Rates: business_rates_id, cmi_cross_ref_id; Benefits_Overpayments: council_tax_id, cmi_cross_ref_id; Parking_Fines: council_tax_id, cmi_cross_ref_id; Rent_Arrears: council_tax_id, cmi_cross_ref_id; Electoral_Register: electoral_register_id, cmi_cross_ref_id | What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.", "sql": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1", "example": {"db_id": "local_govt_mdm", "query": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1", "query_toks": ["SELECT", "T1.cmi_cross_ref_id", ",", "T1.source_system_code", "FROM", "CMI_Cross_References", "AS", "T1", "JOIN", "Council_Tax", "AS", "T2", "ON", "T1.cmi_cross_ref_id", "=", "T2.cmi_cross_ref_id", "GROUP", "BY", "T1.cmi_cross_ref_id", "HAVING", "count", "(", "*", ")", ">", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "cmi_cross_ref_id", ",", "t1", ".", "source_system_code", "from", "cmi_cross_references", "as", "t1", "join", "council_tax", "as", "t2", "on", "t1", ".", "cmi_cross_ref_id", "=", "t2", ".", "cmi_cross_ref_id", "group", "by", "t1", ".", "cmi_cross_ref_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.", "question_toks": ["What", "is", "the", "cmi", "cross", "reference", "id", "that", "is", "related", "to", "at", "least", "one", "council", "tax", "entry", "?", "List", "the", "cross", "reference", "id", "and", "source", "system", "code", "."], "guid": 3825}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | Find the last name of the first ever contact person of the organization with the highest UK Vat number.", "sql": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1", "example": {"db_id": "e_government", "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1", "query_toks": ["SELECT", "t3.individual_last_name", "FROM", "organizations", "AS", "t1", "JOIN", "organization_contact_individuals", "AS", "t2", "ON", "t1.organization_id", "=", "t2.organization_id", "JOIN", "individuals", "AS", "t3", "ON", "t2.individual_id", "=", "t3.individual_id", "WHERE", "t1.uk_vat_number", "=", "(", "SELECT", "max", "(", "uk_vat_number", ")", "FROM", "organizations", ")", "ORDER", "BY", "t2.date_contact_to", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t3", ".", "individual_last_name", "from", "organizations", "as", "t1", "join", "organization_contact_individuals", "as", "t2", "on", "t1", ".", "organization_id", "=", "t2", ".", "organization_id", "join", "individuals", "as", "t3", "on", "t2", ".", "individual_id", "=", "t3", ".", "individual_id", "where", "t1", ".", "uk_vat_number", "=", "(", "select", "max", "(", "uk_vat_number", ")", "from", "organizations", ")", "order", "by", "t2", ".", "date_contact_to", "asc", "limit", "value"], "question": "Find the last name of the first ever contact person of the organization with the highest UK Vat number.", "question_toks": ["Find", "the", "last", "name", "of", "the", "first", "ever", "contact", "person", "of", "the", "organization", "with", "the", "highest", "UK", "Vat", "number", "."], "guid": 3826}}
{"text": "Services: Service_ID, Service_Type_Code; Participants: Participant_ID, Participant_Type_Code, Participant_Details; Events: Event_ID, Service_ID, Event_Details; Participants_in_Events: Event_ID, Participant_ID | What are all the the participant ids, type code and details?", "sql": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants", "example": {"db_id": "local_govt_in_alabama", "query": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants", "query_toks": ["SELECT", "Participant_ID", ",", "Participant_Type_Code", ",", "Participant_Details", "FROM", "Participants"], "query_toks_no_value": ["select", "participant_id", ",", "participant_type_code", ",", "participant_details", "from", "participants"], "question": "What are all the the participant ids, type code and details?", "question_toks": ["What", "are", "all", "the", "the", "participant", "ids", ",", "type", "code", "and", "details", "?"], "guid": 3827}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | Find the last name of the individuals that have been contact individuals of an organization.", "sql": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id", "example": {"db_id": "e_government", "query": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id", "query_toks": ["SELECT", "DISTINCT", "t1.individual_last_name", "FROM", "individuals", "AS", "t1", "JOIN", "organization_contact_individuals", "AS", "t2", "ON", "t1.individual_id", "=", "t2.individual_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "individual_last_name", "from", "individuals", "as", "t1", "join", "organization_contact_individuals", "as", "t2", "on", "t1", ".", "individual_id", "=", "t2", ".", "individual_id"], "question": "Find the last name of the individuals that have been contact individuals of an organization.", "question_toks": ["Find", "the", "last", "name", "of", "the", "individuals", "that", "have", "been", "contact", "individuals", "of", "an", "organization", "."], "guid": 3828}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | List all the types of forms.", "sql": "SELECT DISTINCT form_type_code FROM forms", "example": {"db_id": "e_government", "query": "SELECT DISTINCT form_type_code FROM forms", "query_toks": ["SELECT", "DISTINCT", "form_type_code", "FROM", "forms"], "query_toks_no_value": ["select", "distinct", "form_type_code", "from", "forms"], "question": "List all the types of forms.", "question_toks": ["List", "all", "the", "types", "of", "forms", "."], "guid": 3829}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | Show the most common nationality of hosts.", "sql": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "party_host", "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Nationality", "FROM", "HOST", "GROUP", "BY", "Nationality", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "nationality", "from", "host", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the most common nationality of hosts.", "question_toks": ["Show", "the", "most", "common", "nationality", "of", "hosts", "."], "guid": 3830}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | For each delegate, find the names of the party they are part of.", "sql": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID", "example": {"db_id": "election", "query": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID", "query_toks": ["SELECT", "T1.Delegate", ",", "T2.Party", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID"], "query_toks_no_value": ["select", "t1", ".", "delegate", ",", "t2", ".", "party", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id"], "question": "For each delegate, find the names of the party they are part of.", "question_toks": ["For", "each", "delegate", ",", "find", "the", "names", "of", "the", "party", "they", "are", "part", "of", "."], "guid": 3831}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Which people severed as comptroller most frequently? Give me the name of the person and the frequency count.", "sql": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "election", "query": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Comptroller", ",", "COUNT", "(", "*", ")", "FROM", "party", "GROUP", "BY", "Comptroller", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "comptroller", ",", "count", "(", "*", ")", "from", "party", "group", "by", "comptroller", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which people severed as comptroller most frequently? Give me the name of the person and the frequency count.", "question_toks": ["Which", "people", "severed", "as", "comptroller", "most", "frequently", "?", "Give", "me", "the", "name", "of", "the", "person", "and", "the", "frequency", "count", "."], "guid": 3832}}