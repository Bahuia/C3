{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Find the distinct number of president votes.", "sql": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD", "example": {"db_id": "voter_2", "query": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD", "query_toks": ["SELECT", "count", "(", "DISTINCT", "President_Vote", ")", "FROM", "VOTING_RECORD"], "query_toks_no_value": ["select", "count", "(", "distinct", "president_vote", ")", "from", "voting_record"], "question": "Find the distinct number of president votes.", "question_toks": ["Find", "the", "distinct", "number", "of", "president", "votes", "."], "guid": 3833}}
{"text": "election: Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place; representative: Representative_ID, Name, State, Party, Lifespan | What are the names of representatives whose party is not \"Republican\"?", "sql": "SELECT Name FROM Representative WHERE Party != \"Republican\"", "example": {"db_id": "election_representative", "query": "SELECT Name FROM Representative WHERE Party != \"Republican\"", "query_toks": ["SELECT", "Name", "FROM", "Representative", "WHERE", "Party", "!", "=", "``", "Republican", "''"], "query_toks_no_value": ["select", "name", "from", "representative", "where", "party", "!", "=", "value"], "question": "What are the names of representatives whose party is not \"Republican\"?", "question_toks": ["What", "are", "the", "names", "of", "representatives", "whose", "party", "is", "not", "``", "Republican", "''", "?"], "guid": 3834}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | List member names and their party names.", "sql": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id", "example": {"db_id": "party_people", "query": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id", "query_toks": ["SELECT", "T1.member_name", ",", "T2.party_name", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id"], "query_toks_no_value": ["select", "t1", ".", "member_name", ",", "t2", ".", "party_name", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id"], "question": "List member names and their party names.", "question_toks": ["List", "member", "names", "and", "their", "party", "names", "."], "guid": 3835}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | How many cities are there in state \"Colorado\"?", "sql": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"", "example": {"db_id": "e_government", "query": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "addresses", "WHERE", "state_province_county", "=", "``", "Colorado", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "addresses", "where", "state_province_county", "=", "value"], "question": "How many cities are there in state \"Colorado\"?", "question_toks": ["How", "many", "cities", "are", "there", "in", "state", "``", "Colorado", "''", "?"], "guid": 3836}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | What are the distinct first names of the students who have class president votes?", "sql": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.CLASS_Senator_VOTE"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "class_senator_vote"], "question": "What are the distinct first names of the students who have class president votes?", "question_toks": ["What", "are", "the", "distinct", "first", "names", "of", "the", "students", "who", "have", "class", "president", "votes", "?"], "guid": 3837}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | How many counties are there in total?", "sql": "SELECT count(*) FROM county", "example": {"db_id": "election", "query": "SELECT count(*) FROM county", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "county"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "county"], "question": "How many counties are there in total?", "question_toks": ["How", "many", "counties", "are", "there", "in", "total", "?"], "guid": 3838}}
{"text": "election: Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place; representative: Representative_ID, Name, State, Party, Lifespan | What parties have at least three representatives?", "sql": "SELECT Party FROM representative GROUP BY Party HAVING COUNT(*)  >=  3", "example": {"db_id": "election_representative", "query": "SELECT Party FROM representative GROUP BY Party HAVING COUNT(*)  >=  3", "query_toks": ["SELECT", "Party", "FROM", "representative", "GROUP", "BY", "Party", "HAVING", "COUNT", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "party", "from", "representative", "group", "by", "party", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What parties have at least three representatives?", "question_toks": ["What", "parties", "have", "at", "least", "three", "representatives", "?"], "guid": 3839}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | How many students does each advisor have?", "sql": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor", "example": {"db_id": "voter_2", "query": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor", "query_toks": ["SELECT", "Advisor", ",", "count", "(", "*", ")", "FROM", "STUDENT", "GROUP", "BY", "Advisor"], "query_toks_no_value": ["select", "advisor", ",", "count", "(", "*", ")", "from", "student", "group", "by", "advisor"], "question": "How many students does each advisor have?", "question_toks": ["How", "many", "students", "does", "each", "advisor", "have", "?"], "guid": 3840}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | What are the payment method codes that have been used by more than 3 parties?", "sql": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3", "example": {"db_id": "e_government", "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3", "query_toks": ["SELECT", "payment_method_code", "FROM", "parties", "GROUP", "BY", "payment_method_code", "HAVING", "count", "(", "*", ")", ">", "3"], "query_toks_no_value": ["select", "payment_method_code", "from", "parties", "group", "by", "payment_method_code", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the payment method codes that have been used by more than 3 parties?", "question_toks": ["What", "are", "the", "payment", "method", "codes", "that", "have", "been", "used", "by", "more", "than", "3", "parties", "?"], "guid": 3841}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Who are the advisors for students that live in a city with city code \"BAL\"?", "sql": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"", "example": {"db_id": "voter_2", "query": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"", "query_toks": ["SELECT", "Advisor", "FROM", "STUDENT", "WHERE", "city_code", "=", "``", "BAL", "''"], "query_toks_no_value": ["select", "advisor", "from", "student", "where", "city_code", "=", "value"], "question": "Who are the advisors for students that live in a city with city code \"BAL\"?", "question_toks": ["Who", "are", "the", "advisors", "for", "students", "that", "live", "in", "a", "city", "with", "city", "code", "``", "BAL", "''", "?"], "guid": 3842}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Show the name of each party and the corresponding number of delegates from that party.", "sql": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party", "example": {"db_id": "election", "query": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party", "query_toks": ["SELECT", "T2.Party", ",", "COUNT", "(", "*", ")", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "GROUP", "BY", "T1.Party"], "query_toks_no_value": ["select", "t2", ".", "party", ",", "count", "(", "*", ")", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party"], "question": "Show the name of each party and the corresponding number of delegates from that party.", "question_toks": ["Show", "the", "name", "of", "each", "party", "and", "the", "corresponding", "number", "of", "delegates", "from", "that", "party", "."], "guid": 3843}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | What is the average age of the female students with secretary votes in the spring election cycle?", "sql": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\"", "example": {"db_id": "voter_2", "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\"", "query_toks": ["SELECT", "avg", "(", "T1.Age", ")", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "SECRETARY_Vote", "WHERE", "T1.Sex", "=", "``", "F", "''", "AND", "T2.Election_Cycle", "=", "``", "Spring", "''"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "age", ")", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "secretary_vote", "where", "t1", ".", "sex", "=", "value", "and", "t2", ".", "election_cycle", "=", "value"], "question": "What is the average age of the female students with secretary votes in the spring election cycle?", "question_toks": ["What", "is", "the", "average", "age", "of", "the", "female", "students", "with", "secretary", "votes", "in", "the", "spring", "election", "cycle", "?"], "guid": 3844}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | What is the name of the party form that is most common?", "sql": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "e_government", "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.form_name", "FROM", "forms", "AS", "t1", "JOIN", "party_forms", "AS", "t2", "ON", "t1.form_id", "=", "t2.form_id", "GROUP", "BY", "t2.form_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "form_name", "from", "forms", "as", "t1", "join", "party_forms", "as", "t2", "on", "t1", ".", "form_id", "=", "t2", ".", "form_id", "group", "by", "t2", ".", "form_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the party form that is most common?", "question_toks": ["What", "is", "the", "name", "of", "the", "party", "form", "that", "is", "most", "common", "?"], "guid": 3845}}
{"text": "Customer_Master_Index: master_customer_id, cmi_details; CMI_Cross_References: cmi_cross_ref_id, master_customer_id, source_system_code; Council_Tax: council_tax_id, cmi_cross_ref_id; Business_Rates: business_rates_id, cmi_cross_ref_id; Benefits_Overpayments: council_tax_id, cmi_cross_ref_id; Parking_Fines: council_tax_id, cmi_cross_ref_id; Rent_Arrears: council_tax_id, cmi_cross_ref_id; Electoral_Register: electoral_register_id, cmi_cross_ref_id | Which cmi cross reference id is not related to any parking taxes?", "sql": "SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines", "example": {"db_id": "local_govt_mdm", "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines", "query_toks": ["SELECT", "cmi_cross_ref_id", "FROM", "cmi_cross_references", "EXCEPT", "SELECT", "cmi_cross_ref_id", "FROM", "parking_fines"], "query_toks_no_value": ["select", "cmi_cross_ref_id", "from", "cmi_cross_references", "except", "select", "cmi_cross_ref_id", "from", "parking_fines"], "question": "Which cmi cross reference id is not related to any parking taxes?", "question_toks": ["Which", "cmi", "cross", "reference", "id", "is", "not", "related", "to", "any", "parking", "taxes", "?"], "guid": 3846}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | What are the first names and last names of the students who are 18 years old and have vice president votes.", "sql": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", ",", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.VICE_President_VOTE", "WHERE", "T1.age", "=", "18"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "vice_president_vote", "where", "t1", ".", "age", "=", "value"], "question": "What are the first names and last names of the students who are 18 years old and have vice president votes.", "question_toks": ["What", "are", "the", "first", "names", "and", "last", "names", "of", "the", "students", "who", "are", "18", "years", "old", "and", "have", "vice", "president", "votes", "."], "guid": 3847}}
{"text": "AREA_CODE_STATE: area_code, state; CONTESTANTS: contestant_number, contestant_name; VOTES: vote_id, phone_number, state, contestant_number, created | What are the names of the contestants whose names are not 'Jessie Alloway'", "sql": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'", "example": {"db_id": "voter_1", "query": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'", "query_toks": ["SELECT", "contestant_name", "FROM", "contestants", "WHERE", "contestant_name", "!", "=", "'Jessie", "Alloway", "'"], "query_toks_no_value": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "!", "=", "value"], "question": "What are the names of the contestants whose names are not 'Jessie Alloway'", "question_toks": ["What", "are", "the", "names", "of", "the", "contestants", "whose", "names", "are", "not", "'Jessie", "Alloway", "'"], "guid": 3848}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Show the name of the county with the biggest population.", "sql": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1", "example": {"db_id": "election", "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1", "query_toks": ["SELECT", "County_name", "FROM", "county", "ORDER", "BY", "Population", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "county_name", "from", "county", "order", "by", "population", "desc", "limit", "value"], "question": "Show the name of the county with the biggest population.", "question_toks": ["Show", "the", "name", "of", "the", "county", "with", "the", "biggest", "population", "."], "guid": 3849}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Find the first and last names of all the female (sex is F) students who have president votes.", "sql": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", ",", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.President_VOTE", "WHERE", "T1.sex", "=", "``", "F", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "president_vote", "where", "t1", ".", "sex", "=", "value"], "question": "Find the first and last names of all the female (sex is F) students who have president votes.", "question_toks": ["Find", "the", "first", "and", "last", "names", "of", "all", "the", "female", "(", "sex", "is", "F", ")", "students", "who", "have", "president", "votes", "."], "guid": 3850}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | What is the last name of the first individual contacted from the organization with the maximum UK Vat number across all organizations?", "sql": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1", "example": {"db_id": "e_government", "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1", "query_toks": ["SELECT", "t3.individual_last_name", "FROM", "organizations", "AS", "t1", "JOIN", "organization_contact_individuals", "AS", "t2", "ON", "t1.organization_id", "=", "t2.organization_id", "JOIN", "individuals", "AS", "t3", "ON", "t2.individual_id", "=", "t3.individual_id", "WHERE", "t1.uk_vat_number", "=", "(", "SELECT", "max", "(", "uk_vat_number", ")", "FROM", "organizations", ")", "ORDER", "BY", "t2.date_contact_to", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t3", ".", "individual_last_name", "from", "organizations", "as", "t1", "join", "organization_contact_individuals", "as", "t2", "on", "t1", ".", "organization_id", "=", "t2", ".", "organization_id", "join", "individuals", "as", "t3", "on", "t2", ".", "individual_id", "=", "t3", ".", "individual_id", "where", "t1", ".", "uk_vat_number", "=", "(", "select", "max", "(", "uk_vat_number", ")", "from", "organizations", ")", "order", "by", "t2", ".", "date_contact_to", "asc", "limit", "value"], "question": "What is the last name of the first individual contacted from the organization with the maximum UK Vat number across all organizations?", "question_toks": ["What", "is", "the", "last", "name", "of", "the", "first", "individual", "contacted", "from", "the", "organization", "with", "the", "maximum", "UK", "Vat", "number", "across", "all", "organizations", "?"], "guid": 3851}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Find the major that is studied by the largest number of students.", "sql": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "voter_2", "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "Major", "FROM", "STUDENT", "GROUP", "BY", "major", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "major", "from", "student", "group", "by", "major", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the major that is studied by the largest number of students.", "question_toks": ["Find", "the", "major", "that", "is", "studied", "by", "the", "largest", "number", "of", "students", "."], "guid": 3852}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Who is the delegate of district 1 in the elections?", "sql": "SELECT Delegate FROM election WHERE District  =  1", "example": {"db_id": "election", "query": "SELECT Delegate FROM election WHERE District  =  1", "query_toks": ["SELECT", "Delegate", "FROM", "election", "WHERE", "District", "=", "1"], "query_toks_no_value": ["select", "delegate", "from", "election", "where", "district", "=", "value"], "question": "Who is the delegate of district 1 in the elections?", "question_toks": ["Who", "is", "the", "delegate", "of", "district", "1", "in", "the", "elections", "?"], "guid": 3853}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Return the names of all counties sorted by population in ascending order.", "sql": "SELECT County_name FROM county ORDER BY Population ASC", "example": {"db_id": "election", "query": "SELECT County_name FROM county ORDER BY Population ASC", "query_toks": ["SELECT", "County_name", "FROM", "county", "ORDER", "BY", "Population", "ASC"], "query_toks_no_value": ["select", "county_name", "from", "county", "order", "by", "population", "asc"], "question": "Return the names of all counties sorted by population in ascending order.", "question_toks": ["Return", "the", "names", "of", "all", "counties", "sorted", "by", "population", "in", "ascending", "order", "."], "guid": 3854}}
{"text": "Customers: customer_id, customer_details; Properties: property_id, property_type_code, property_address, other_details; Residents: resident_id, property_id, date_moved_in, date_moved_out, other_details; Organizations: organization_id, parent_organization_id, organization_details; Services: service_id, organization_id, service_type_code, service_details; Residents_Services: resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details; Things: thing_id, organization_id, Type_of_Thing_Code, service_type_code, service_details; Customer_Events: Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id; Customer_Event_Notes: Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in; Timed_Status_of_Things: thing_id, Date_and_Date, Status_of_Thing_Code | List the customer event id and the corresponding move in date and property id.", "sql": "SELECT customer_event_id ,  date_moved_in ,  property_id FROM customer_events", "example": {"db_id": "local_govt_and_lot", "query": "SELECT customer_event_id ,  date_moved_in ,  property_id FROM customer_events", "query_toks": ["SELECT", "customer_event_id", ",", "date_moved_in", ",", "property_id", "FROM", "customer_events"], "query_toks_no_value": ["select", "customer_event_id", ",", "date_moved_in", ",", "property_id", "from", "customer_events"], "question": "List the customer event id and the corresponding move in date and property id.", "question_toks": ["List", "the", "customer", "event", "id", "and", "the", "corresponding", "move", "in", "date", "and", "property", "id", "."], "guid": 3855}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | Which member names corresponding to members who are not in the Progress Party?", "sql": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\"", "example": {"db_id": "party_people", "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\"", "query_toks": ["SELECT", "T1.member_name", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id", "WHERE", "T2.Party_name", "!", "=", "``", "Progress", "Party", "''"], "query_toks_no_value": ["select", "t1", ".", "member_name", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "where", "t2", ".", "party_name", "!", "=", "value"], "question": "Which member names corresponding to members who are not in the Progress Party?", "question_toks": ["Which", "member", "names", "corresponding", "to", "members", "who", "are", "not", "in", "the", "Progress", "Party", "?"], "guid": 3856}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Report all advisors that advise more than 2 students.", "sql": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2", "example": {"db_id": "voter_2", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2", "query_toks": ["SELECT", "Advisor", "FROM", "STUDENT", "GROUP", "BY", "Advisor", "HAVING", "COUNT", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "advisor", "from", "student", "group", "by", "advisor", "having", "count", "(", "*", ")", ">", "value"], "question": "Report all advisors that advise more than 2 students.", "question_toks": ["Report", "all", "advisors", "that", "advise", "more", "than", "2", "students", "."], "guid": 3857}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Find the distinct first names of all the students who have vice president votes and whose city code is not PIT.", "sql": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\"", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\"", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.VICE_PRESIDENT_Vote", "EXCEPT", "SELECT", "DISTINCT", "Fname", "FROM", "STUDENT", "WHERE", "city_code", "=", "``", "PIT", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "vice_president_vote", "except", "select", "distinct", "fname", "from", "student", "where", "city_code", "=", "value"], "question": "Find the distinct first names of all the students who have vice president votes and whose city code is not PIT.", "question_toks": ["Find", "the", "distinct", "first", "names", "of", "all", "the", "students", "who", "have", "vice", "president", "votes", "and", "whose", "city", "code", "is", "not", "PIT", "."], "guid": 3858}}
{"text": "Services: Service_ID, Service_Type_Code; Participants: Participant_ID, Participant_Type_Code, Participant_Details; Events: Event_ID, Service_ID, Event_Details; Participants_in_Events: Event_ID, Participant_ID | What is the id of the event with the most participants?", "sql": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "local_govt_in_alabama", "query": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "Event_ID", "FROM", "Participants_in_Events", "GROUP", "BY", "Event_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "event_id", "from", "participants_in_events", "group", "by", "event_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id of the event with the most participants?", "question_toks": ["What", "is", "the", "id", "of", "the", "event", "with", "the", "most", "participants", "?"], "guid": 3859}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | Find the name of the most popular party form.", "sql": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "e_government", "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.form_name", "FROM", "forms", "AS", "t1", "JOIN", "party_forms", "AS", "t2", "ON", "t1.form_id", "=", "t2.form_id", "GROUP", "BY", "t2.form_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "form_name", "from", "forms", "as", "t1", "join", "party_forms", "as", "t2", "on", "t1", ".", "form_id", "=", "t2", ".", "form_id", "group", "by", "t2", ".", "form_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name of the most popular party form.", "question_toks": ["Find", "the", "name", "of", "the", "most", "popular", "party", "form", "."], "guid": 3860}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | What are the delegate and name of the county they belong to, for each county?", "sql": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District", "example": {"db_id": "election", "query": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District", "query_toks": ["SELECT", "T2.Delegate", ",", "T1.County_name", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District"], "query_toks_no_value": ["select", "t2", ".", "delegate", ",", "t1", ".", "county_name", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district"], "question": "What are the delegate and name of the county they belong to, for each county?", "question_toks": ["What", "are", "the", "delegate", "and", "name", "of", "the", "county", "they", "belong", "to", ",", "for", "each", "county", "?"], "guid": 3861}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Find the distinct last names of the students who have class president votes.", "sql": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE", "query_toks": ["SELECT", "DISTINCT", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.CLASS_President_VOTE"], "query_toks_no_value": ["select", "distinct", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "class_president_vote"], "question": "Find the distinct last names of the students who have class president votes.", "question_toks": ["Find", "the", "distinct", "last", "names", "of", "the", "students", "who", "have", "class", "president", "votes", "."], "guid": 3862}}
{"text": "department: Department_ID, Name, Creation, Ranking, Budget_in_Billions, Num_Employees; head: head_ID, name, born_state, age; management: department_ID, head_ID, temporary_acting | What are the names of the states where at least 3 heads were born?", "sql": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3", "example": {"db_id": "department_management", "query": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3", "query_toks": ["SELECT", "born_state", "FROM", "head", "GROUP", "BY", "born_state", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "born_state", "from", "head", "group", "by", "born_state", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of the states where at least 3 heads were born?", "question_toks": ["What", "are", "the", "names", "of", "the", "states", "where", "at", "least", "3", "heads", "were", "born", "?"], "guid": 3863}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | Show the locations of parties and the names of the party hosts in ascending order of the age of the host.", "sql": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age", "example": {"db_id": "party_host", "query": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age", "query_toks": ["SELECT", "T3.Location", ",", "T2.Name", "FROM", "party_host", "AS", "T1", "JOIN", "HOST", "AS", "T2", "ON", "T1.Host_ID", "=", "T2.Host_ID", "JOIN", "party", "AS", "T3", "ON", "T1.Party_ID", "=", "T3.Party_ID", "ORDER", "BY", "T2.Age"], "query_toks_no_value": ["select", "t3", ".", "location", ",", "t2", ".", "name", "from", "party_host", "as", "t1", "join", "host", "as", "t2", "on", "t1", ".", "host_id", "=", "t2", ".", "host_id", "join", "party", "as", "t3", "on", "t1", ".", "party_id", "=", "t3", ".", "party_id", "order", "by", "t2", ".", "age"], "question": "Show the locations of parties and the names of the party hosts in ascending order of the age of the host.", "question_toks": ["Show", "the", "locations", "of", "parties", "and", "the", "names", "of", "the", "party", "hosts", "in", "ascending", "order", "of", "the", "age", "of", "the", "host", "."], "guid": 3864}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | How many Annual Meeting events happened in the United Kingdom region?", "sql": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\"", "example": {"db_id": "party_people", "query": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "region", "AS", "t1", "JOIN", "party", "AS", "t2", "ON", "t1.region_id", "=", "t2.region_id", "JOIN", "party_events", "AS", "t3", "ON", "t2.party_id", "=", "t3.party_id", "WHERE", "t1.region_name", "=", "``", "United", "Kingdom", "''", "AND", "t3.Event_Name", "=", "``", "Annaual", "Meeting", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "region", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "join", "party_events", "as", "t3", "on", "t2", ".", "party_id", "=", "t3", ".", "party_id", "where", "t1", ".", "region_name", "=", "value", "and", "t3", ".", "event_name", "=", "value"], "question": "How many Annual Meeting events happened in the United Kingdom region?", "question_toks": ["How", "many", "Annual", "Meeting", "events", "happened", "in", "the", "United", "Kingdom", "region", "?"], "guid": 3865}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | Count the number of parties.", "sql": "SELECT count(*) FROM party", "example": {"db_id": "party_host", "query": "SELECT count(*) FROM party", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "party"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "party"], "question": "Count the number of parties.", "question_toks": ["Count", "the", "number", "of", "parties", "."], "guid": 3866}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | Which nationality has the most hosts?", "sql": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "party_host", "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Nationality", "FROM", "HOST", "GROUP", "BY", "Nationality", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "nationality", "from", "host", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which nationality has the most hosts?", "question_toks": ["Which", "nationality", "has", "the", "most", "hosts", "?"], "guid": 3867}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Show the 3 counties with the smallest population.", "sql": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3", "example": {"db_id": "election", "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3", "query_toks": ["SELECT", "County_name", "FROM", "county", "ORDER", "BY", "Population", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "county_name", "from", "county", "order", "by", "population", "asc", "limit", "value"], "question": "Show the 3 counties with the smallest population.", "question_toks": ["Show", "the", "3", "counties", "with", "the", "smallest", "population", "."], "guid": 3868}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | What are the names of parties that have both delegates on \"Appropriations\" committee and", "sql": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\"", "example": {"db_id": "election", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\"", "query_toks": ["SELECT", "T2.Party", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "WHERE", "T1.Committee", "=", "``", "Appropriations", "''", "INTERSECT", "SELECT", "T2.Party", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "WHERE", "T1.Committee", "=", "``", "Economic", "Matters", "''"], "query_toks_no_value": ["select", "t2", ".", "party", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "where", "t1", ".", "committee", "=", "value", "intersect", "select", "t2", ".", "party", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "where", "t1", ".", "committee", "=", "value"], "question": "What are the names of parties that have both delegates on \"Appropriations\" committee and", "question_toks": ["What", "are", "the", "names", "of", "parties", "that", "have", "both", "delegates", "on", "``", "Appropriations", "''", "committee", "and"], "guid": 3869}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | Count the number of cities in the state of Colorado.", "sql": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"", "example": {"db_id": "e_government", "query": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "addresses", "WHERE", "state_province_county", "=", "``", "Colorado", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "addresses", "where", "state_province_county", "=", "value"], "question": "Count the number of cities in the state of Colorado.", "question_toks": ["Count", "the", "number", "of", "cities", "in", "the", "state", "of", "Colorado", "."], "guid": 3870}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | How many male (sex is M) students have class senator votes in the fall election cycle?", "sql": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"M\" AND T2.Election_Cycle  =  \"Fall\"", "example": {"db_id": "voter_2", "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"M\" AND T2.Election_Cycle  =  \"Fall\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "Class_Senator_Vote", "WHERE", "T1.Sex", "=", "``", "M", "''", "AND", "T2.Election_Cycle", "=", "``", "Fall", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "class_senator_vote", "where", "t1", ".", "sex", "=", "value", "and", "t2", ".", "election_cycle", "=", "value"], "question": "How many male (sex is M) students have class senator votes in the fall election cycle?", "question_toks": ["How", "many", "male", "(", "sex", "is", "M", ")", "students", "have", "class", "senator", "votes", "in", "the", "fall", "election", "cycle", "?"], "guid": 3871}}
{"text": "Customers: customer_id, customer_details; Properties: property_id, property_type_code, property_address, other_details; Residents: resident_id, property_id, date_moved_in, date_moved_out, other_details; Organizations: organization_id, parent_organization_id, organization_details; Services: service_id, organization_id, service_type_code, service_details; Residents_Services: resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details; Things: thing_id, organization_id, Type_of_Thing_Code, service_type_code, service_details; Customer_Events: Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id; Customer_Event_Notes: Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in; Timed_Status_of_Things: thing_id, Date_and_Date, Status_of_Thing_Code | What are the id and details of the customers who have at least 3 events?", "sql": "SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3", "example": {"db_id": "local_govt_and_lot", "query": "SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3", "query_toks": ["SELECT", "T1.customer_id", ",", "T1.customer_details", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Events", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customer_events", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the id and details of the customers who have at least 3 events?", "question_toks": ["What", "are", "the", "id", "and", "details", "of", "the", "customers", "who", "have", "at", "least", "3", "events", "?"], "guid": 3872}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | Which ministers are not a part of the Progress Party?", "sql": "SELECT minister FROM party WHERE party_name != 'Progress Party'", "example": {"db_id": "party_people", "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'", "query_toks": ["SELECT", "minister", "FROM", "party", "WHERE", "party_name", "!", "=", "'Progress", "Party", "'"], "query_toks_no_value": ["select", "minister", "from", "party", "where", "party_name", "!", "=", "value"], "question": "Which ministers are not a part of the Progress Party?", "question_toks": ["Which", "ministers", "are", "not", "a", "part", "of", "the", "Progress", "Party", "?"], "guid": 3873}}
{"text": "Customers: customer_id, customer_details; Properties: property_id, property_type_code, property_address, other_details; Residents: resident_id, property_id, date_moved_in, date_moved_out, other_details; Organizations: organization_id, parent_organization_id, organization_details; Services: service_id, organization_id, service_type_code, service_details; Residents_Services: resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details; Things: thing_id, organization_id, Type_of_Thing_Code, service_type_code, service_details; Customer_Events: Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id; Customer_Event_Notes: Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in; Timed_Status_of_Things: thing_id, Date_and_Date, Status_of_Thing_Code | What is the maximum number that a certain service is provided? List the service id, details and number.", "sql": "SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "local_govt_and_lot", "query": "SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.service_id", ",", "T1.service_details", ",", "count", "(", "*", ")", "FROM", "Services", "AS", "T1", "JOIN", "Residents_Services", "AS", "T2", "ON", "T1.service_id", "=", "T2.service_id", "GROUP", "BY", "T1.service_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "service_id", ",", "t1", ".", "service_details", ",", "count", "(", "*", ")", "from", "services", "as", "t1", "join", "residents_services", "as", "t2", "on", "t1", ".", "service_id", "=", "t2", ".", "service_id", "group", "by", "t1", ".", "service_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the maximum number that a certain service is provided? List the service id, details and number.", "question_toks": ["What", "is", "the", "maximum", "number", "that", "a", "certain", "service", "is", "provided", "?", "List", "the", "service", "id", ",", "details", "and", "number", "."], "guid": 3874}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | What is the zip code the county named \"Howard\" is located in?", "sql": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\"", "example": {"db_id": "election", "query": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\"", "query_toks": ["SELECT", "Zip_code", "FROM", "county", "WHERE", "County_name", "=", "``", "Howard", "''"], "query_toks_no_value": ["select", "zip_code", "from", "county", "where", "county_name", "=", "value"], "question": "What is the zip code the county named \"Howard\" is located in?", "question_toks": ["What", "is", "the", "zip", "code", "the", "county", "named", "``", "Howard", "''", "is", "located", "in", "?"], "guid": 3875}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | How many events are there for each party?", "sql": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "example": {"db_id": "party_people", "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "query_toks": ["SELECT", "T2.party_name", ",", "count", "(", "*", ")", "FROM", "party_events", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id", "GROUP", "BY", "T1.party_id"], "query_toks_no_value": ["select", "t2", ".", "party_name", ",", "count", "(", "*", ")", "from", "party_events", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party_id"], "question": "How many events are there for each party?", "question_toks": ["How", "many", "events", "are", "there", "for", "each", "party", "?"], "guid": 3876}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | Show all ministers and parties they belong to in descending order of the time they took office.", "sql": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC", "example": {"db_id": "party_people", "query": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC", "query_toks": ["SELECT", "minister", ",", "party_name", "FROM", "party", "ORDER", "BY", "took_office", "DESC"], "query_toks_no_value": ["select", "minister", ",", "party_name", "from", "party", "order", "by", "took_office", "desc"], "question": "Show all ministers and parties they belong to in descending order of the time they took office.", "question_toks": ["Show", "all", "ministers", "and", "parties", "they", "belong", "to", "in", "descending", "order", "of", "the", "time", "they", "took", "office", "."], "guid": 3877}}
{"text": "election: Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place; representative: Representative_ID, Name, State, Party, Lifespan | What is the party of the representative that has the smallest number of votes.", "sql": "SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes ASC LIMIT 1", "example": {"db_id": "election_representative", "query": "SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes ASC LIMIT 1", "query_toks": ["SELECT", "T2.Party", "FROM", "election", "AS", "T1", "JOIN", "representative", "AS", "T2", "ON", "T1.Representative_ID", "=", "T2.Representative_ID", "ORDER", "BY", "votes", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "party", "from", "election", "as", "t1", "join", "representative", "as", "t2", "on", "t1", ".", "representative_id", "=", "t2", ".", "representative_id", "order", "by", "votes", "asc", "limit", "value"], "question": "What is the party of the representative that has the smallest number of votes.", "question_toks": ["What", "is", "the", "party", "of", "the", "representative", "that", "has", "the", "smallest", "number", "of", "votes", "."], "guid": 3878}}
{"text": "Customer_Master_Index: master_customer_id, cmi_details; CMI_Cross_References: cmi_cross_ref_id, master_customer_id, source_system_code; Council_Tax: council_tax_id, cmi_cross_ref_id; Business_Rates: business_rates_id, cmi_cross_ref_id; Benefits_Overpayments: council_tax_id, cmi_cross_ref_id; Parking_Fines: council_tax_id, cmi_cross_ref_id; Rent_Arrears: council_tax_id, cmi_cross_ref_id; Electoral_Register: electoral_register_id, cmi_cross_ref_id | Wat is the tax source system code and master customer id of the taxes related to each parking fine id?", "sql": "SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id", "example": {"db_id": "local_govt_mdm", "query": "SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id", "query_toks": ["SELECT", "T1.source_system_code", ",", "T1.master_customer_id", ",", "T2.council_tax_id", "FROM", "CMI_Cross_References", "AS", "T1", "JOIN", "Parking_Fines", "AS", "T2", "ON", "T1.cmi_cross_ref_id", "=", "T2.cmi_cross_ref_id"], "query_toks_no_value": ["select", "t1", ".", "source_system_code", ",", "t1", ".", "master_customer_id", ",", "t2", ".", "council_tax_id", "from", "cmi_cross_references", "as", "t1", "join", "parking_fines", "as", "t2", "on", "t1", ".", "cmi_cross_ref_id", "=", "t2", ".", "cmi_cross_ref_id"], "question": "Wat is the tax source system code and master customer id of the taxes related to each parking fine id?", "question_toks": ["Wat", "is", "the", "tax", "source", "system", "code", "and", "master", "customer", "id", "of", "the", "taxes", "related", "to", "each", "parking", "fine", "id", "?"], "guid": 3879}}
{"text": "Customer_Master_Index: master_customer_id, cmi_details; CMI_Cross_References: cmi_cross_ref_id, master_customer_id, source_system_code; Council_Tax: council_tax_id, cmi_cross_ref_id; Business_Rates: business_rates_id, cmi_cross_ref_id; Benefits_Overpayments: council_tax_id, cmi_cross_ref_id; Parking_Fines: council_tax_id, cmi_cross_ref_id; Rent_Arrears: council_tax_id, cmi_cross_ref_id; Electoral_Register: electoral_register_id, cmi_cross_ref_id | How many business rates are related to each cmi cross reference? List cross reference id, master customer id and the n", "sql": "SELECT T2.cmi_cross_ref_id ,  T2.master_customer_id ,  count(*) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id", "example": {"db_id": "local_govt_mdm", "query": "SELECT T2.cmi_cross_ref_id ,  T2.master_customer_id ,  count(*) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id", "query_toks": ["SELECT", "T2.cmi_cross_ref_id", ",", "T2.master_customer_id", ",", "count", "(", "*", ")", "FROM", "Business_Rates", "AS", "T1", "JOIN", "CMI_Cross_References", "AS", "T2", "ON", "T1.cmi_cross_ref_id", "=", "T2.cmi_cross_ref_id", "GROUP", "BY", "T2.cmi_cross_ref_id"], "query_toks_no_value": ["select", "t2", ".", "cmi_cross_ref_id", ",", "t2", ".", "master_customer_id", ",", "count", "(", "*", ")", "from", "business_rates", "as", "t1", "join", "cmi_cross_references", "as", "t2", "on", "t1", ".", "cmi_cross_ref_id", "=", "t2", ".", "cmi_cross_ref_id", "group", "by", "t2", ".", "cmi_cross_ref_id"], "question": "How many business rates are related to each cmi cross reference? List cross reference id, master customer id and the n", "question_toks": ["How", "many", "business", "rates", "are", "related", "to", "each", "cmi", "cross", "reference", "?", "List", "cross", "reference", "id", ",", "master", "customer", "id", "and", "the", "n"], "guid": 3880}}
{"text": "election: Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place; representative: Representative_ID, Name, State, Party, Lifespan | What is the party that has the largest number of representatives?", "sql": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "election_representative", "query": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Party", ",", "COUNT", "(", "*", ")", "FROM", "representative", "GROUP", "BY", "Party", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "party", ",", "count", "(", "*", ")", "from", "representative", "group", "by", "party", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the party that has the largest number of representatives?", "question_toks": ["What", "is", "the", "party", "that", "has", "the", "largest", "number", "of", "representatives", "?"], "guid": 3881}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Show the name of the party that has the most delegates.", "sql": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1", "example": {"db_id": "election", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.Party", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "GROUP", "BY", "T1.Party", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "party", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the name of the party that has the most delegates.", "question_toks": ["Show", "the", "name", "of", "the", "party", "that", "has", "the", "most", "delegates", "."], "guid": 3882}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Sort the names of all counties in ascending order of population.", "sql": "SELECT County_name FROM county ORDER BY Population ASC", "example": {"db_id": "election", "query": "SELECT County_name FROM county ORDER BY Population ASC", "query_toks": ["SELECT", "County_name", "FROM", "county", "ORDER", "BY", "Population", "ASC"], "query_toks_no_value": ["select", "county_name", "from", "county", "order", "by", "population", "asc"], "question": "Sort the names of all counties in ascending order of population.", "question_toks": ["Sort", "the", "names", "of", "all", "counties", "in", "ascending", "order", "of", "population", "."], "guid": 3883}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | For each party, find its location and the name of its host. Sort the result in ascending order of the age of the host.", "sql": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age", "example": {"db_id": "party_host", "query": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age", "query_toks": ["SELECT", "T3.Location", ",", "T2.Name", "FROM", "party_host", "AS", "T1", "JOIN", "HOST", "AS", "T2", "ON", "T1.Host_ID", "=", "T2.Host_ID", "JOIN", "party", "AS", "T3", "ON", "T1.Party_ID", "=", "T3.Party_ID", "ORDER", "BY", "T2.Age"], "query_toks_no_value": ["select", "t3", ".", "location", ",", "t2", ".", "name", "from", "party_host", "as", "t1", "join", "host", "as", "t2", "on", "t1", ".", "host_id", "=", "t2", ".", "host_id", "join", "party", "as", "t3", "on", "t1", ".", "party_id", "=", "t3", ".", "party_id", "order", "by", "t2", ".", "age"], "question": "For each party, find its location and the name of its host. Sort the result in ascending order of the age of the host.", "question_toks": ["For", "each", "party", ",", "find", "its", "location", "and", "the", "name", "of", "its", "host", ".", "Sort", "the", "result", "in", "ascending", "order", "of", "the", "age", "of", "the", "host", "."], "guid": 3884}}
{"text": "Services: Service_ID, Service_Type_Code; Participants: Participant_ID, Participant_Type_Code, Participant_Details; Events: Event_ID, Service_ID, Event_Details; Participants_in_Events: Event_ID, Participant_ID | Which events id does not have any participant with detail 'Kenyatta Kuhn'?", "sql": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Kenyatta Kuhn'", "example": {"db_id": "local_govt_in_alabama", "query": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Kenyatta Kuhn'", "query_toks": ["SELECT", "event_id", "FROM", "EVENTS", "EXCEPT", "SELECT", "T1.event_id", "FROM", "Participants_in_Events", "AS", "T1", "JOIN", "Participants", "AS", "T2", "ON", "T1.Participant_ID", "=", "T2.Participant_ID", "WHERE", "Participant_Details", "=", "'Kenyatta", "Kuhn", "'"], "query_toks_no_value": ["select", "event_id", "from", "events", "except", "select", "t1", ".", "event_id", "from", "participants_in_events", "as", "t1", "join", "participants", "as", "t2", "on", "t1", ".", "participant_id", "=", "t2", ".", "participant_id", "where", "participant_details", "=", "value"], "question": "Which events id does not have any participant with detail 'Kenyatta Kuhn'?", "question_toks": ["Which", "events", "id", "does", "not", "have", "any", "participant", "with", "detail", "'Kenyatta", "Kuhn", "'", "?"], "guid": 3885}}
{"text": "Customers: customer_id, customer_details; Properties: property_id, property_type_code, property_address, other_details; Residents: resident_id, property_id, date_moved_in, date_moved_out, other_details; Organizations: organization_id, parent_organization_id, organization_details; Services: service_id, organization_id, service_type_code, service_details; Residents_Services: resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details; Things: thing_id, organization_id, Type_of_Thing_Code, service_type_code, service_details; Customer_Events: Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id; Customer_Event_Notes: Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in; Timed_Status_of_Things: thing_id, Date_and_Date, Status_of_Thing_Code | What are the distinct id and type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'", "sql": "SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'", "example": {"db_id": "local_govt_and_lot", "query": "SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'", "query_toks": ["SELECT", "DISTINCT", "T2.thing_id", ",", "T2.Type_of_Thing_Code", "FROM", "Timed_Status_of_Things", "AS", "T1", "JOIN", "Things", "AS", "T2", "ON", "T1.thing_id", "=", "T2.thing_id", "WHERE", "T1.Status_of_Thing_Code", "=", "'Close", "'", "OR", "T1.Date_and_Date", "<", "'2017-06-19", "02:59:21", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "thing_id", ",", "t2", ".", "type_of_thing_code", "from", "timed_status_of_things", "as", "t1", "join", "things", "as", "t2", "on", "t1", ".", "thing_id", "=", "t2", ".", "thing_id", "where", "t1", ".", "status_of_thing_code", "=", "value", "or", "t1", ".", "date_and_date", "<", "value"], "question": "What are the distinct id and type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'", "question_toks": ["What", "are", "the", "distinct", "id", "and", "type", "of", "the", "thing", "that", "has", "the", "status", "'Close", "'", "or", "has", "a", "status", "record", "before", "the", "date", "'2017-06-19", "02:59:21", "'"], "guid": 3886}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | What are the first, middle, and last names of all individuals, ordered by last name?", "sql": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name", "example": {"db_id": "e_government", "query": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name", "query_toks": ["SELECT", "individual_first_name", ",", "individual_middle_name", ",", "individual_last_name", "FROM", "individuals", "ORDER", "BY", "individual_last_name"], "query_toks_no_value": ["select", "individual_first_name", ",", "individual_middle_name", ",", "individual_last_name", "from", "individuals", "order", "by", "individual_last_name"], "question": "What are the first, middle, and last names of all individuals, ordered by last name?", "question_toks": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", "of", "all", "individuals", ",", "ordered", "by", "last", "name", "?"], "guid": 3887}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | Show all party names and the number of members in each party.", "sql": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "example": {"db_id": "party_people", "query": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "query_toks": ["SELECT", "T2.party_name", ",", "count", "(", "*", ")", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id", "GROUP", "BY", "T1.party_id"], "query_toks_no_value": ["select", "t2", ".", "party_name", ",", "count", "(", "*", ")", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party_id"], "question": "Show all party names and the number of members in each party.", "question_toks": ["Show", "all", "party", "names", "and", "the", "number", "of", "members", "in", "each", "party", "."], "guid": 3888}}
{"text": "department: Department_ID, Name, Creation, Ranking, Budget_in_Billions, Num_Employees; head: head_ID, name, born_state, age; management: department_ID, head_ID, temporary_acting | What is the average number of employees of the departments whose rank is between 10 and 15?", "sql": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15", "example": {"db_id": "department_management", "query": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15", "query_toks": ["SELECT", "avg", "(", "num_employees", ")", "FROM", "department", "WHERE", "ranking", "BETWEEN", "10", "AND", "15"], "query_toks_no_value": ["select", "avg", "(", "num_employees", ")", "from", "department", "where", "ranking", "between", "value", "and", "value"], "question": "What is the average number of employees of the departments whose rank is between 10 and 15?", "question_toks": ["What", "is", "the", "average", "number", "of", "employees", "of", "the", "departments", "whose", "rank", "is", "between", "10", "and", "15", "?"], "guid": 3889}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Who are the lieutenant governor and comptroller from the democratic party?", "sql": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"", "example": {"db_id": "election", "query": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"", "query_toks": ["SELECT", "Lieutenant_Governor", ",", "Comptroller", "FROM", "party", "WHERE", "Party", "=", "``", "Democratic", "''"], "query_toks_no_value": ["select", "lieutenant_governor", ",", "comptroller", "from", "party", "where", "party", "=", "value"], "question": "Who are the lieutenant governor and comptroller from the democratic party?", "question_toks": ["Who", "are", "the", "lieutenant", "governor", "and", "comptroller", "from", "the", "democratic", "party", "?"], "guid": 3890}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | Which member names are shared among members in the party with the id 3 and the party with the id 1?", "sql": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1", "example": {"db_id": "party_people", "query": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1", "query_toks": ["SELECT", "member_name", "FROM", "member", "WHERE", "party_id", "=", "3", "INTERSECT", "SELECT", "member_name", "FROM", "member", "WHERE", "party_id", "=", "1"], "query_toks_no_value": ["select", "member_name", "from", "member", "where", "party_id", "=", "value", "intersect", "select", "member_name", "from", "member", "where", "party_id", "=", "value"], "question": "Which member names are shared among members in the party with the id 3 and the party with the id 1?", "question_toks": ["Which", "member", "names", "are", "shared", "among", "members", "in", "the", "party", "with", "the", "id", "3", "and", "the", "party", "with", "the", "id", "1", "?"], "guid": 3891}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | Show the nations that have both hosts older than 45 and hosts younger than 35.", "sql": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35", "example": {"db_id": "party_host", "query": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35", "query_toks": ["SELECT", "Nationality", "FROM", "HOST", "WHERE", "Age", ">", "45", "INTERSECT", "SELECT", "Nationality", "FROM", "HOST", "WHERE", "Age", "<", "35"], "query_toks_no_value": ["select", "nationality", "from", "host", "where", "age", ">", "value", "intersect", "select", "nationality", "from", "host", "where", "age", "<", "value"], "question": "Show the nations that have both hosts older than 45 and hosts younger than 35.", "question_toks": ["Show", "the", "nations", "that", "have", "both", "hosts", "older", "than", "45", "and", "hosts", "younger", "than", "35", "."], "guid": 3892}}
{"text": "Services: Service_ID, Service_Type_Code; Participants: Participant_ID, Participant_Type_Code, Participant_Details; Events: Event_ID, Service_ID, Event_Details; Participants_in_Events: Event_ID, Participant_ID | How many participants belong to the type 'Organizer'?", "sql": "SELECT count(*) FROM participants WHERE participant_type_code  =  'Organizer'", "example": {"db_id": "local_govt_in_alabama", "query": "SELECT count(*) FROM participants WHERE participant_type_code  =  'Organizer'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "participants", "WHERE", "participant_type_code", "=", "'Organizer", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "participants", "where", "participant_type_code", "=", "value"], "question": "How many participants belong to the type 'Organizer'?", "question_toks": ["How", "many", "participants", "belong", "to", "the", "type", "'Organizer", "'", "?"], "guid": 3893}}
{"text": "department: Department_ID, Name, Creation, Ranking, Budget_in_Billions, Num_Employees; head: head_ID, name, born_state, age; management: department_ID, head_ID, temporary_acting | What are the maximum and minimum budget of the departments?", "sql": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department", "example": {"db_id": "department_management", "query": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department", "query_toks": ["SELECT", "max", "(", "budget_in_billions", ")", ",", "min", "(", "budget_in_billions", ")", "FROM", "department"], "query_toks_no_value": ["select", "max", "(", "budget_in_billions", ")", ",", "min", "(", "budget_in_billions", ")", "from", "department"], "question": "What are the maximum and minimum budget of the departments?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "budget", "of", "the", "departments", "?"], "guid": 3894}}
{"text": "department: Department_ID, Name, Creation, Ranking, Budget_in_Billions, Num_Employees; head: head_ID, name, born_state, age; management: department_ID, head_ID, temporary_acting | How many acting statuses are there?", "sql": "SELECT count(DISTINCT temporary_acting) FROM management", "example": {"db_id": "department_management", "query": "SELECT count(DISTINCT temporary_acting) FROM management", "query_toks": ["SELECT", "count", "(", "DISTINCT", "temporary_acting", ")", "FROM", "management"], "query_toks_no_value": ["select", "count", "(", "distinct", "temporary_acting", ")", "from", "management"], "question": "How many acting statuses are there?", "question_toks": ["How", "many", "acting", "statuses", "are", "there", "?"], "guid": 3895}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Sort the names of all counties in descending alphabetical order.", "sql": "SELECT County_name FROM county ORDER BY County_name DESC", "example": {"db_id": "election", "query": "SELECT County_name FROM county ORDER BY County_name DESC", "query_toks": ["SELECT", "County_name", "FROM", "county", "ORDER", "BY", "County_name", "DESC"], "query_toks_no_value": ["select", "county_name", "from", "county", "order", "by", "county_name", "desc"], "question": "Sort the names of all counties in descending alphabetical order.", "question_toks": ["Sort", "the", "names", "of", "all", "counties", "in", "descending", "alphabetical", "order", "."], "guid": 3896}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Show the names of counties that have at least two delegates.", "sql": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2", "example": {"db_id": "election", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T1.County_name", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District", "GROUP", "BY", "T1.County_id", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "county_name", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district", "group", "by", "t1", ".", "county_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the names of counties that have at least two delegates.", "question_toks": ["Show", "the", "names", "of", "counties", "that", "have", "at", "least", "two", "delegates", "."], "guid": 3897}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Return all the information for each election record.", "sql": "SELECT * FROM election", "example": {"db_id": "election", "query": "SELECT * FROM election", "query_toks": ["SELECT", "*", "FROM", "election"], "query_toks_no_value": ["select", "*", "from", "election"], "question": "Return all the information for each election record.", "question_toks": ["Return", "all", "the", "information", "for", "each", "election", "record", "."], "guid": 3898}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | How many parties do we have?", "sql": "SELECT count(DISTINCT party_name) FROM party", "example": {"db_id": "party_people", "query": "SELECT count(DISTINCT party_name) FROM party", "query_toks": ["SELECT", "count", "(", "DISTINCT", "party_name", ")", "FROM", "party"], "query_toks_no_value": ["select", "count", "(", "distinct", "party_name", ")", "from", "party"], "question": "How many parties do we have?", "question_toks": ["How", "many", "parties", "do", "we", "have", "?"], "guid": 3899}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | What are the different region names, ordered by labels?", "sql": "SELECT DISTINCT region_name FROM region ORDER BY Label", "example": {"db_id": "party_people", "query": "SELECT DISTINCT region_name FROM region ORDER BY Label", "query_toks": ["SELECT", "DISTINCT", "region_name", "FROM", "region", "ORDER", "BY", "Label"], "query_toks_no_value": ["select", "distinct", "region_name", "from", "region", "order", "by", "label"], "question": "What are the different region names, ordered by labels?", "question_toks": ["What", "are", "the", "different", "region", "names", ",", "ordered", "by", "labels", "?"], "guid": 3900}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | What are the names of parties and their respective regions?", "sql": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id", "example": {"db_id": "party_people", "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id", "query_toks": ["SELECT", "T1.party_name", ",", "T2.region_name", "FROM", "party", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id"], "query_toks_no_value": ["select", "t1", ".", "party_name", ",", "t2", ".", "region_name", "from", "party", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id"], "question": "What are the names of parties and their respective regions?", "question_toks": ["What", "are", "the", "names", "of", "parties", "and", "their", "respective", "regions", "?"], "guid": 3901}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | How many distinct governors are there?", "sql": "SELECT count(DISTINCT Governor) FROM party", "example": {"db_id": "election", "query": "SELECT count(DISTINCT Governor) FROM party", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Governor", ")", "FROM", "party"], "query_toks_no_value": ["select", "count", "(", "distinct", "governor", ")", "from", "party"], "question": "How many distinct governors are there?", "question_toks": ["How", "many", "distinct", "governors", "are", "there", "?"], "guid": 3902}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | What are the names of organizations that contain the word \"Party\"?", "sql": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"", "example": {"db_id": "e_government", "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"", "query_toks": ["SELECT", "organization_name", "FROM", "organizations", "WHERE", "organization_name", "LIKE", "``", "%", "Party", "%", "''"], "query_toks_no_value": ["select", "organization_name", "from", "organizations", "where", "organization_name", "like", "value"], "question": "What are the names of organizations that contain the word \"Party\"?", "question_toks": ["What", "are", "the", "names", "of", "organizations", "that", "contain", "the", "word", "``", "Party", "''", "?"], "guid": 3903}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | Show different nationalities along with the number of hosts of each nationality.", "sql": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality", "example": {"db_id": "party_host", "query": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "HOST", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "host", "group", "by", "nationality"], "question": "Show different nationalities along with the number of hosts of each nationality.", "question_toks": ["Show", "different", "nationalities", "along", "with", "the", "number", "of", "hosts", "of", "each", "nationality", "."], "guid": 3904}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | How many hosts does each nationality have? List the nationality and the count.", "sql": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality", "example": {"db_id": "party_host", "query": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "HOST", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "host", "group", "by", "nationality"], "question": "How many hosts does each nationality have? List the nationality and the count.", "question_toks": ["How", "many", "hosts", "does", "each", "nationality", "have", "?", "List", "the", "nationality", "and", "the", "count", "."], "guid": 3905}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | Find the payment method and phone of the party with email \"enrico09@example.com\".", "sql": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"", "example": {"db_id": "e_government", "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"", "query_toks": ["SELECT", "payment_method_code", ",", "party_phone", "FROM", "parties", "WHERE", "party_email", "=", "``", "enrico09", "@", "example.com", "''"], "query_toks_no_value": ["select", "payment_method_code", ",", "party_phone", "from", "parties", "where", "party_email", "=", "value"], "question": "Find the payment method and phone of the party with email \"enrico09@example.com\".", "question_toks": ["Find", "the", "payment", "method", "and", "phone", "of", "the", "party", "with", "email", "``", "enrico09", "@", "example.com", "''", "."], "guid": 3906}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | How many members are in each party?", "sql": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "example": {"db_id": "party_people", "query": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "query_toks": ["SELECT", "T2.party_name", ",", "count", "(", "*", ")", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id", "GROUP", "BY", "T1.party_id"], "query_toks_no_value": ["select", "t2", ".", "party_name", ",", "count", "(", "*", ")", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party_id"], "question": "How many members are in each party?", "question_toks": ["How", "many", "members", "are", "in", "each", "party", "?"], "guid": 3907}}
{"text": "Addresses: address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country; Services: service_id, service_type_code, service_name, service_descriptio; Forms: form_id, form_type_code, service_id, form_number, form_name, form_description; Individuals: individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name; Organizations: organization_id, date_formed, organization_name, uk_vat_number; Parties: party_id, payment_method_code, party_phone, party_email; Organization_Contact_Individuals: individual_id, organization_id, date_contact_from, date_contact_to; Party_Addresses: party_id, address_id, date_address_from, address_type_code, date_address_to; Party_Forms: party_id, form_id, date_completion_started, form_status_code, date_fully_completed; Party_Services: booking_id, customer_id, service_id, service_datetime, booking_made_date | Which is the email of the party that has used the services the most number of times?", "sql": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1", "example": {"db_id": "e_government", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.party_email", "FROM", "parties", "AS", "t1", "JOIN", "party_services", "AS", "t2", "ON", "t1.party_id", "=", "t2.customer_id", "GROUP", "BY", "t1.party_email", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "party_email", "from", "parties", "as", "t1", "join", "party_services", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "party_email", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which is the email of the party that has used the services the most number of times?", "question_toks": ["Which", "is", "the", "email", "of", "the", "party", "that", "has", "used", "the", "services", "the", "most", "number", "of", "times", "?"], "guid": 3908}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Which counties have two or more delegates? Give me the county names.", "sql": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2", "example": {"db_id": "election", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T1.County_name", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District", "GROUP", "BY", "T1.County_id", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "county_name", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district", "group", "by", "t1", ".", "county_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which counties have two or more delegates? Give me the county names.", "question_toks": ["Which", "counties", "have", "two", "or", "more", "delegates", "?", "Give", "me", "the", "county", "names", "."], "guid": 3909}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | For each election cycle, report the number of voting records.", "sql": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle", "example": {"db_id": "voter_2", "query": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle", "query_toks": ["SELECT", "Election_Cycle", ",", "count", "(", "*", ")", "FROM", "VOTING_RECORD", "GROUP", "BY", "Election_Cycle"], "query_toks_no_value": ["select", "election_cycle", ",", "count", "(", "*", ")", "from", "voting_record", "group", "by", "election_cycle"], "question": "For each election cycle, report the number of voting records.", "question_toks": ["For", "each", "election", "cycle", ",", "report", "the", "number", "of", "voting", "records", "."], "guid": 3910}}
{"text": "AREA_CODE_STATE: area_code, state; CONTESTANTS: contestant_number, contestant_name; VOTES: vote_id, phone_number, state, contestant_number, created | How many states are there?", "sql": "SELECT count(*) FROM area_code_state", "example": {"db_id": "voter_1", "query": "SELECT count(*) FROM area_code_state", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "area_code_state"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "area_code_state"], "question": "How many states are there?", "question_toks": ["How", "many", "states", "are", "there", "?"], "guid": 3911}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | Count the number of regions.", "sql": "SELECT count(*) FROM region", "example": {"db_id": "party_people", "query": "SELECT count(*) FROM region", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "region"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "region"], "question": "Count the number of regions.", "question_toks": ["Count", "the", "number", "of", "regions", "."], "guid": 3912}}
{"text": "Services: Service_ID, Service_Type_Code; Participants: Participant_ID, Participant_Type_Code, Participant_Details; Events: Event_ID, Service_ID, Event_Details; Participants_in_Events: Event_ID, Participant_ID | How many events had participants whose details had the substring 'Dr.'", "sql": "SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'", "example": {"db_id": "local_govt_in_alabama", "query": "SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "participants", "AS", "T1", "JOIN", "Participants_in_Events", "AS", "T2", "ON", "T1.Participant_ID", "=", "T2.Participant_ID", "WHERE", "T1.participant_details", "LIKE", "'", "%", "Dr.", "%", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "participants", "as", "t1", "join", "participants_in_events", "as", "t2", "on", "t1", ".", "participant_id", "=", "t2", ".", "participant_id", "where", "t1", ".", "participant_details", "like", "value"], "question": "How many events had participants whose details had the substring 'Dr.'", "question_toks": ["How", "many", "events", "had", "participants", "whose", "details", "had", "the", "substring", "'Dr", ".", "'"], "guid": 3913}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Find the distinct last names of all the students who have president votes and whose advisor is not 2192.", "sql": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\"", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\"", "query_toks": ["SELECT", "DISTINCT", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "PRESIDENT_Vote", "EXCEPT", "SELECT", "DISTINCT", "LName", "FROM", "STUDENT", "WHERE", "Advisor", "=", "``", "2192", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "president_vote", "except", "select", "distinct", "lname", "from", "student", "where", "advisor", "=", "value"], "question": "Find the distinct last names of all the students who have president votes and whose advisor is not 2192.", "question_toks": ["Find", "the", "distinct", "last", "names", "of", "all", "the", "students", "who", "have", "president", "votes", "and", "whose", "advisor", "is", "not", "2192", "."], "guid": 3914}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Find the first names of students with age above 22.", "sql": "SELECT Fname FROM STUDENT WHERE Age  >  22", "example": {"db_id": "voter_2", "query": "SELECT Fname FROM STUDENT WHERE Age  >  22", "query_toks": ["SELECT", "Fname", "FROM", "STUDENT", "WHERE", "Age", ">", "22"], "query_toks_no_value": ["select", "fname", "from", "student", "where", "age", ">", "value"], "question": "Find the first names of students with age above 22.", "question_toks": ["Find", "the", "first", "names", "of", "students", "with", "age", "above", "22", "."], "guid": 3915}}
{"text": "Customer_Master_Index: master_customer_id, cmi_details; CMI_Cross_References: cmi_cross_ref_id, master_customer_id, source_system_code; Council_Tax: council_tax_id, cmi_cross_ref_id; Business_Rates: business_rates_id, cmi_cross_ref_id; Benefits_Overpayments: council_tax_id, cmi_cross_ref_id; Parking_Fines: council_tax_id, cmi_cross_ref_id; Rent_Arrears: council_tax_id, cmi_cross_ref_id; Electoral_Register: electoral_register_id, cmi_cross_ref_id | List the council tax ids and their related cmi cross references of all the parking fines.", "sql": "SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines", "example": {"db_id": "local_govt_mdm", "query": "SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines", "query_toks": ["SELECT", "council_tax_id", ",", "cmi_cross_ref_id", "FROM", "parking_fines"], "query_toks_no_value": ["select", "council_tax_id", ",", "cmi_cross_ref_id", "from", "parking_fines"], "question": "List the council tax ids and their related cmi cross references of all the parking fines.", "question_toks": ["List", "the", "council", "tax", "ids", "and", "their", "related", "cmi", "cross", "references", "of", "all", "the", "parking", "fines", "."], "guid": 3916}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | Give me the theme and location of each party.", "sql": "SELECT Party_Theme ,  LOCATION FROM party", "example": {"db_id": "party_host", "query": "SELECT Party_Theme ,  LOCATION FROM party", "query_toks": ["SELECT", "Party_Theme", ",", "LOCATION", "FROM", "party"], "query_toks_no_value": ["select", "party_theme", ",", "location", "from", "party"], "question": "Give me the theme and location of each party.", "question_toks": ["Give", "me", "the", "theme", "and", "location", "of", "each", "party", "."], "guid": 3917}}
{"text": "election: Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place; representative: Representative_ID, Name, State, Party, Lifespan | How many elections are there?", "sql": "SELECT count(*) FROM election", "example": {"db_id": "election_representative", "query": "SELECT count(*) FROM election", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "election"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "election"], "question": "How many elections are there?", "question_toks": ["How", "many", "elections", "are", "there", "?"], "guid": 3918}}
{"text": "Customer_Master_Index: master_customer_id, cmi_details; CMI_Cross_References: cmi_cross_ref_id, master_customer_id, source_system_code; Council_Tax: council_tax_id, cmi_cross_ref_id; Business_Rates: business_rates_id, cmi_cross_ref_id; Benefits_Overpayments: council_tax_id, cmi_cross_ref_id; Parking_Fines: council_tax_id, cmi_cross_ref_id; Rent_Arrears: council_tax_id, cmi_cross_ref_id; Electoral_Register: electoral_register_id, cmi_cross_ref_id | List all information about customer master index, and sort them by details in descending order.", "sql": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC", "example": {"db_id": "local_govt_mdm", "query": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC", "query_toks": ["SELECT", "*", "FROM", "customer_master_index", "ORDER", "BY", "cmi_details", "DESC"], "query_toks_no_value": ["select", "*", "from", "customer_master_index", "order", "by", "cmi_details", "desc"], "question": "List all information about customer master index, and sort them by details in descending order.", "question_toks": ["List", "all", "information", "about", "customer", "master", "index", ",", "and", "sort", "them", "by", "details", "in", "descending", "order", "."], "guid": 3919}}
{"text": "election: Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place; representative: Representative_ID, Name, State, Party, Lifespan | What are the names and parties of representatives?", "sql": "SELECT Name ,  Party FROM representative", "example": {"db_id": "election_representative", "query": "SELECT Name ,  Party FROM representative", "query_toks": ["SELECT", "Name", ",", "Party", "FROM", "representative"], "query_toks_no_value": ["select", "name", ",", "party", "from", "representative"], "question": "What are the names and parties of representatives?", "question_toks": ["What", "are", "the", "names", "and", "parties", "of", "representatives", "?"], "guid": 3920}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | How many voting records do we have?", "sql": "SELECT count(*) FROM VOTING_RECORD", "example": {"db_id": "voter_2", "query": "SELECT count(*) FROM VOTING_RECORD", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "VOTING_RECORD"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "voting_record"], "question": "How many voting records do we have?", "question_toks": ["How", "many", "voting", "records", "do", "we", "have", "?"], "guid": 3921}}
{"text": "county: County_Id, County_name, Population, Zip_code; party: Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate; election: Election_ID, Counties_Represented, District, Delegate, Party, First_Elected, Committee | Who were the comptrollers of the parties associated with the delegates from district 1 or district 2?", "sql": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2", "example": {"db_id": "election", "query": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2", "query_toks": ["SELECT", "T2.Comptroller", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "WHERE", "T1.District", "=", "1", "OR", "T1.District", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "comptroller", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "where", "t1", ".", "district", "=", "value", "or", "t1", ".", "district", "=", "value"], "question": "Who were the comptrollers of the parties associated with the delegates from district 1 or district 2?", "question_toks": ["Who", "were", "the", "comptrollers", "of", "the", "parties", "associated", "with", "the", "delegates", "from", "district", "1", "or", "district", "2", "?"], "guid": 3922}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | Show party names and the number of events for each party.", "sql": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "example": {"db_id": "party_people", "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "query_toks": ["SELECT", "T2.party_name", ",", "count", "(", "*", ")", "FROM", "party_events", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id", "GROUP", "BY", "T1.party_id"], "query_toks_no_value": ["select", "t2", ".", "party_name", ",", "count", "(", "*", ")", "from", "party_events", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party_id"], "question": "Show party names and the number of events for each party.", "question_toks": ["Show", "party", "names", "and", "the", "number", "of", "events", "for", "each", "party", "."], "guid": 3923}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Show the advisors of the students whose city of residence has city code \"BAL\".", "sql": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"", "example": {"db_id": "voter_2", "query": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"", "query_toks": ["SELECT", "Advisor", "FROM", "STUDENT", "WHERE", "city_code", "=", "``", "BAL", "''"], "query_toks_no_value": ["select", "advisor", "from", "student", "where", "city_code", "=", "value"], "question": "Show the advisors of the students whose city of residence has city code \"BAL\".", "question_toks": ["Show", "the", "advisors", "of", "the", "students", "whose", "city", "of", "residence", "has", "city", "code", "``", "BAL", "''", "."], "guid": 3924}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | What is the average age of female (sex is F) students?", "sql": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\"", "example": {"db_id": "voter_2", "query": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\"", "query_toks": ["SELECT", "avg", "(", "Age", ")", "FROM", "STUDENT", "WHERE", "Sex", "=", "``", "F", "''"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "student", "where", "sex", "=", "value"], "question": "What is the average age of female (sex is F) students?", "question_toks": ["What", "is", "the", "average", "age", "of", "female", "(", "sex", "is", "F", ")", "students", "?"], "guid": 3925}}
{"text": "AREA_CODE_STATE: area_code, state; CONTESTANTS: contestant_number, contestant_name; VOTES: vote_id, phone_number, state, contestant_number, created | How many contestants did not get voted?", "sql": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )", "example": {"db_id": "voter_1", "query": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "contestants", "WHERE", "contestant_number", "NOT", "IN", "(", "SELECT", "contestant_number", "FROM", "votes", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "contestants", "where", "contestant_number", "not", "in", "(", "select", "contestant_number", "from", "votes", ")"], "question": "How many contestants did not get voted?", "question_toks": ["How", "many", "contestants", "did", "not", "get", "voted", "?"], "guid": 3926}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | What are the distinct ages of students who have secretary votes in the fall election cycle?", "sql": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\"", "example": {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\"", "query_toks": ["SELECT", "DISTINCT", "T1.Age", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.Secretary_Vote", "WHERE", "T2.Election_Cycle", "=", "``", "Fall", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "age", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "secretary_vote", "where", "t2", ".", "election_cycle", "=", "value"], "question": "What are the distinct ages of students who have secretary votes in the fall election cycle?", "question_toks": ["What", "are", "the", "distinct", "ages", "of", "students", "who", "have", "secretary", "votes", "in", "the", "fall", "election", "cycle", "?"], "guid": 3927}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | Which party had the most hosts? Give me the party location.", "sql": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1", "example": {"db_id": "party_host", "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1", "query_toks": ["SELECT", "LOCATION", "FROM", "party", "ORDER", "BY", "Number_of_hosts", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "location", "from", "party", "order", "by", "number_of_hosts", "desc", "limit", "value"], "question": "Which party had the most hosts? Give me the party location.", "question_toks": ["Which", "party", "had", "the", "most", "hosts", "?", "Give", "me", "the", "party", "location", "."], "guid": 3928}}
{"text": "Student: StuID, LName, Fname, Age, Sex, Major, Advisor, city_code; Voting_record: StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote | Which advisors are advising more than 2 students?", "sql": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2", "example": {"db_id": "voter_2", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2", "query_toks": ["SELECT", "Advisor", "FROM", "STUDENT", "GROUP", "BY", "Advisor", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "advisor", "from", "student", "group", "by", "advisor", "having", "count", "(", "*", ")", ">", "value"], "question": "Which advisors are advising more than 2 students?", "question_toks": ["Which", "advisors", "are", "advising", "more", "than", "2", "students", "?"], "guid": 3929}}
{"text": "party: Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts; host: Host_ID, Name, Nationality, Age; party_host: Party_ID, Host_ID, Is_Main_in_Charge | What are the first year and last year of the parties whose theme is \"Spring\" or \"Teqnology\"?", "sql": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"", "example": {"db_id": "party_host", "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"", "query_toks": ["SELECT", "First_year", ",", "Last_year", "FROM", "party", "WHERE", "Party_Theme", "=", "``", "Spring", "''", "OR", "Party_Theme", "=", "``", "Teqnology", "''"], "query_toks_no_value": ["select", "first_year", ",", "last_year", "from", "party", "where", "party_theme", "=", "value", "or", "party_theme", "=", "value"], "question": "What are the first year and last year of the parties whose theme is \"Spring\" or \"Teqnology\"?", "question_toks": ["What", "are", "the", "first", "year", "and", "last", "year", "of", "the", "parties", "whose", "theme", "is", "``", "Spring", "''", "or", "``", "Teqnology", "''", "?"], "guid": 3930}}
{"text": "election: Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place; representative: Representative_ID, Name, State, Party, Lifespan | Show the parties that have both representatives in New York state and representatives in Pennsylvania state.", "sql": "SELECT Party FROM representative WHERE State  =  \"New York\" INTERSECT SELECT Party FROM representative WHERE State  =  \"Pennsylvania\"", "example": {"db_id": "election_representative", "query": "SELECT Party FROM representative WHERE State  =  \"New York\" INTERSECT SELECT Party FROM representative WHERE State  =  \"Pennsylvania\"", "query_toks": ["SELECT", "Party", "FROM", "representative", "WHERE", "State", "=", "``", "New", "York", "''", "INTERSECT", "SELECT", "Party", "FROM", "representative", "WHERE", "State", "=", "``", "Pennsylvania", "''"], "query_toks_no_value": ["select", "party", "from", "representative", "where", "state", "=", "value", "intersect", "select", "party", "from", "representative", "where", "state", "=", "value"], "question": "Show the parties that have both representatives in New York state and representatives in Pennsylvania state.", "question_toks": ["Show", "the", "parties", "that", "have", "both", "representatives", "in", "New", "York", "state", "and", "representatives", "in", "Pennsylvania", "state", "."], "guid": 3931}}
{"text": "region: Region_ID, Region_name, Date, Label, Format, Catalogue; party: Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name; member: Member_ID, Member_Name, Party_ID, In_office; party_events: Event_ID, Event_Name, Party_ID, Member_in_charge_ID | Show the minister who took office after 1961 or before 1959.", "sql": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959", "example": {"db_id": "party_people", "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959", "query_toks": ["SELECT", "minister", "FROM", "party", "WHERE", "took_office", ">", "1961", "OR", "took_office", "<", "1959"], "query_toks_no_value": ["select", "minister", "from", "party", "where", "took_office", ">", "value", "or", "took_office", "<", "value"], "question": "Show the minister who took office after 1961 or before 1959.", "question_toks": ["Show", "the", "minister", "who", "took", "office", "after", "1961", "or", "before", "1959", "."], "guid": 3932}}
{"text": "Customers: customer_id, customer_details; Properties: property_id, property_type_code, property_address, other_details; Residents: resident_id, property_id, date_moved_in, date_moved_out, other_details; Organizations: organization_id, parent_organization_id, organization_details; Services: service_id, organization_id, service_type_code, service_details; Residents_Services: resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details; Things: thing_id, organization_id, Type_of_Thing_Code, service_type_code, service_details; Customer_Events: Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id; Customer_Event_Notes: Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in; Timed_Status_of_Things: thing_id, Date_and_Date, Status_of_Thing_Code | What are the distinct move in dates of the residents?", "sql": "SELECT DISTINCT date_moved_in FROM residents", "example": {"db_id": "local_govt_and_lot", "query": "SELECT DISTINCT date_moved_in FROM residents", "query_toks": ["SELECT", "DISTINCT", "date_moved_in", "FROM", "residents"], "query_toks_no_value": ["select", "distinct", "date_moved_in", "from", "residents"], "question": "What are the distinct move in dates of the residents?", "question_toks": ["What", "are", "the", "distinct", "move", "in", "dates", "of", "the", "residents", "?"], "guid": 3933}}